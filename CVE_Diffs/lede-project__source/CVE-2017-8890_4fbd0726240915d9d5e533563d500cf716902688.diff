lede-project__source
commit 4fbd0726240915d9d5e533563d500cf716902688
Author:     Jo-Philipp Wich <jo@mein.io>
AuthorDate: Wed Jun 7 21:24:41 2017 +0200
Commit:     Jo-Philipp Wich <jo@mein.io>
CommitDate: Wed Jun 7 21:24:41 2017 +0200

    kernel: update kernel 4.4 to 4.4.71
    
    Fixes the following security vulnerabilities:
    
    CVE-2017-8890
    The inet_csk_clone_lock function in net/ipv4/inet_connection_sock.c in the
    Linux kernel through 4.10.15 allows attackers to cause a denial of service
    (double free) or possibly have unspecified other impact by leveraging use
    of the accept system call.
    
    CVE-2017-9074
    The IPv6 fragmentation implementation in the Linux kernel through 4.11.1
    does not consider that the nexthdr field may be associated with an invalid
    option, which allows local users to cause a denial of service (out-of-bounds
    read and BUG) or possibly have unspecified other impact via crafted socket
    and send system calls.
    
    CVE-2017-9075
    The sctp_v6_create_accept_sk function in net/sctp/ipv6.c in the Linux kernel
    through 4.11.1 mishandles inheritance, which allows local users to cause a
    denial of service or possibly have unspecified other impact via crafted
    system calls, a related issue to CVE-2017-8890.
    
    CVE-2017-9076
    The dccp_v6_request_recv_sock function in net/dccp/ipv6.c in the Linux
    kernel through 4.11.1 mishandles inheritance, which allows local users to
    cause a denial of service or possibly have unspecified other impact via
    crafted system calls, a related issue to CVE-2017-8890.
    
    CVE-2017-9077
    The tcp_v6_syn_recv_sock function in net/ipv6/tcp_ipv6.c in the Linux kernel
    through 4.11.1 mishandles inheritance, which allows local users to cause a
    denial of service or possibly have unspecified other impact via crafted
    system calls, a related issue to CVE-2017-8890.
    
    CVE-2017-9242
    The __ip6_append_data function in net/ipv6/ip6_output.c in the Linux kernel
    through 4.11.3 is too late in checking whether an overwrite of an skb data
    structure may occur, which allows local users to cause a denial of service
    (system crash) via crafted system calls.
    
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8890
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9074
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9075
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9076
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9077
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9242
    Ref: https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.4.71
    
    Signed-off-by: Jo-Philipp Wich <jo@mein.io>

diff --git a/include/kernel-version.mk b/include/kernel-version.mk
index f4fa9b1348..892db7c4ef 100644
--- a/include/kernel-version.mk
+++ b/include/kernel-version.mk
@@ -3,10 +3,10 @@
 LINUX_RELEASE?=1
 
 LINUX_VERSION-3.18 = .43
-LINUX_VERSION-4.4 = .70
+LINUX_VERSION-4.4 = .71
 
 LINUX_KERNEL_HASH-3.18.43 = 1236e8123a6ce537d5029232560966feed054ae31776fe8481dd7d18cdd5492c
-LINUX_KERNEL_HASH-4.4.70 = c0a8b36ca9044a91eccb475cc1c467cee1f5b296f30ca06db2b91e0589072dfa
+LINUX_KERNEL_HASH-4.4.71 = 44cd5532d6df32197fd0f89e6f8c542fcfb76b52155a4d3a609ef4898522e6ab
 
 ifdef KERNEL_PATCHVER
   LINUX_VERSION:=$(KERNEL_PATCHVER)$(strip $(LINUX_VERSION-$(KERNEL_PATCHVER)))
diff --git a/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch b/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
index e3f60e2fc9..1ec2b81e1a 100644
--- a/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
+++ b/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
@@ -68,7 +68,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  static void rt_fibinfo_free(struct rtable __rcu **rtp)
 --- a/net/ipv4/fib_trie.c
 +++ b/net/ipv4/fib_trie.c
-@@ -2368,6 +2368,7 @@ static const char *const rtn_type_names[
+@@ -2370,6 +2370,7 @@ static const char *const rtn_type_names[
  	[RTN_THROW] = "THROW",
  	[RTN_NAT] = "NAT",
  	[RTN_XRESOLVE] = "XRESOLVE",
diff --git a/target/linux/generic/patches-4.4/902-debloat_proc.patch b/target/linux/generic/patches-4.4/902-debloat_proc.patch
index 2f54db5201..98e78183de 100644
--- a/target/linux/generic/patches-4.4/902-debloat_proc.patch
+++ b/target/linux/generic/patches-4.4/902-debloat_proc.patch
@@ -184,7 +184,7 @@
  
 --- a/net/ipv4/fib_trie.c
 +++ b/net/ipv4/fib_trie.c
-@@ -2639,10 +2639,12 @@ static const struct file_operations fib_
+@@ -2641,10 +2641,12 @@ static const struct file_operations fib_
  
  int __net_init fib_proc_init(struct net *net)
  {
@@ -199,7 +199,7 @@
  			 &fib_triestat_fops))
  		goto out2;
  
-@@ -2652,17 +2654,21 @@ int __net_init fib_proc_init(struct net
+@@ -2654,17 +2656,21 @@ int __net_init fib_proc_init(struct net
  	return 0;
  
  out3:
