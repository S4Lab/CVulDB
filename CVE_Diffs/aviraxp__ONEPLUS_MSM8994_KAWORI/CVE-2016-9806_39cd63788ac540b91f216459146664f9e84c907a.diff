aviraxp__ONEPLUS_MSM8994_KAWORI
commit 39cd63788ac540b91f216459146664f9e84c907a
Author:     Herbert Xu <herbert@gondor.apana.org.au>
AuthorDate: Mon May 16 17:28:16 2016 +0800
Commit:     Wang Han <416810799@qq.com>
CommitDate: Sun Apr 30 01:00:03 2017 -0700

    netlink: Fix dump skb leak/double free(CVE-2016-9806)
    
    When we free cb->skb after a dump, we do it after releasing the
    lock.  This means that a new dump could have started in the time
    being and we'll end up freeing their skb instead of ours.
    
    This patch saves the skb and module before we unlock so we free
    the right memory.
    
    Change-Id: I78a8064e9844db8a1d82c58c8a9f542df5bfc1bb
    Fixes: 16b304f3404f ("netlink: Eliminate kmalloc in netlink dump operation.")
    Reported-by: Baozeng Ding <sploving1@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/netlink/af_netlink.c b/net/netlink/af_netlink.c
index 618288073f9..7f33f3a0090 100644
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@ -2459,6 +2459,7 @@ static int netlink_dump(struct sock *sk)
 	struct netlink_callback *cb;
 	struct sk_buff *skb = NULL;
 	struct nlmsghdr *nlh;
+	struct module *module;
 	int len, err = -ENOBUFS;
 	int alloc_size;
 
@@ -2508,9 +2509,10 @@ static int netlink_dump(struct sock *sk)
 	if (cb->done)
 		cb->done(cb);
 	nlk->cb = NULL;
+	module = cb->module;
 	mutex_unlock(nlk->cb_mutex);
 
-	module_put(cb->module);
+	module_put(module);
 	netlink_consume_callback(cb);
 	return 0;
 
