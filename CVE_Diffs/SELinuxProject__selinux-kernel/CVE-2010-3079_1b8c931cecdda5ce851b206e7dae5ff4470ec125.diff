SELinuxProject__selinux-kernel
commit 1b8c931cecdda5ce851b206e7dae5ff4470ec125
Author:     Chris Wright <chrisw@sous-sol.org>
AuthorDate: Thu Sep 9 16:34:59 2010 -0700
Commit:     Greg Kroah-Hartman <gregkh@suse.de>
CommitDate: Mon Sep 20 13:36:34 2010 -0700

    tracing: t_start: reset FTRACE_ITER_HASH in case of seek/pread
    
    commit df09162550fbb53354f0c88e85b5d0e6129ee9cc upstream.
    
    Be sure to avoid entering t_show() with FTRACE_ITER_HASH set without
    having properly started the iterator to iterate the hash.  This case is
    degenerate and, as discovered by Robert Swiecki, can cause t_hash_show()
    to misuse a pointer.  This causes a NULL ptr deref with possible security
    implications.  Tracked as CVE-2010-3079.
    
    Cc: Robert Swiecki <swiecki@google.com>
    Cc: Eugene Teo <eugene@redhat.com>
    Signed-off-by: Chris Wright <chrisw@sous-sol.org>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/kernel/trace/ftrace.c b/kernel/trace/ftrace.c
index 67b9a3a43a20..6b316b3928a3 100644
--- a/kernel/trace/ftrace.c
+++ b/kernel/trace/ftrace.c
@@ -1510,6 +1510,8 @@ static void *t_start(struct seq_file *m, loff_t *pos)
 		if (*pos > 0)
 			return t_hash_start(m, pos);
 		iter->flags |= FTRACE_ITER_PRINTALL;
+		/* reset in case of seek/pread */
+		iter->flags &= ~FTRACE_ITER_HASH;
 		return iter;
 	}
 
