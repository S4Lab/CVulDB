M-Bab__linux-kernel-amdgpu
commit e706ddc32450204a854bc4c449260057cb9d703c
Author:     Jim Mattson <jmattson@google.com>
AuthorDate: Tue Sep 12 13:02:54 2017 -0700
Commit:     Seth Forshee <seth.forshee@canonical.com>
CommitDate: Fri Oct 6 08:25:11 2017 -0500

    kvm: nVMX: Don't allow L2 to access the hardware CR8
    
    BugLink: http://bugs.launchpad.net/bugs/1721777
    
    commit 51aa68e7d57e3217192d88ce90fd5b8ef29ec94f upstream.
    
    If L1 does not specify the "use TPR shadow" VM-execution control in
    vmcs12, then L0 must specify the "CR8-load exiting" and "CR8-store
    exiting" VM-execution controls in vmcs02. Failure to do so will give
    the L2 VM unrestricted read/write access to the hardware CR8.
    
    This fixes CVE-2017-12154.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 1917af45605f..1b8b1a1bf7e9 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -10271,6 +10271,11 @@ static int prepare_vmcs02(struct kvm_vcpu *vcpu, struct vmcs12 *vmcs12,
 	if (exec_control & CPU_BASED_TPR_SHADOW) {
 		vmcs_write64(VIRTUAL_APIC_PAGE_ADDR, -1ull);
 		vmcs_write32(TPR_THRESHOLD, vmcs12->tpr_threshold);
+	} else {
+#ifdef CONFIG_X86_64
+		exec_control |= CPU_BASED_CR8_LOAD_EXITING |
+				CPU_BASED_CR8_STORE_EXITING;
+#endif
 	}
 
 	/*
