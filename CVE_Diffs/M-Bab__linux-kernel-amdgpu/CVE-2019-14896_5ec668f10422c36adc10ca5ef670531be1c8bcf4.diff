M-Bab__linux-kernel-amdgpu
commit 5ec668f10422c36adc10ca5ef670531be1c8bcf4
Author:     Wen Huang <huangwenabc@gmail.com>
AuthorDate: Tue Nov 26 09:39:13 2019 +0100
Commit:     Seth Forshee <seth.forshee@canonical.com>
CommitDate: Thu Dec 5 16:31:27 2019 -0600

    UBUNTU: SAUCE: libertas: Fix two buffer overflows at parsing bss descriptor
    
    add_ie_rates() copys rates without checking the length
    in bss descriptor from remote AP.when victim connects to
    remote attacker, this may trigger buffer overflow.
    lbs_ibss_join_existing() copys rates without checking the length
    in bss descriptor from remote IBSS node.when victim connects to
    remote attacker, this may trigger buffer overflow.
    Fix them by putting the length check before performing copy.
    
    This fix addresses CVE-2019-14896 and CVE-2019-14897.
    
    Signed-off-by: Wen Huang <huangwenabc@gmail.com>
    
    CVE-2019-14896
    CVE-2019-14897
    
    (cherry picked from https://patchwork.kernel.org/patch/11257187/)
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Kleber Sacilotto de Souza <kleber.souza@canonical.com>
    Acked-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

diff --git a/drivers/net/wireless/marvell/libertas/cfg.c b/drivers/net/wireless/marvell/libertas/cfg.c
index 57edfada0665..290280764884 100644
--- a/drivers/net/wireless/marvell/libertas/cfg.c
+++ b/drivers/net/wireless/marvell/libertas/cfg.c
@@ -273,6 +273,10 @@ add_ie_rates(u8 *tlv, const u8 *ie, int *nrates)
 	int hw, ap, ap_max = ie[1];
 	u8 hw_rate;
 
+	if (ap_max > MAX_RATES) {
+		lbs_deb_assoc("invalid rates\n");
+		return tlv;
+	}
 	/* Advance past IE header */
 	ie += 2;
 
@@ -1777,6 +1781,10 @@ static int lbs_ibss_join_existing(struct lbs_private *priv,
 	} else {
 		int hw, i;
 		u8 rates_max = rates_eid[1];
+		if (rates_max > MAX_RATES) {
+			lbs_deb_join("invalid rates");
+			goto out;
+		}
 		u8 *rates = cmd.bss.rates;
 		for (hw = 0; hw < ARRAY_SIZE(lbs_rates); hw++) {
 			u8 hw_rate = lbs_rates[hw].bitrate / 5;
