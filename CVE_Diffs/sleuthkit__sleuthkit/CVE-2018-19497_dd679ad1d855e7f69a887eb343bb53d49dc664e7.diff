sleuthkit__sleuthkit
commit dd679ad1d855e7f69a887eb343bb53d49dc664e7
Author:     Jordy Zomer <zome8499@student.alfa-college.nl>
AuthorDate: Sat Nov 24 12:19:38 2018 +0100
Commit:     GitHub <noreply@github.com>
CommitDate: Sat Nov 24 12:19:38 2018 +0100

    Fix CVE-2018-19497.
    
    An issue was discovered in The Sleuth Kit (TSK) through 4.6.4.
    The "tsk_getu16(hfs->fs_info.endian, &rec_buf[rec_off2])" call in hfs_dir_open_meta_cb in
    tsk/fs/hfs_dent.c does not properly check boundaries. This results in
    a crash (SEGV on unknown address
    READ memory access)
    when reading too much in the destination buffer.

diff --git a/tsk/fs/hfs.c b/tsk/fs/hfs.c
index 00f1720b..0dec5071 100644
--- a/tsk/fs/hfs.c
+++ b/tsk/fs/hfs.c
@@ -956,7 +956,8 @@ hfs_cat_traverse(HFS_INFO * hfs,
                 key = (hfs_btree_key_cat *) & node[rec_off];
 
                 keylen = 2 + tsk_getu16(hfs->fs_info.endian, key->key_len);
-                if ((keylen) > nodesize) {
+               
+                if (keylen > nodesize - rec_off) {
                     tsk_error_set_errno(TSK_ERR_FS_GENFS);
                     tsk_error_set_errstr
                         ("hfs_cat_traverse: length of key %d in index node %d too large (%d vs %"
