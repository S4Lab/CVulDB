beagleboard__linux
commit 7446344baafba2f23da58ac837b86770ec977b90
Author:     Michael S. Tsirkin <mst@redhat.com>
AuthorDate: Sat May 12 00:33:10 2018 +0300
Commit:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>
CommitDate: Tue Jun 26 08:06:33 2018 +0800

    vhost: fix info leak due to uninitialized memory
    
    commit 670ae9caaca467ea1bfd325cb2a5c98ba87f94ad upstream.
    
    struct vhost_msg within struct vhost_msg_node is copied to userspace.
    Unfortunately it turns out on 64 bit systems vhost_msg has padding after
    type which gcc doesn't initialize, leaking 4 uninitialized bytes to
    userspace.
    
    This padding also unfortunately means 32 bit users of this interface are
    broken on a 64 bit kernel which will need to be fixed separately.
    
    Fixes: CVE-2018-1118
    Cc: stable@vger.kernel.org
    Reported-by: Kevin Easton <kevin@guarana.org>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reported-by: syzbot+87cfa083e727a224754b@syzkaller.appspotmail.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 50e48afd88ff..244e5256c526 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -2382,6 +2382,9 @@ struct vhost_msg_node *vhost_new_msg(struct vhost_virtqueue *vq, int type)
 	struct vhost_msg_node *node = kmalloc(sizeof *node, GFP_KERNEL);
 	if (!node)
 		return NULL;
+
+	/* Make sure all padding within the structure is initialized. */
+	memset(&node->msg, 0, sizeof node->msg);
 	node->vq = vq;
 	node->msg.type = type;
 	return node;
