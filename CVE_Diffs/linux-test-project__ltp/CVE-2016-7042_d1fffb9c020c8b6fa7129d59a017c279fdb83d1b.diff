linux-test-project__ltp
commit d1fffb9c020c8b6fa7129d59a017c279fdb83d1b
Author:     Guangwen Feng <fenggw-fnst@cn.fujitsu.com>
AuthorDate: Thu Aug 3 13:29:27 2017 +0800
Commit:     Cyril Hrubis <chrubis@suse.cz>
CommitDate: Fri Aug 18 17:04:49 2017 +0200

    Test for CVE-2016-7042 in /proc/keys show function
    
    Signed-off-by: Guangwen Feng <fenggw-fnst@cn.fujitsu.com>
    Signed-off-by: Cyril Hrubis <chrubis@suse.cz>

diff --git a/include/lapi/keyctl.h b/include/lapi/keyctl.h
index c3b1ca939..ed3b7bd8f 100644
--- a/include/lapi/keyctl.h
+++ b/include/lapi/keyctl.h
@@ -43,6 +43,10 @@
 # define KEYCTL_SETPERM 5
 #endif
 
+#ifndef KEYCTL_UNLINK
+# define KEYCTL_UNLINK 9
+#endif
+
 #ifndef KEY_SPEC_THREAD_KEYRING
 # define KEY_SPEC_THREAD_KEYRING -1
 #endif
diff --git a/runtest/cve b/runtest/cve
index 422c07553..468f0b23b 100644
--- a/runtest/cve
+++ b/runtest/cve
@@ -7,6 +7,7 @@ cve-2014-0196 cve-2014-0196
 cve-2015-0235 gethostbyname_r01
 cve-2016-4997 cve-2016-4997
 cve-2016-5195 dirtyc0w
+cve-2016-7042 cve-2016-7042
 cve-2016-7117 cve-2016-7117
 cve-2017-2671 cve-2017-2671
 cve-2017-5669 cve-2017-5669
diff --git a/testcases/cve/.gitignore b/testcases/cve/.gitignore
index 298cf81f2..ea9036df6 100644
--- a/testcases/cve/.gitignore
+++ b/testcases/cve/.gitignore
@@ -1,6 +1,7 @@
 cve-2012-0957
 cve-2014-0196
 cve-2016-4997
+cve-2016-7042
 cve-2016-7117
 cve-2017-2671
 cve-2017-6951
diff --git a/testcases/cve/cve-2016-7042.c b/testcases/cve/cve-2016-7042.c
new file mode 100644
index 000000000..228974f51
--- /dev/null
+++ b/testcases/cve/cve-2016-7042.c
@@ -0,0 +1,92 @@
+/*
+ * Copyright (c) 2017 Fujitsu Ltd.
+ * Author: Guangwen Feng <fenggw-fnst@cn.fujitsu.com>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program, if not, see <http://www.gnu.org/licenses/>.
+ */
+
+/*
+ * Test for CVE-2016-7042, this regression test can crash the buggy kernel
+ * when the stack-protector is enabled, and the bug was fixed in:
+ *
+ *  commit 03dab869b7b239c4e013ec82aea22e181e441cfc
+ *  Author: David Howells <dhowells@redhat.com>
+ *  Date:   Wed Oct 26 15:01:54 2016 +0100
+ *
+ *  KEYS: Fix short sprintf buffer in /proc/keys show function
+ */
+
+#include <errno.h>
+#include <stdio.h>
+
+#include "tst_test.h"
+#include "lapi/syscalls.h"
+#include "lapi/keyctl.h"
+
+typedef int32_t key_serial_t;
+
+#define PATH_KEYS	"/proc/keys"
+
+static key_serial_t key;
+static int fd;
+
+static void do_test(void)
+{
+	char buf[BUFSIZ];
+
+	key = tst_syscall(__NR_add_key,
+		"user", "ltptestkey", "a", 1, KEY_SPEC_SESSION_KEYRING);
+	if (key == -1)
+		tst_brk(TBROK, "Failed to add key");
+
+	if (tst_syscall(__NR_keyctl, KEYCTL_UPDATE, key, "b", 1))
+		tst_brk(TBROK, "Failed to update key");
+
+	fd = SAFE_OPEN(PATH_KEYS, O_RDONLY);
+
+	tst_res(TINFO, "Attempting to crash the system");
+
+	SAFE_READ(0, fd, buf, BUFSIZ);
+
+	tst_res(TPASS, "Bug not reproduced");
+
+	SAFE_CLOSE(fd);
+
+	if (tst_syscall(__NR_keyctl, KEYCTL_UNLINK, key,
+		KEY_SPEC_SESSION_KEYRING))
+		tst_brk(TBROK, "Failed to unlink key");
+	key = 0;
+}
+
+static void setup(void)
+{
+	if (access(PATH_KEYS, F_OK))
+		tst_brk(TCONF, "%s does not exist", PATH_KEYS);
+}
+
+static void cleanup(void)
+{
+	if (key > 0 && tst_syscall(__NR_keyctl, KEYCTL_UNLINK, key,
+		KEY_SPEC_SESSION_KEYRING))
+		tst_res(TWARN, "Failed to unlink key");
+
+	if (fd > 0)
+		SAFE_CLOSE(fd);
+}
+
+static struct tst_test test = {
+	.setup = setup,
+	.cleanup = cleanup,
+	.test_all = do_test,
+};
