nih-at__libzip
commit e8fd5481ca34fce8672054bc881b7c0395497414
Author:     Thomas Klausner <tk@giga.or.at>
AuthorDate: Tue Mar 20 13:37:49 2012 +0100
Commit:     Thomas Klausner <tk@giga.or.at>
CommitDate: Tue Mar 20 13:37:49 2012 +0100

    Changes for libzip-0.10.1:
    * Fixed CVE-2012-1162
    * Fixed CVE-2012-1163
    
    Problems reported by Timo Warns <warns@pre-sense.de>
    
    --HG--
    branch : HEAD

diff --git a/CMakeLists.txt b/CMakeLists.txt
index c22234f..50bc082 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,7 +20,7 @@ SET(PACKAGE "libzip")
 SET(PACKAGE_NAME ${PACKAGE})
 SET(PACKAGE_VERSION_MAJOR "0")
 SET(PACKAGE_VERSION_MINOR "10")
-SET(PACKAGE_VERSION_PATCH "0")
+SET(PACKAGE_VERSION_PATCH "1")
 SET(VERSION "${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}")
 SET(PACKAGE_VERSION ${VERSION})
 SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
diff --git a/NEWS b/NEWS
index 3ef3d82..02081c6 100644
--- a/NEWS
+++ b/NEWS
@@ -1,3 +1,8 @@
+0.10.1 [2012/03/20]
+
+* Fixed CVE-2012-1162
+* Fixed CVE-2012-1163
+
 0.10 [2010/03/18]
 
 * Added zip_get_num_files(), deprecated zip_get_num_entries().
diff --git a/THANKS b/THANKS
index f23d9af..601d3cf 100644
--- a/THANKS
+++ b/THANKS
@@ -17,3 +17,4 @@ Roberto Tirabassi <rtirabassi@3di.it>
 Simon Talbot <simont@nse.co.uk>
 Stephen Bryant <steve@bawue.de>
 Tarmo Pikaro <tapika@yahoo.com>
+Timo Warns <warns@pre-sense.de>
diff --git a/configure.ac b/configure.ac
index f1fdfdb..793c1ca 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,5 +1,5 @@
 AC_PREREQ(2.57)
-AC_INIT([libzip],[0.10],[libzip-discuss@nih.at])
+AC_INIT([libzip],[0.10.1],[libzip-discuss@nih.at])
 AC_CONFIG_SRCDIR([lib/zip_add.c])
 AC_CONFIG_HEADERS([config.h])
 AC_CONFIG_MACRO_DIR([m4])
diff --git a/lib/zip_open.c b/lib/zip_open.c
index 015c91e..e9dfa3a 100644
--- a/lib/zip_open.c
+++ b/lib/zip_open.c
@@ -200,7 +200,7 @@ _zip_readcdir(FILE *fp, off_t buf_offset, unsigned char *buf, unsigned char *eoc
     cd->comment = NULL;
     cd->comment_len = _zip_read2(&cdp);
 
-    if (cd->offset+cd->size > buf_offset + (eocd-buf)) {
+    if (((zip_uint64_t)cd->offset)+cd->size > buf_offset + (eocd-buf)) {
 	/* cdir spans past EOCD record */
 	_zip_error_set(error, ZIP_ER_INCONS, 0);
 	cd->nentry = 0;
@@ -257,7 +257,7 @@ _zip_readcdir(FILE *fp, off_t buf_offset, unsigned char *buf, unsigned char *eoc
 
     left = cd->size;
     i=0;
-    do {
+    while (i<cd->nentry && left > 0) {
 	if ((_zip_dirent_read(cd->entry+i, fp, bufp, &left, 0, error)) < 0) {
 	    cd->nentry = i;
 	    _zip_cdir_free(cd);
@@ -274,7 +274,7 @@ _zip_readcdir(FILE *fp, off_t buf_offset, unsigned char *buf, unsigned char *eoc
 		return NULL;
 	    }
 	}
-    } while (i<cd->nentry && left > 0);
+    }
 
     cd->nentry = i;
     
