aosp-mirror__kernel_common
commit d7578fe184f5c9a2417e49ad33280c17ef5d4eea
Author:     Jeff Mahoney <jeffm@suse.com>
AuthorDate: Tue Jul 5 17:32:30 2016 -0400
Commit:     Amit Pundir <amit.pundir@linaro.org>
CommitDate: Mon Aug 15 17:16:09 2016 +0530

    UPSTREAM: ecryptfs: don't allow mmap when the lower fs doesn't support it
    
    (cherry picked from commit f0fe970df3838c202ef6c07a4c2b36838ef0a88b)
    
    There are legitimate reasons to disallow mmap on certain files, notably
    in sysfs or procfs.  We shouldn't emulate mmap support on file systems
    that don't offer support natively.
    
    CVE-2016-1583
    
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Cc: stable@vger.kernel.org
    [tyhicks: clean up f_op check by using ecryptfs_file_to_lower()]
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
    
    Change-Id: I66e3670771630a25b0608f10019d1584e9ce73a6
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>

diff --git a/fs/ecryptfs/file.c b/fs/ecryptfs/file.c
index faa26beb1e4e..b96b9cca1524 100644
--- a/fs/ecryptfs/file.c
+++ b/fs/ecryptfs/file.c
@@ -185,6 +185,19 @@ out:
 	return rc;
 }
 
+static int ecryptfs_mmap(struct file *file, struct vm_area_struct *vma)
+{
+	struct file *lower_file = ecryptfs_file_to_lower(file);
+	/*
+	 * Don't allow mmap on top of file systems that don't support it
+	 * natively.  If FILESYSTEM_MAX_STACK_DEPTH > 2 or ecryptfs
+	 * allows recursive mounting, this will need to be extended.
+	 */
+	if (!lower_file->f_op->mmap)
+		return -ENODEV;
+	return generic_file_mmap(file, vma);
+}
+
 /**
  * ecryptfs_open
  * @inode: inode speciying file to open
@@ -372,7 +385,7 @@ const struct file_operations ecryptfs_main_fops = {
 #ifdef CONFIG_COMPAT
 	.compat_ioctl = ecryptfs_compat_ioctl,
 #endif
-	.mmap = generic_file_mmap,
+	.mmap = ecryptfs_mmap,
 	.open = ecryptfs_open,
 	.flush = ecryptfs_flush,
 	.release = ecryptfs_release,
