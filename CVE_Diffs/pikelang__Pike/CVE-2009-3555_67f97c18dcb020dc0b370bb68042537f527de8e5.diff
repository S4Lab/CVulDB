pikelang__Pike
commit 67f97c18dcb020dc0b370bb68042537f527de8e5
Author:     Martin Stjernholm <mast@lysator.liu.se>
AuthorDate: Mon Nov 16 15:13:20 2009 +0100
Commit:     Martin Stjernholm <mast@lysator.liu.se>
CommitDate: Mon Nov 16 15:13:20 2009 +0100

    Disabled renegotiation, to address the ssl/tls renegotiate MITM attack.
    
    See http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-3555.
    
    Secure renegotiation according to the tls extension remains to be
    implemented (the spec is still a draft at the time of this writing). Note
    that renegotiation often didn't work anyway due to a bug, so this change
    might not be much of a compatibility issue anyway.
    
    Rev: lib/modules/SSL.pmod/Constants.pmod:1.5
    Rev: lib/modules/SSL.pmod/connection.pike:1.44

diff --git a/lib/modules/SSL.pmod/Constants.pmod b/lib/modules/SSL.pmod/Constants.pmod
index 7e1e86142c..2cb4baa834 100644
--- a/lib/modules/SSL.pmod/Constants.pmod
+++ b/lib/modules/SSL.pmod/Constants.pmod
@@ -1,6 +1,6 @@
 #pike __REAL_VERSION__
 
-/* $Id: Constants.pmod,v 1.4 2009/09/07 18:31:29 nilsson Exp $
+/* $Id: Constants.pmod,v 1.5 2009/11/16 14:13:20 mast Exp $
  *
  */
 
@@ -121,7 +121,9 @@ constant ALERT_descriptions = (< ALERT_close_notify,
  				 ALERT_certificate_revoked,
  				 ALERT_certificate_expired,
  				 ALERT_certificate_unknown,
- 				 ALERT_illegal_parameter >);
+				 ALERT_illegal_parameter,
+				 ALERT_no_renegotiation,
+			      >);
  			      
 constant CONNECTION_client 	= 0;
 constant CONNECTION_server 	= 1;
diff --git a/lib/modules/SSL.pmod/connection.pike b/lib/modules/SSL.pmod/connection.pike
index 3e07ff602c..bb563f4911 100644
--- a/lib/modules/SSL.pmod/connection.pike
+++ b/lib/modules/SSL.pmod/connection.pike
@@ -1,5 +1,5 @@
 //
-// $Id: connection.pike,v 1.43 2008/06/28 16:49:55 nilsson Exp $
+// $Id: connection.pike,v 1.44 2009/11/16 14:13:20 mast Exp $
 
 #pike __REAL_VERSION__
 //#pragma strict_types
@@ -361,9 +361,24 @@ string|int got_data(string|int s)
        }
       case PACKET_handshake:
        {
+	 if (handshake_finished) {
+	   // Don't allow renegotiation at all for now, to address
+	   // http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-3555.
+	   send_packet (Alert (ALERT_warning, ALERT_no_renegotiation,
+			       version[1]));
+	   return -1;
+	 }
 	 if (expect_change_cipher)
 	 {
 	   /* No change_cipher message was received */
+	   // FIXME: There's a bug somewhere since expect_change_cipher often
+	   // remains set after the handshake is completed. The effect is that
+	   // renegotiation doesn't work all the time.
+	   //
+	   // A side effect is that we are partly invulnerable to the
+	   // renegotiation vulnerability mentioned above. It is however not
+	   // safe to assume that, since there might be routes past this,
+	   // maybe through the use of a version 2 hello message below.
 	   send_packet(Alert(ALERT_fatal, ALERT_unexpected_message,
 			     version[1]));
 	   return -1;
@@ -398,6 +413,13 @@ string|int got_data(string|int s)
 	break;
       case PACKET_V2:
        {
+	 if (handshake_finished) {
+	   // Don't allow renegotiation at all for now, to address
+	   // http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-3555.
+	   send_packet (Alert (ALERT_warning, ALERT_no_renegotiation,
+			       version[1]));
+	   return -1;
+	 }
 	 int err = handle_handshake(HANDSHAKE_hello_v2,
 				    packet->fragment[1 .. ],
 				    packet->fragment);
