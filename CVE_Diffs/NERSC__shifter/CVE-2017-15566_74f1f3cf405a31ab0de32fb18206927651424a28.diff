NERSC__shifter
commit 74f1f3cf405a31ab0de32fb18206927651424a28
Author:     Doug Jacobsen <dmjacobsen@lbl.gov>
AuthorDate: Fri Nov 3 08:53:12 2017 -0700
Commit:     Doug Jacobsen <dmjacobsen@lbl.gov>
CommitDate: Fri Nov 3 08:53:12 2017 -0700

    update to correct for slurm CVE-2017-15566

diff --git a/wlm_integration/slurm/shifterSpank.c b/wlm_integration/slurm/shifterSpank.c
index 318a85d..7bd089b 100644
--- a/wlm_integration/slurm/shifterSpank.c
+++ b/wlm_integration/slurm/shifterSpank.c
@@ -890,7 +890,7 @@ int shifterSpank_job_prolog(shifterSpank_config *ssconfig) {
 #endif
 
     int set_type = 0;
-    ptr = getenv("SHIFTER_IMAGETYPE");
+    ptr = getenv("SPANK_SHIFTER_IMAGETYPE");
     if (ptr != NULL) {
         char *tmp = imageDesc_filterString(ptr, NULL);
         if (ssconfig->imageType != NULL) {
@@ -899,8 +899,25 @@ int shifterSpank_job_prolog(shifterSpank_config *ssconfig) {
         ssconfig->imageType = tmp;
         set_type = 1;
     }
+    ptr = getenv("SHIFTER_IMAGETYPE");
+    if (!set_type && ptr != NULL) {
+        char *tmp = imageDesc_filterString(ptr, NULL);
+        if (ssconfig->imageType != NULL) {
+            free(ssconfig->imageType);
+        }
+        ssconfig->imageType = tmp;
+        set_type = 1;
+    }
 
     _log(LOG_ERROR, "about to lookup image in prolog env");
+    ptr = getenv("SPANK_SHIFTER_IMAGE");
+    if (ptr != NULL) {
+        char *tmp = imageDesc_filterString(ptr, set_type ? ssconfig->imageType : NULL);
+        if (ssconfig->image != NULL) {
+            free(ssconfig->image);
+        }
+        ssconfig->image = tmp;
+    }
     ptr = getenv("SHIFTER_IMAGE");
     if (ptr != NULL) {
         char *tmp = imageDesc_filterString(ptr, set_type ? ssconfig->imageType : NULL);
@@ -910,6 +927,13 @@ int shifterSpank_job_prolog(shifterSpank_config *ssconfig) {
         ssconfig->image = tmp;
     }
 
+    ptr = getenv("SPANK_SHIFTER_VOLUME");
+    if (ptr != NULL) {
+        if (ssconfig->volume != NULL) {
+            free(ssconfig->volume);
+        }
+        ssconfig->volume = strdup(ptr);
+    }
     ptr = getenv("SHIFTER_VOLUME");
     if (ptr != NULL) {
         if (ssconfig->volume != NULL) {
@@ -938,6 +962,7 @@ int shifterSpank_job_prolog(shifterSpank_config *ssconfig) {
     rc = read_data_from_job(ssconfig, &job, &nodelist, &tasksPerNode, &shared);
     if (rc != SUCCESS) {
         PROLOG_ERROR("FAILED to get job information.", ERROR);
+	goto _prolog_exit_unclean;
     }
 
     /* this prolog should not be used for shared-node jobs */
@@ -947,9 +972,16 @@ int shifterSpank_job_prolog(shifterSpank_config *ssconfig) {
     }
 
     /* try to recover ssh public key */
-    sshPubKey = getenv("SHIFTER_SSH_PUBKEY");
-    if (sshPubKey != NULL && ssconfig->sshdEnabled) {
-        char *ptr = strdup(sshPubKey);
+    ptr = getenv("SPANK_SHIFTER_SSH_PUBKEY");
+    if (ptr != NULL && ssconfig->sshdEnabled) {
+        ptr = strdup(ptr);
+        sshPubKey = shifter_trim(ptr);
+        sshPubKey = strdup(sshPubKey);
+        free(ptr);
+    }
+    ptr = getenv("SHIFTER_SSH_PUBKEY");
+    if (ptr != NULL && ssconfig->sshdEnabled) {
+        ptr = strdup(ptr);
         sshPubKey = shifter_trim(ptr);
         sshPubKey = strdup(sshPubKey);
         free(ptr);
