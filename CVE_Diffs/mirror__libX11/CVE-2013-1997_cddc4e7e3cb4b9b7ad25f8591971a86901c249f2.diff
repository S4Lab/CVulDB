mirror__libX11
commit cddc4e7e3cb4b9b7ad25f8591971a86901c249f2
Author:     Alan Coopersmith <alan.coopersmith@oracle.com>
AuthorDate: Fri Mar 1 19:30:09 2013 -0800
Commit:     Alan Coopersmith <alan.coopersmith@oracle.com>
CommitDate: Thu May 9 18:59:51 2013 -0700

    unvalidated lengths in XAllocColorCells() [CVE-2013-1997 1/15]
    
    If a broken server returned larger than requested values for nPixels or
    nMasks, XAllocColorCells would happily overflow the buffers provided by
    the caller to write the results into.
    
    Reported-by: Ilja Van Sprundel <ivansprundel@ioactive.com>
    Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>
    Reviewed-by: Matthieu Herrb <matthieu.herrb@laas.fr>

diff --git a/src/AllCells.c b/src/AllCells.c
index ddd9c22e..6e97e118 100644
--- a/src/AllCells.c
+++ b/src/AllCells.c
@@ -53,8 +53,13 @@ Status XAllocColorCells(
     status = _XReply(dpy, (xReply *)&rep, 0, xFalse);
 
     if (status) {
-	_XRead32 (dpy, (long *) pixels, 4L * (long) (rep.nPixels));
-	_XRead32 (dpy, (long *) masks, 4L * (long) (rep.nMasks));
+	if ((rep.nPixels > ncolors) || (rep.nMasks > nplanes)) {
+	    _XEatDataWords(dpy, rep.length);
+	    status = 0; /* Failure */
+	} else {
+	    _XRead32 (dpy, (long *) pixels, 4L * (long) (rep.nPixels));
+	    _XRead32 (dpy, (long *) masks, 4L * (long) (rep.nMasks));
+	}
     }
 
     UnlockDisplay(dpy);
