Canonical-kernel__Ubuntu-kernel
commit dfc08f649a8b89fc2874c90162dde16fbdbc6fd2
Author:     Dan Carpenter <dan.carpenter@oracle.com>
AuthorDate: Tue Oct 29 22:06:04 2013 +0300
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Tue Nov 12 12:10:33 2013 -0600

    uml: check length in exitcode_proc_write()
    
    CVE-2013-4512
    
    BugLink: http://bugs.launchpad.net/bugs/1249271
    
    We don't cap the size of buffer from the user so we could write past the
    end of the array here.  Only root can write to this file.
    
    Reported-by: Nico Golde <nico@ngolde.de>
    Reported-by: Fabian Yamaguchi <fabs@goesec.de>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    (cherry picked from commit 201f99f170df14ba52ea4c52847779042b7a623b)
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/arch/um/kernel/exitcode.c b/arch/um/kernel/exitcode.c
index 6540d2c9fbb7..ce057afb6218 100644
--- a/arch/um/kernel/exitcode.c
+++ b/arch/um/kernel/exitcode.c
@@ -42,9 +42,11 @@ static int write_proc_exitcode(struct file *file, const char __user *buffer,
 			       unsigned long count, void *data)
 {
 	char *end, buf[sizeof("nnnnn\0")];
+	size_t size;
 	int tmp;
 
-	if (copy_from_user(buf, buffer, count))
+	size = min(count, sizeof(buf));
+	if (copy_from_user(buf, buffer, size))
 		return -EFAULT;
 
 	tmp = simple_strtol(buf, &end, 0);
