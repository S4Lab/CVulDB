Canonical-kernel__Ubuntu-kernel
commit 659793e730632012c6556ef8748e3f03c96e5664
Author:     Peter Huewe <huewe.external.infineon@googlemail.com>
AuthorDate: Wed Jul 27 16:20:24 2011 +0100
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Wed Jul 27 13:20:25 2011 -0600

    char/tpm: Fix unitialized usage of data buffer, CVE-2011-1160
    
    This patch fixes information leakage to the userspace by initializing
    the data buffer to zero.
    
    Reported-by: Peter Huewe <huewe.external@infineon.com>
    Signed-off-by: Peter Huewe <huewe.external@infineon.com>
    Signed-off-by: Marcel Selhorst <m.selhorst@sirrix.com>
    [ Also removed the silly "* sizeof(u8)".  If that isn't 1, we have way
      deeper problems than a simple multiplication can fix.   - Linus ]
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    (cherry picked from commit 1309d7afbed112f0e8e90be9af975550caa0076b)
    CVE-2011-1160
    BugLink: http://bugs.launchpad.net/bugs/816546
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/drivers/char/tpm/tpm.c b/drivers/char/tpm/tpm.c
index 05ad4a17a28f..2df6c26bbf57 100644
--- a/drivers/char/tpm/tpm.c
+++ b/drivers/char/tpm/tpm.c
@@ -954,7 +954,7 @@ int tpm_open(struct inode *inode, struct file *file)
 		return -EBUSY;
 	}
 
-	chip->data_buffer = kmalloc(TPM_BUFSIZE * sizeof(u8), GFP_KERNEL);
+	chip->data_buffer = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
 	if (chip->data_buffer == NULL) {
 		clear_bit(0, &chip->is_open);
 		put_device(chip->dev);
