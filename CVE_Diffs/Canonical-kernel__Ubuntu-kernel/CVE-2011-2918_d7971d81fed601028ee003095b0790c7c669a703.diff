Canonical-kernel__Ubuntu-kernel
commit d7971d81fed601028ee003095b0790c7c669a703
Author:     Peter Zijlstra <a.p.zijlstra@chello.nl>
AuthorDate: Fri Aug 26 09:59:37 2011 +0100
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Mon Aug 29 16:23:11 2011 -0300

    perf: Fix software event overflow, CVE-2011-2918
    
    BugLink: http://bugs.launchpad.net/bugs/834121
    
    The below patch is for -stable only, upstream has a much larger patch
    that contains the below hunk in commit a8b0ca17b80e92faab46ee7179ba9e99ccb61233
    
    Vince found that under certain circumstances software event overflows
    go wrong and deadlock. Avoid trying to delete a timer from the timer
    callback.
    
    Reported-by: Vince Weaver <vweaver1@eecs.utk.edu>
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    
    CVE-2011-2918
    backported from commit 462fee3af72df0de7b60b96c525ffe8baf4db0f0 stable-3.0.y
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/kernel/perf_event.c b/kernel/perf_event.c
index b2536bd2b6b5..478ec5d45afe 100644
--- a/kernel/perf_event.c
+++ b/kernel/perf_event.c
@@ -4447,11 +4447,8 @@ static int __perf_event_overflow(struct perf_event *event, int nmi,
 	if (events && atomic_dec_and_test(&event->event_limit)) {
 		ret = 1;
 		event->pending_kill = POLL_HUP;
-		if (nmi) {
-			event->pending_disable = 1;
-			irq_work_queue(&event->pending);
-		} else
-			perf_event_disable(event);
+		event->pending_disable = 1;
+		irq_work_queue(&event->pending);
 	}
 
 	if (event->overflow_handler)
