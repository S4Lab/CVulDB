Canonical-kernel__Ubuntu-kernel
commit 38a56dfd213528462fbce25d8aa81e5f25c8bb23
Author:     Mathias Krause <minipli@googlemail.com>
AuthorDate: Tue Mar 26 17:14:48 2013 +0000
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Tue Mar 26 11:33:26 2013 -0600

    Bluetooth: HCI - Fix info leak in getsockopt(HCI_FILTER)
    
    CVE-2012-6544
    
    BugLink: http://bugs.launchpad.net/bugs/1156751
    
    The HCI code fails to initialize the two padding bytes of struct
    hci_ufilter before copying it to userland -- that for leaking two
    bytes kernel stack. Add an explicit memset(0) before filling the
    structure to avoid the info leak.
    
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Cc: Johan Hedberg <johan.hedberg@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit e15ca9a0ef9a86f0477530b0f44a725d67f889ee)
    
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/bluetooth/hci_sock.c b/net/bluetooth/hci_sock.c
index 75302a986067..45caaaa4ace4 100644
--- a/net/bluetooth/hci_sock.c
+++ b/net/bluetooth/hci_sock.c
@@ -576,6 +576,7 @@ static int hci_sock_getsockopt(struct socket *sock, int level, int optname, char
 		{
 			struct hci_filter *f = &hci_pi(sk)->filter;
 
+			memset(&uf, 0, sizeof(uf));
 			uf.type_mask = f->type_mask;
 			uf.opcode    = f->opcode;
 			uf.event_mask[0] = *((u32 *) f->event_mask + 0);
