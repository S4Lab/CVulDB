Canonical-kernel__Ubuntu-kernel
commit e3845ce09b6f1dde65386140cb11213367356121
Author:     Vasiliy Kulikov <segooon@gmail.com>
AuthorDate: Mon Jan 31 17:59:14 2011 +0000
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Fri Mar 25 10:46:00 2011 -0600

    net: ax25: fix information leak to userland, CVE-2010-3875
    
    Sometimes ax25_getname() doesn't initialize all members of fsa_digipeater
    field of fsa struct, also the struct has padding bytes between
    sax25_call and sax25_ndigis fields.  This structure is then copied to
    userland.  It leads to leaking of contents of kernel stack memory.
    
    Signed-off-by: Vasiliy Kulikov <segooon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    CVE-2010-3875
    BugLink: http://bugs.launchpad.net/bugs/710714
    (cherry picked from commit fe10ae53384e48c51996941b7720ee16995cbcb7 upstream)
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/ax25/af_ax25.c b/net/ax25/af_ax25.c
index cfdfd7e2a172..6e2371a493b7 100644
--- a/net/ax25/af_ax25.c
+++ b/net/ax25/af_ax25.c
@@ -1392,6 +1392,7 @@ static int ax25_getname(struct socket *sock, struct sockaddr *uaddr,
 	ax25_cb *ax25;
 	int err = 0;
 
+	memset(fsa, 0, sizeof(fsa));
 	lock_sock(sk);
 	ax25 = ax25_sk(sk);
 
@@ -1403,7 +1404,6 @@ static int ax25_getname(struct socket *sock, struct sockaddr *uaddr,
 
 		fsa->fsa_ax25.sax25_family = AF_AX25;
 		fsa->fsa_ax25.sax25_call   = ax25->dest_addr;
-		fsa->fsa_ax25.sax25_ndigis = 0;
 
 		if (ax25->digipeat != NULL) {
 			ndigi = ax25->digipeat->ndigi;
