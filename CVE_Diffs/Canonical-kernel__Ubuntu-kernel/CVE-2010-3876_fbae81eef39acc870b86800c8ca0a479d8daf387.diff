Canonical-kernel__Ubuntu-kernel
commit fbae81eef39acc870b86800c8ca0a479d8daf387
Author:     Andy Whitcroft <apw@canonical.com>
AuthorDate: Tue Feb 1 14:26:24 2011 +0000
Commit:     Brad Figg <brad.figg@canonical.com>
CommitDate: Wed Feb 9 14:30:35 2011 -0800

    net: packet: fix information leak to userland, CVE-2010-3876
    
    packet_getname_spkt() doesn't initialize all members of sa_data field of
    sockaddr struct if strlen(dev->name) < 13.  This structure is then copied
    to userland.  It leads to leaking of contents of kernel stack memory.
    We have to fully fill sa_data with strncpy() instead of strlcpy().
    
    The same with packet_getname(): it doesn't initialize sll_pkttype field of
    sockaddr_ll.  Set it to zero.
    
    Signed-off-by: Vasiliy Kulikov <segooon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    CVE-2010-3876
    BugLink: http://bugs.launchpad.net/bugs/710714
    (backported from commit 67286640f638f5ad41a946b9a3dc75327950248f upstream)
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch b/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
index 0bde9f871fa7..f8443e0a55f5 100644
--- a/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
+++ b/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
@@ -90161,15 +90161,6 @@ Index: kernel/net/packet/af_packet.c
  	if (dev) {
  		strlcpy(uaddr->sa_data, dev->name, 15);
  		dev_put(dev);
-@@ -1165,7 +1181,7 @@
- 	sll->sll_family = AF_PACKET;
- 	sll->sll_ifindex = po->ifindex;
- 	sll->sll_protocol = po->num;
--	dev = dev_get_by_index(&init_net, po->ifindex);
-+	dev = dev_get_by_index(current->nsproxy->net_ns, po->ifindex);
- 	if (dev) {
- 		sll->sll_hatype = dev->type;
- 		sll->sll_halen = dev->addr_len;
 @@ -1217,7 +1233,7 @@
  	rtnl_lock();
  
diff --git a/debian/binary-custom.d/openvz/patchset/0160-CVE-2010-3876.patch b/debian/binary-custom.d/openvz/patchset/0160-CVE-2010-3876.patch
new file mode 100644
index 000000000000..e9b1649f07a0
--- /dev/null
+++ b/debian/binary-custom.d/openvz/patchset/0160-CVE-2010-3876.patch
@@ -0,0 +1,13 @@
+diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
+index c23c539..795d798 100644
+--- a/net/packet/af_packet.c
++++ b/net/packet/af_packet.c
+@@ -1182,7 +1182,7 @@ static int packet_getname(struct socket *sock, struct sockaddr *uaddr,
+ 	sll->sll_ifindex = po->ifindex;
+ 	sll->sll_protocol = po->num;
+ 	sll->sll_pkttype = 0;
+-	dev = dev_get_by_index(&init_net, po->ifindex);
++	dev = dev_get_by_index(current->nsproxy->net_ns, po->ifindex);
+ 	if (dev) {
+ 		sll->sll_hatype = dev->type;
+ 		sll->sll_halen = dev->addr_len;
diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index 8a7807dbba01..21eecbe5cbb2 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -1142,7 +1142,7 @@ static int packet_getname_spkt(struct socket *sock, struct sockaddr *uaddr,
 	uaddr->sa_family = AF_PACKET;
 	dev = dev_get_by_index(&init_net, pkt_sk(sk)->ifindex);
 	if (dev) {
-		strlcpy(uaddr->sa_data, dev->name, 15);
+		strncpy(uaddr->sa_data, dev->name, 14);
 		dev_put(dev);
 	} else
 		memset(uaddr->sa_data, 0, 14);
@@ -1165,6 +1165,7 @@ static int packet_getname(struct socket *sock, struct sockaddr *uaddr,
 	sll->sll_family = AF_PACKET;
 	sll->sll_ifindex = po->ifindex;
 	sll->sll_protocol = po->num;
+	sll->sll_pkttype = 0;
 	dev = dev_get_by_index(&init_net, po->ifindex);
 	if (dev) {
 		sll->sll_hatype = dev->type;
