Canonical-kernel__Ubuntu-kernel
commit 887cb88489dded51c03af2c159378bb8622cd26a
Author:     Xi Wang <xi.wang@gmail.com>
AuthorDate: Wed Aug 8 15:24:00 2012 -0500
Commit:     Luis Henriques <luis.henriques@canonical.com>
CommitDate: Tue Aug 14 09:53:24 2012 +0100

    drm: integer overflow in drm_mode_dirtyfb_ioctl()
    
    There is a potential integer overflow in drm_mode_dirtyfb_ioctl()
    if userspace passes in a large num_clips.  The call to kmalloc would
    allocate a small buffer, and the call to fb->funcs->dirty may result
    in a memory corruption.
    
    Reported-by: Haogang Chen <haogangchen@gmail.com>
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Cc: stable@kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    
    (cherry picked from commit a5cd335165e31db9dbab636fd29895d41da55dd2)
    CVE-2012-0044
    BugLink: http://bugs.launchpad.net/bugs/917838
    Acked-by: Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
    Acked-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Steve Conklin <sconklin@canonical.com>

diff --git a/drivers/gpu/drm/drm_crtc.c b/drivers/gpu/drm/drm_crtc.c
index 81ba0e6f9449..ec9e97ec578b 100644
--- a/drivers/gpu/drm/drm_crtc.c
+++ b/drivers/gpu/drm/drm_crtc.c
@@ -1832,6 +1832,10 @@ int drm_mode_dirtyfb_ioctl(struct drm_device *dev,
 	}
 
 	if (num_clips && clips_ptr) {
+		if (num_clips < 0 || num_clips > DRM_MODE_FB_DIRTY_MAX_CLIPS) {
+			ret = -EINVAL;
+			goto out_err1;
+		}
 		clips = kzalloc(num_clips * sizeof(*clips), GFP_KERNEL);
 		if (!clips) {
 			ret = -ENOMEM;
diff --git a/include/drm/drm_mode.h b/include/drm/drm_mode.h
index c5ba1636613c..9cf639cb2f86 100644
--- a/include/drm/drm_mode.h
+++ b/include/drm/drm_mode.h
@@ -232,6 +232,8 @@ struct drm_mode_fb_cmd {
 #define DRM_MODE_FB_DIRTY_ANNOTATE_FILL 0x02
 #define DRM_MODE_FB_DIRTY_FLAGS         0x03
 
+#define DRM_MODE_FB_DIRTY_MAX_CLIPS     256
+
 /*
  * Mark a region of a framebuffer as dirty.
  *
