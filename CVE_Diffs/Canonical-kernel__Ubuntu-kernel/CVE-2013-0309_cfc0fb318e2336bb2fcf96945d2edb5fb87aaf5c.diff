Canonical-kernel__Ubuntu-kernel
commit cfc0fb318e2336bb2fcf96945d2edb5fb87aaf5c
Author:     Stefan Bader <stefan.bader@canonical.com>
AuthorDate: Fri Mar 1 12:39:35 2013 +0100
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Fri Apr 12 10:17:20 2013 +0200

    UBUNTU: XEN: fix pmd_present for split_huge_page and PROT_NONE with THP
    
    Follow the modifications of
      mm: thp: fix pmd_present for split_huge_page and PROT_NONE with THP
    for the deviated version.
    
    CVE-2013-0309
    
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/arch/x86/include/mach-xen/asm/pgtable.h b/arch/x86/include/mach-xen/asm/pgtable.h
index ffef4ae0c1e6..98a43ff0c262 100644
--- a/arch/x86/include/mach-xen/asm/pgtable.h
+++ b/arch/x86/include/mach-xen/asm/pgtable.h
@@ -136,8 +136,7 @@ static inline unsigned long pmd_pfn(pmd_t pmd)
 
 static inline int pmd_large(pmd_t pte)
 {
-	return (pmd_flags(pte) & (_PAGE_PSE | _PAGE_PRESENT)) ==
-		(_PAGE_PSE | _PAGE_PRESENT);
+	return pmd_flags(pte) & _PAGE_PSE;
 }
 
 static inline pte_t pte_set_flags(pte_t pte, pteval_t set)
@@ -335,7 +334,13 @@ static inline int pmd_present(pmd_t pmd)
    can temporarily clear it. */
 	return __pmd_val(pmd) != 0;
 #else
-	return pmd_flags(pmd) & _PAGE_PRESENT;
+	/*
+	 * Checking for _PAGE_PSE is needed too because
+	 * split_huge_page will temporarily clear the present bit (but
+	 * the _PAGE_PSE flag will remain set at all times while the
+	 * _PAGE_PRESENT bit is clear).
+	 */
+	return pmd_flags(pmd) & (_PAGE_PRESENT | _PAGE_PROTNONE | _PAGE_PSE);
 #endif
 }
 
