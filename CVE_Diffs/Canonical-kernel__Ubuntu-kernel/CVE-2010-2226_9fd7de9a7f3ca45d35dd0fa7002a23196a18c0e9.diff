Canonical-kernel__Ubuntu-kernel
commit 9fd7de9a7f3ca45d35dd0fa7002a23196a18c0e9
Author:     Dan Rosenberg <dan.j.rosenberg@gmail.com>
AuthorDate: Wed Sep 29 10:55:14 2010 -0700
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Wed Oct 6 16:08:52 2010 +0100

    xfs: prevent swapext from operating on write-only files
    
    CVE-2010-2226
    
    Based on an upstream patch (1817176a86352f65210139d4c794ad2d19fc6b63)
    and modified for Hardy
    
    This patch prevents user "foo" from using the SWAPEXT ioctl to swap
    a write-only file owned by user "bar" into a file owned by "foo" and
    subsequently reading it.  It does so by checking that the file
    descriptors passed to the ioctl are also opened for reading.
    
    Signed-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Brad Figg <brad.figg@canonical.com>

diff --git a/fs/xfs/xfs_dfrag.c b/fs/xfs/xfs_dfrag.c
index 584f1ae85cd9..324cdfd5eaf9 100644
--- a/fs/xfs/xfs_dfrag.c
+++ b/fs/xfs/xfs_dfrag.c
@@ -82,6 +82,13 @@ xfs_swapext(
 		goto error0;
 	}
 
+	if (!(fp->f_mode & FMODE_WRITE) ||
+	    !(fp->f_mode & FMODE_READ) ||
+	    (fp->f_flags & O_APPEND)) {
+		error = XFS_ERROR(EBADF);
+		goto error0;
+	}
+
 	if (((tfp = fget((int)sxp->sx_fdtmp)) == NULL) ||
 	    ((tvp = vn_from_inode(tfp->f_path.dentry->d_inode)) == NULL)) {
 		error = XFS_ERROR(EINVAL);
@@ -94,6 +101,13 @@ xfs_swapext(
 		goto error0;
 	}
 
+	if (!(tfp->f_mode & FMODE_WRITE) ||
+	    !(tfp->f_mode & FMODE_READ) ||
+	    (tfp->f_flags & O_APPEND)) {
+		error = XFS_ERROR(EBADF);
+		goto error0;
+	}
+
 	if (ip->i_mount != tip->i_mount) {
 		error =  XFS_ERROR(EINVAL);
 		goto error0;
