Canonical-kernel__Ubuntu-kernel
commit f91692f9a047b94ddc17df243c88e19acf11781e
Author:     Leann Ogasawara <leann.ogasawara@canonical.com>
AuthorDate: Sun Jan 24 15:44:42 2010 -0800
Commit:     Leann Ogasawara <leann.ogasawara@canonical.com>
CommitDate: Sun Jan 24 22:41:43 2010 -0800

    UBUNTU: OPENVZ: untangle the do_mremap() mess
    
    CVE-2010-0291
    
    Fix FTBS for openvz caused by CVE update.
    
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>

diff --git a/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch b/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
index dd409a6ce5b9..efd6c90cfcdf 100644
--- a/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
+++ b/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
@@ -971,19 +971,6 @@ Index: kernel/arch/ia64/kernel/signal.c
  			}
  		}
  	}
-Index: kernel/arch/ia64/kernel/sys_ia64.c
-===================================================================
---- kernel.orig/arch/ia64/kernel/sys_ia64.c	2008-11-18 01:19:41.000000000 +0100
-+++ kernel/arch/ia64/kernel/sys_ia64.c	2008-11-24 15:47:45.000000000 +0100
-@@ -204,7 +204,7 @@
- 
- 	/* Careful about overflows.. */
- 	len = PAGE_ALIGN(len);
--	if (!len || len > TASK_SIZE) {
-+	if (len > TASK_SIZE) {
- 		addr = -EINVAL;
- 		goto out;
- 	}
 Index: kernel/arch/ia64/kernel/unaligned.c
 ===================================================================
 --- kernel.orig/arch/ia64/kernel/unaligned.c	2008-11-18 01:19:41.000000000 +0100
@@ -71103,11 +71090,11 @@ Index: kernel/mm/mremap.c
 +	return -ENOMEM;
  }
  
- /*
-@@ -364,7 +376,15 @@
- 			max_addr = vma->vm_next->vm_start;
+ static struct vm_area_struct *vma_to_resize(unsigned long addr,
+@@ -436,7 +448,15 @@
+ 	if (old_len == vma->vm_end - addr) {
  		/* can we just expand the current mapping? */
- 		if (max_addr - addr >= new_len) {
+ 		if (vma_expandable(vma, new_len - old_len)) {
 -			int pages = (new_len - old_len) >> PAGE_SHIFT;
 +			unsigned long len;
 +			int pages;
diff --git a/debian/binary-custom.d/openvz/patchset/0050-ubuntu-make-mmap-POSIX-conform.patch b/debian/binary-custom.d/openvz/patchset/0050-ubuntu-make-mmap-POSIX-conform.patch
index f940fa80786d..9b749096df7d 100644
--- a/debian/binary-custom.d/openvz/patchset/0050-ubuntu-make-mmap-POSIX-conform.patch
+++ b/debian/binary-custom.d/openvz/patchset/0050-ubuntu-make-mmap-POSIX-conform.patch
@@ -13,16 +13,3 @@ Index: kernel/mm/mmap.c
  
  	if (!(flags & MAP_FIXED))
  		addr = round_hint_to_min(addr);
-Index: kernel/arch/ia64/kernel/sys_ia64.c
-===================================================================
---- kernel.orig/arch/ia64/kernel/sys_ia64.c	2008-11-24 15:47:45.000000000 +0100
-+++ kernel/arch/ia64/kernel/sys_ia64.c	2008-11-24 15:59:24.000000000 +0100
-@@ -204,7 +204,7 @@
- 
- 	/* Careful about overflows.. */
- 	len = PAGE_ALIGN(len);
--	if (len > TASK_SIZE) {
-+	if (!len || len > TASK_SIZE) {
- 		addr = -EINVAL;
- 		goto out;
- 	}
diff --git a/debian/binary-custom.d/openvz/patchset/0073-CPT-fix-shmat-2-ted-segments.patch b/debian/binary-custom.d/openvz/patchset/0073-CPT-fix-shmat-2-ted-segments.patch
index 480b7bcfc688..8af39bb61de7 100644
--- a/debian/binary-custom.d/openvz/patchset/0073-CPT-fix-shmat-2-ted-segments.patch
+++ b/debian/binary-custom.d/openvz/patchset/0073-CPT-fix-shmat-2-ted-segments.patch
@@ -131,7 +131,7 @@ diff --git a/ipc/shm.c b/ipc/shm.c
 index 14f0cc2..03cf380 100644
 --- a/ipc/shm.c
 +++ b/ipc/shm.c
-@@ -47,24 +47,10 @@
+@@ -43,24 +43,10 @@
  
  #include "util.h"
  
@@ -156,7 +156,7 @@ index 14f0cc2..03cf380 100644
  #define shm_buildid(id, seq)	ipc_buildid(id, seq)
  
  static int newseg(struct ipc_namespace *, struct ipc_params *);
-@@ -165,17 +151,6 @@ static inline struct shmid_kernel *shm_lock_check_down(
+@@ -161,17 +147,6 @@ static inline struct shmid_kernel *shm_lock_check_down(
  	return container_of(ipcp, struct shmid_kernel, shm_perm);
  }
  
@@ -174,8 +174,8 @@ index 14f0cc2..03cf380 100644
  static inline struct shmid_kernel *shm_lock_check(struct ipc_namespace *ns,
  						int id)
  {
-@@ -402,12 +377,13 @@ int is_file_shm_hugepages(struct file *file)
- 	return ret;
+@@ -344,11 +319,12 @@ static unsigned long shm_get_unmapped_area(struct file *file,
+ 						pgoff, flags);
  }
  
 -static const struct file_operations shm_file_operations = {
@@ -183,12 +183,11 @@ index 14f0cc2..03cf380 100644
  	.mmap		= shm_mmap,
  	.fsync		= shm_fsync,
  	.release	= shm_release,
- 	.get_unmapped_area	= shm_get_unmapped_area,
  };
 +EXPORT_SYMBOL_GPL(shm_file_operations);
  
- static struct vm_operations_struct shm_vm_ops = {
- 	.open	= shm_open,	/* callback for a new vm-area open */
+ static const struct file_operations shm_file_operations_huge = {
+ 	.mmap           = shm_mmap,
 diff --git a/ipc/util.c b/ipc/util.c
 index 50d9838..8e0a7db 100644
 --- a/ipc/util.c
