Canonical-kernel__Ubuntu-kernel
commit ff5f24004923e0bc91cc19709eb37fcc116899e6
Author:     Al Viro <viro@zeniv.linux.org.uk>
AuthorDate: Thu Jul 21 14:13:37 2011 +0100
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Tue Aug 9 10:48:26 2011 -0300

    pagemap: close races with suid execve, CVE-2011-1020
    
    just use mm_for_maps()
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    
    (cherry picked from commit ca6b0bf0e086513b9ee5efc0aa5770ecb57778af)
    CVE-2011-1020
    BugLink: http://bugs.launchpad.net/bugs/813026
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

diff --git a/fs/proc/base.c b/fs/proc/base.c
index d073b90f5dc6..e4b77ea0a872 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -2600,7 +2600,7 @@ static const struct pid_entry tgid_base_stuff[] = {
 #ifdef CONFIG_PROC_PAGE_MONITOR
 	REG("clear_refs", S_IWUSR, proc_clear_refs_operations),
 	REG("smaps",      S_IRUGO, proc_smaps_operations),
-	REG("pagemap",    S_IRUSR, proc_pagemap_operations),
+	REG("pagemap",    S_IRUGO, proc_pagemap_operations),
 #endif
 #ifdef CONFIG_SECURITY
 	DIR("attr",       S_IRUGO|S_IXUGO, proc_attr_dir_inode_operations, proc_attr_dir_operations),
@@ -2939,7 +2939,7 @@ static const struct pid_entry tid_base_stuff[] = {
 #ifdef CONFIG_PROC_PAGE_MONITOR
 	REG("clear_refs", S_IWUSR, proc_clear_refs_operations),
 	REG("smaps",     S_IRUGO, proc_smaps_operations),
-	REG("pagemap",    S_IRUSR, proc_pagemap_operations),
+	REG("pagemap",    S_IRUGO, proc_pagemap_operations),
 #endif
 #ifdef CONFIG_SECURITY
 	DIR("attr",      S_IRUGO|S_IXUGO, proc_attr_dir_inode_operations, proc_attr_dir_operations),
diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c
index 0dfd815e4cfd..e2292ca75d31 100644
--- a/fs/proc/task_mmu.c
+++ b/fs/proc/task_mmu.c
@@ -717,7 +717,8 @@ static ssize_t pagemap_read(struct file *file, char __user *buf,
 		goto out;
 
 	ret = -EACCES;
-	if (!ptrace_may_access(task, PTRACE_MODE_READ))
+	mm = mm_for_maps(task);
+	if (!mm)
 		goto out_task;
 
 	ret = -EINVAL;
@@ -730,10 +731,6 @@ static ssize_t pagemap_read(struct file *file, char __user *buf,
 	if (!count)
 		goto out_task;
 
-	mm = get_task_mm(task);
-	if (!mm)
-		goto out_task;
-
 	pm.len = PM_ENTRY_BYTES * (PAGEMAP_WALK_SIZE >> PAGE_SHIFT);
 	pm.buffer = kmalloc(pm.len, GFP_TEMPORARY);
 	ret = -ENOMEM;
