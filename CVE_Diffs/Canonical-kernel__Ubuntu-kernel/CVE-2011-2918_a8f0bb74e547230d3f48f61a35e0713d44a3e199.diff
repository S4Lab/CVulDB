Canonical-kernel__Ubuntu-kernel
commit a8f0bb74e547230d3f48f61a35e0713d44a3e199
Author:     Andy Whitcroft <apw@canonical.com>
AuthorDate: Fri Aug 26 09:59:36 2011 +0100
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Fri Aug 26 06:18:45 2011 -0600

    perf: Fix software event overflow, CVE-2011-2918
    
    BugLink: http://bugs.launchpad.net/bugs/834121
    
    The below patch is for -stable only, upstream has a much larger patch
    that contains the below hunk in commit a8b0ca17b80e92faab46ee7179ba9e99ccb61233
    
    Vince found that under certain circumstances software event overflows
    go wrong and deadlock. Avoid trying to delete a timer from the timer
    callback.
    
    Reported-by: Vince Weaver <vweaver1@eecs.utk.edu>
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    
    CVE-2011-2918
    backported from commit 462fee3af72df0de7b60b96c525ffe8baf4db0f0 stable-3.0.y
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/kernel/perf_event.c b/kernel/perf_event.c
index ff86c558af4c..13d34cef93df 100644
--- a/kernel/perf_event.c
+++ b/kernel/perf_event.c
@@ -3974,12 +3974,8 @@ static int __perf_event_overflow(struct perf_event *event, int nmi,
 	if (events && atomic_dec_and_test(&event->event_limit)) {
 		ret = 1;
 		event->pending_kill = POLL_HUP;
-		if (nmi) {
-			event->pending_disable = 1;
-			perf_pending_queue(&event->pending,
-					   perf_pending_event);
-		} else
-			perf_event_disable(event);
+		event->pending_disable = 1;
+		perf_pending_queue(&event->pending, perf_pending_event);
 	}
 
 	if (event->overflow_handler)
