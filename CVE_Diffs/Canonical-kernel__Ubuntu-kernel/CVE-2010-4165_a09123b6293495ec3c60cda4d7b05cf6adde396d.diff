Canonical-kernel__Ubuntu-kernel
commit a09123b6293495ec3c60cda4d7b05cf6adde396d
Author:     David S. Miller <davem@davemloft.net>
AuthorDate: Wed Jul 6 16:41:13 2011 +0200
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Mon Jul 18 12:29:36 2011 -0300

    tcp: Increase TCP_MAXSEG socket option minimum CVE-2010-4165
    
    BugLink: http://bugs.launchpad.net/bugs/806374
    
    commit upstream 7a1abd08d52fdeddb3e9a5a33f2f15cc6a5674d2
    
    As noted by Steve Chen, since commit
    f5fff5dc8a7a3f395b0525c02ba92c95d42b7390 ("tcp: advertise MSS
    requested by user") we can end up with a situation where
    tcp_select_initial_window() does a divide by a zero (or
    even negative) mss value.
    
    The problem is that sometimes we effectively subtract
    TCPOLEN_TSTAMP_ALIGNED and/or TCPOLEN_MD5SIG_ALIGNED from the mss.
    
    Fix this by increasing the minimum from 8 to 64.
    
    CVE-2010-4165
    
    Reported-by: Steve Chen <schen@mvista.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index 43051546deae..4174f209c9c6 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -1826,7 +1826,7 @@ static int do_tcp_setsockopt(struct sock *sk, int level,
 		/* Values greater than interface MTU won't take effect. However
 		 * at the point when this call is done we typically don't yet
 		 * know which interface is going to be used */
-		if (val < 8 || val > MAX_TCP_WINDOW) {
+		if (val < 64 || val > MAX_TCP_WINDOW) {
 			err = -EINVAL;
 			break;
 		}
