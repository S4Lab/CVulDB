Canonical-kernel__Ubuntu-kernel
commit 1dc8cedfc90a47bb73d3185c9bfed63b8c79f985
Author:     Jay Fenlason <fenlason@redhat.com>
AuthorDate: Fri Dec 11 14:23:58 2009 -0500
Commit:     Leann Ogasawara <leann.ogasawara@canonical.com>
CommitDate: Sun Jan 24 12:09:58 2010 -0800

    firewire: ohci: handle receive packets with a data length of zero
    
    CVE-2009-4138
    
    commit 8c0c0cc2d9f4c523fde04bdfe41e4380dec8ee54 upstream (manually
    applied)
    
    Queueing to receive an ISO packet with a payload length of zero
    silently does nothing in dualbuffer mode, and crashes the kernel in
    packet-per-buffer mode.  Return an error in dualbuffer mode, because
    the DMA controller won't let us do what we want, and work correctly in
    packet-per-buffer mode.
    
    Signed-off-by: Jay Fenlason <fenlason@redhat.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: stable@kernel.org
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>

diff --git a/drivers/firewire/fw-ohci.c b/drivers/firewire/fw-ohci.c
index 436a855a4c60..c067e411d6c2 100644
--- a/drivers/firewire/fw-ohci.c
+++ b/drivers/firewire/fw-ohci.c
@@ -1803,6 +1803,13 @@ ohci_queue_iso_receive_dualbuffer(struct fw_iso_context *base,
 	page     = payload >> PAGE_SHIFT;
 	offset   = payload & ~PAGE_MASK;
 	rest     = p->payload_length;
+	/*
+	 * The controllers I've tested have not worked correctly when
+	 * second_req_count is zero.  Rather than do something we  know won't
+	 * work, return an error
+	 */
+	if (rest == 0)
+		return -EINVAL;
 
 	/* FIXME: make packet-per-buffer/dual-buffer a context option */
 	while (rest > 0) {
