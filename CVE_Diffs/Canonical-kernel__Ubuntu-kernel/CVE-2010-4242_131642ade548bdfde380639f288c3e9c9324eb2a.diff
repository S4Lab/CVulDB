Canonical-kernel__Ubuntu-kernel
commit 131642ade548bdfde380639f288c3e9c9324eb2a
Author:     Alan Cox <alan@linux.intel.com>
AuthorDate: Fri Oct 22 14:11:26 2010 +0100
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Wed Jun 22 09:02:47 2011 -0600

    bluetooth: Fix missing NULL check - CVE-2010-4242
    
    BugLink: http://bugs.launchpad.net/bugs/686158
    
    commit c19483cc5e56ac5e22dd19cf25ba210ab1537773 upstream.
    
    Fortunately this is only exploitable on very unusual hardware.
    
    [Reported a while ago but nothing happened so just fixing it]
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/drivers/bluetooth/hci_ldisc.c b/drivers/bluetooth/hci_ldisc.c
index 76a1abb8f214..283b127cea74 100644
--- a/drivers/bluetooth/hci_ldisc.c
+++ b/drivers/bluetooth/hci_ldisc.c
@@ -258,9 +258,16 @@ static int hci_uart_tty_open(struct tty_struct *tty)
 
 	BT_DBG("tty %p", tty);
 
+	/* FIXME: This btw is bogus, nothing requires the old ldisc to clear
+	   the pointer */
 	if (hu)
 		return -EEXIST;
 
+	/* Error if the tty has no write op instead of leaving an exploitable
+	   hole */
+	if (tty->ops->write == NULL)
+		return -EOPNOTSUPP;
+
 	if (!(hu = kzalloc(sizeof(struct hci_uart), GFP_KERNEL))) {
 		BT_ERR("Can't allocate control structure");
 		return -ENFILE;
