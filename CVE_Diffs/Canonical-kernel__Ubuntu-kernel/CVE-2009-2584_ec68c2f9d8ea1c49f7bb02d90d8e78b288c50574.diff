Canonical-kernel__Ubuntu-kernel
commit ec68c2f9d8ea1c49f7bb02d90d8e78b288c50574
Author:     Leann Ogasawara <leann.ogasawara@canonical.com>
AuthorDate: Tue Oct 6 13:49:32 2009 -0700
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Fri Oct 9 12:19:49 2009 -0600

    sgi-gru: Fix kernel stack buffer overrun, CVE-2009-2584
    
    OriginalLocation: http://lkml.org/lkml/2009/7/20/348
    
    This patch fixes a kernel stack buffer overrun in the sgi-gru procfs
    interface implementation.  The "count" parameter to options_write() is
    user controlled. So this bug can be used to write '\0' bytes to almost
    arbitrary places on the kernel stack.
    
    Signed-off-by: Michael Buesch <mb@bu3sch.de>
    Cc: stable@kernel.org
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/drivers/misc/sgi-gru/gruprocfs.c b/drivers/misc/sgi-gru/gruprocfs.c
index 9cbf95bedce6..23950be8d554 100644
--- a/drivers/misc/sgi-gru/gruprocfs.c
+++ b/drivers/misc/sgi-gru/gruprocfs.c
@@ -164,9 +164,9 @@ static ssize_t options_write(struct file *file, const char __user *userbuf,
 	unsigned long val;
 	char buf[80];
 
+	memset(buf, 0, sizeof(buf));
 	if (strncpy_from_user(buf, userbuf, sizeof(buf) - 1) < 0)
 		return -EFAULT;
-	buf[count - 1] = '\0';
 	if (!strict_strtoul(buf, 10, &val))
 		gru_options = val;
 
