Canonical-kernel__Ubuntu-kernel
commit 72b50482e91ab40246ab13101c35beb16476d1fc
Author:     Vlad Yasevich <vladislav.yasevich@hp.com>
AuthorDate: Wed Feb 27 14:40:37 2008 -0500
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Fri Oct 10 10:44:21 2008 -0400

    Incorrect length was used in SCTP_*_AUTH_CHUNKS socket option
    
    CVE-2008-3792
    
    The chunks are stored inside a parameter structure in the kernel
    and when we copy them to the user, we need to account for
    the parameter header.
    
    Signed-off-by: Vlad Yasevich <vladislav.yasevich@hp.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/net/sctp/socket.c b/net/sctp/socket.c
index f8191d3c1d31..4f148e0843b6 100644
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@ -5069,6 +5069,7 @@ static int sctp_getsockopt_peer_auth_chunks(struct sock *sk, int len,
 	struct sctp_authchunks val;
 	struct sctp_association *asoc;
 	struct sctp_chunks_param *ch;
+	u32    num_chunks;
 	char __user *to;
 
 	if (len <= sizeof(struct sctp_authchunks))
@@ -5085,10 +5086,11 @@ static int sctp_getsockopt_peer_auth_chunks(struct sock *sk, int len,
 	ch = asoc->peer.peer_chunks;
 
 	/* See if the user provided enough room for all the data */
-	if (len < ntohs(ch->param_hdr.length))
+	num_chunks = ntohs(ch->param_hdr.length) - sizeof(sctp_paramhdr_t);
+	if (len < num_chunks)
 		return -EINVAL;
 
-	len = ntohs(ch->param_hdr.length);
+	len = num_chunks;
 	if (put_user(len, optlen))
 		return -EFAULT;
 	if (copy_to_user(to, ch->chunks, len))
@@ -5104,6 +5106,7 @@ static int sctp_getsockopt_local_auth_chunks(struct sock *sk, int len,
 	struct sctp_authchunks val;
 	struct sctp_association *asoc;
 	struct sctp_chunks_param *ch;
+	u32    num_chunks;
 	char __user *to;
 
 	if (len <= sizeof(struct sctp_authchunks))
@@ -5122,10 +5125,11 @@ static int sctp_getsockopt_local_auth_chunks(struct sock *sk, int len,
 	else
 		ch = sctp_sk(sk)->ep->auth_chunk_list;
 
-	if (len < ntohs(ch->param_hdr.length))
+	num_chunks = ntohs(ch->param_hdr.length) - sizeof(sctp_paramhdr_t);
+	if (len < num_chunks)
 		return -EINVAL;
 
-	len = ntohs(ch->param_hdr.length);
+	len = num_chunks;
 	if (put_user(len, optlen))
 		return -EFAULT;
 	if (copy_to_user(to, ch->chunks, len))
