Canonical-kernel__Ubuntu-kernel
commit 0e7635a648fa3cd24270bdeba6ced3b1604e2937
Author:     Andy Whitcroft <apw@canonical.com>
AuthorDate: Wed Jan 18 17:45:17 2012 +0000
Commit:     Brad Figg <brad.figg@canonical.com>
CommitDate: Mon Jan 23 15:36:45 2012 -0800

    overlayfs: apply device cgroup and security permissions to overlay files
    
    When checking permissions on an overlayfs inode we do not take into
    account either device cgroup restrictions nor security permissions.
    This allows a user to mount an overlayfs layer over a restricted device
    directory and by pass those permissions to open otherwise restricted
    files.
    
    Use devcgroup_inode_permission() and security_inode_permission() against
    the underlying inodes when calculating ovl_permission().
    
    CVE-2012-0055
    BugLink: http://bugs.launchpad.net/bugs/915941
    BugLink: http://bugs.launchpad.net/bugs/918212
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Herton Krzesinski <herton.krzesinski@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    
    Signed-off-by: Brad Figg <brad.figg@canonical.com>

diff --git a/fs/overlayfs/inode.c b/fs/overlayfs/inode.c
index ce39fab84ec5..155103282909 100644
--- a/fs/overlayfs/inode.c
+++ b/fs/overlayfs/inode.c
@@ -10,6 +10,8 @@
 #include <linux/fs.h>
 #include <linux/slab.h>
 #include <linux/xattr.h>
+#include <linux/device_cgroup.h>
+#include <linux/security.h>
 #include "overlayfs.h"
 
 int ovl_setattr(struct dentry *dentry, struct iattr *attr)
@@ -118,6 +120,11 @@ int ovl_permission(struct inode *inode, int mask, unsigned int flags)
 	else
 		err = generic_permission(realinode, mask, flags,
 					 realinode->i_op->check_acl);
+
+	if (!err)
+		err = devcgroup_inode_permission(realinode, mask);
+	if (!err)
+		err = security_inode_permission(realinode, mask);
 out_dput:
 	dput(alias);
 	return err;
