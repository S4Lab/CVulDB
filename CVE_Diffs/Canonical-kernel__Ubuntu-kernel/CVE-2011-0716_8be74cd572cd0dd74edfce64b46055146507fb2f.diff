Canonical-kernel__Ubuntu-kernel
commit 8be74cd572cd0dd74edfce64b46055146507fb2f
Author:     Herbert Xu <herbert@gondor.apana.org.au>
AuthorDate: Wed Feb 1 10:28:44 2012 +0000
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Mon Feb 13 16:42:09 2012 -0200

    bridge: Fix mglist corruption that leads to memory corruption
    
    The list mp->mglist is used to indicate whether a multicast group
    is active on the bridge interface itself as opposed to one of the
    constituent interfaces in the bridge.
    
    Unfortunately the operation that adds the mp->mglist node to the
    list neglected to check whether it has already been added.  This
    leads to list corruption in the form of nodes pointing to itself.
    
    Normally this would be quite obvious as it would cause an infinite
    loop when walking the list.  However, as this list is never actually
    walked (which means that we don't really need it, I'll get rid of
    it in a subsequent patch), this instead is hidden until we perform
    a delete operation on the affected nodes.
    
    As the same node may now be pointed to by more than one node, the
    delete operations can then cause modification of freed memory.
    
    This was observed in practice to cause corruption in 512-byte slabs,
    most commonly leading to crashes in jbd2.
    
    Thanks to Josef Bacik for pointing me in the right direction.
    
    Reported-by: Ian Page Hands <ihands@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    (cherry picked from commit 6b0d6a9b4296fa16a28d10d416db7a770fc03287)
    CVE-2011-0716
    BugLink: http://bugs.launchpad.net/bugs/917813
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Herton Krzesinski <herton.krzesinski@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/bridge/br_multicast.c b/net/bridge/br_multicast.c
index 382a4288c518..2cba899d7f01 100644
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@ -707,7 +707,8 @@ static int br_multicast_add_group(struct net_bridge *br,
 		goto err;
 
 	if (!port) {
-		hlist_add_head(&mp->mglist, &br->mglist);
+		if (hlist_unhashed(&mp->mglist))
+			hlist_add_head(&mp->mglist, &br->mglist);
 		mod_timer(&mp->timer, now + br->multicast_membership_interval);
 		goto out;
 	}
