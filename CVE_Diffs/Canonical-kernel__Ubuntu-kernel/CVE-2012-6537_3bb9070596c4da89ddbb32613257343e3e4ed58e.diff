Canonical-kernel__Ubuntu-kernel
commit 3bb9070596c4da89ddbb32613257343e3e4ed58e
Author:     Mathias Krause <minipli@googlemail.com>
AuthorDate: Wed Sep 19 11:33:39 2012 +0000
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Fri Mar 22 08:00:32 2013 -0600

    xfrm_user: fix info leak in copy_to_user_state()
    
    CVE-2012-6537
    
    BugLink: http://bugs.launchpad.net/bugs/1156716
    
    The memory reserved to dump the xfrm state includes the padding bytes of
    struct xfrm_usersa_info added by the compiler for alignment (7 for
    amd64, 3 for i386). Add an explicit memset(0) before filling the buffer
    to avoid the info leak.
    
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit f778a636713a435d3a922c60b1622a91136560c1)
    Acked-by: Colin King <colin.king@canonical.com>
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/xfrm/xfrm_user.c b/net/xfrm/xfrm_user.c
index 0926b006844e..a8d83c4dbcc6 100644
--- a/net/xfrm/xfrm_user.c
+++ b/net/xfrm/xfrm_user.c
@@ -506,6 +506,7 @@ out:
 
 static void copy_to_user_state(struct xfrm_state *x, struct xfrm_usersa_info *p)
 {
+	memset(p, 0, sizeof(*p));
 	memcpy(&p->id, &x->id, sizeof(p->id));
 	memcpy(&p->sel, &x->sel, sizeof(p->sel));
 	memcpy(&p->lft, &x->lft, sizeof(p->lft));
