Canonical-kernel__Ubuntu-kernel
commit b8dd01fb3f2d55a9abcd0a830a039aa8fc73cefd
Author:     Stefan Bader <stefan.bader@canonical.com>
AuthorDate: Fri Sep 7 11:19:08 2012 +0200
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Fri Apr 12 10:17:13 2013 +0200

    UBUNTU: SAUCE: EC2: Backport changes to limit GSO segments
    
      net: Allow driver to limit number of GSO segments per skb
    
    Upstream changes modified the arguments for netif_needs_gso(). This
    patch updates the derivated version of the xen-netfront driver in
    the ec2 branch.
    
    CVE-2012-3412
    BugLink: http://bugs.launchpad.net/bugs/1037456
    
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/drivers/xen/netfront/netfront.c b/drivers/xen/netfront/netfront.c
index c61bc1bfb25b..76a26776181c 100644
--- a/drivers/xen/netfront/netfront.c
+++ b/drivers/xen/netfront/netfront.c
@@ -131,10 +131,20 @@ static inline int skb_gso_ok(struct sk_buff *skb, int features)
         return (features & NETIF_F_TSO);
 }
 
-static inline int netif_needs_gso(struct net_device *dev, struct sk_buff *skb)
+static inline int netif_skb_features(struct net_device *dev, struct sk_buff *skb)
+{
+	int features = dev->features;
+
+	if (skb_shinfo(skb)->gso_segs > skb->dev->gso_max_segs)
+		features &= ~NETIF_F_GSO_MASK;
+
+	return features;
+}
+
+static inline int netif_needs_gso(struct sk_buff *skbi, int features)
 {
         return skb_is_gso(skb) &&
-               (!skb_gso_ok(skb, dev->features) ||
+               (!skb_gso_ok(skb, features) ||
                 unlikely(skb->ip_summed != CHECKSUM_PARTIAL));
 }
 #else
@@ -957,7 +967,7 @@ static int network_start_xmit(struct sk_buff *skb, struct net_device *dev)
 
 	if (unlikely(!netfront_carrier_ok(np) ||
 		     (frags > 1 && !xennet_can_sg(dev)) ||
-		     netif_needs_gso(dev, skb))) {
+		     netif_needs_gso(skb, netif_skb_features(dev, skb)))) {
 		spin_unlock_irq(&np->tx_lock);
 		goto drop;
 	}
