Canonical-kernel__Ubuntu-kernel
commit d944f68ed4a1a88cda1b10f8c1ab518e764896dc
Author:     Dan Rosenberg <drosenberg@vsecurity.com>
AuthorDate: Wed Sep 15 17:44:16 2010 -0400
Commit:     Brad Figg <brad.figg@canonical.com>
CommitDate: Thu Jan 27 08:33:04 2011 -0800

    USB: serial/mos*: prevent reading uninitialized stack memory, CVE-2010-4074
    
    BugLink: http://bugs.launchpad.net/bugs/706149
    
    The TIOCGICOUNT device ioctl in both mos7720.c and mos7840.c allows
    unprivileged users to read uninitialized stack memory, because the
    "reserved" member of the serial_icounter_struct struct declared on the
    stack is not altered or zeroed before being copied back to the user.
    This patch takes care of it.
    
    Signed-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>
    Cc: stable <stable@kernel.org>, 2.6.32.22+
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    (cherry picked from commit a0846f1868b11cd827bdfeaf4527d8b1b1c0b098)
    Signed-off-by: Brad Figg <brad.figg@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/drivers/usb/serial/mos7720.c b/drivers/usb/serial/mos7720.c
index ccd4dd340d2c..65710771e4dd 100644
--- a/drivers/usb/serial/mos7720.c
+++ b/drivers/usb/serial/mos7720.c
@@ -1431,6 +1431,9 @@ static int mos7720_ioctl(struct tty_struct *tty, struct file *file,
 
 	case TIOCGICOUNT:
 		cnow = mos7720_port->icount;
+
+		memset(&icount, 0, sizeof(struct serial_icounter_struct));
+
 		icount.cts = cnow.cts;
 		icount.dsr = cnow.dsr;
 		icount.rng = cnow.rng;
diff --git a/drivers/usb/serial/mos7840.c b/drivers/usb/serial/mos7840.c
index 270009afdf77..879bacb600ed 100644
--- a/drivers/usb/serial/mos7840.c
+++ b/drivers/usb/serial/mos7840.c
@@ -2357,6 +2357,9 @@ static int mos7840_ioctl(struct tty_struct *tty, struct file *file,
 	case TIOCGICOUNT:
 		cnow = mos7840_port->icount;
 		smp_rmb();
+
+		memset(&icount, 0, sizeof(struct serial_icounter_struct));
+
 		icount.cts = cnow.cts;
 		icount.dsr = cnow.dsr;
 		icount.rng = cnow.rng;
