Canonical-kernel__Ubuntu-kernel
commit 86f13e47b1587b844ee6c5e3531b1bf1ddbf4d5a
Author:     Linus Torvalds <torvalds@linux-foundation.org>
AuthorDate: Fri Dec 5 14:49:18 2008 -0800
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Sat Jan 17 16:01:59 2009 +0100

    Enforce a minimum SG_IO timeout
    
    CVE-2008-5700
    
    commit f2f1fa78a155524b849edf359e42a3001ea652c0 upstream
    
    There's no point in having too short SG_IO timeouts, since if the
    command does end up timing out, we'll end up through the reset sequence
    that is several seconds long in order to abort the command that timed
    out.
    
    As a result, shorter timeouts than a few seconds simply do not make
    sense, as the recovery would be longer than the timeout itself.
    
    Add a BLK_MIN_SG_TIMEOUT to match the existign BLK_DEFAULT_SG_TIMEOUT.
    
    Suggested-by: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Acked-by: Tejun Heo <tj@kernel.org>
    Acked-by: Jens Axboe <jens.axboe@oracle.com>
    Cc: Jeff Garzik <jeff@garzik.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/block/bsg.c b/block/bsg.c
index 8e181ab3afb9..31f85dd9f2b5 100644
--- a/block/bsg.c
+++ b/block/bsg.c
@@ -198,6 +198,8 @@ static int blk_fill_sgv4_hdr_rq(struct request_queue *q, struct request *rq,
 		rq->timeout = q->sg_timeout;
 	if (!rq->timeout)
 		rq->timeout = BLK_DEFAULT_SG_TIMEOUT;
+	if (rq->timeout < BLK_MIN_SG_TIMEOUT)
+		rq->timeout = BLK_MIN_SG_TIMEOUT;
 
 	return 0;
 }
diff --git a/block/scsi_ioctl.c b/block/scsi_ioctl.c
index 86308649ea4c..6a7dcb75b94e 100644
--- a/block/scsi_ioctl.c
+++ b/block/scsi_ioctl.c
@@ -235,6 +235,8 @@ static int blk_fill_sghdr_rq(struct request_queue *q, struct request *rq,
 		rq->timeout = q->sg_timeout;
 	if (!rq->timeout)
 		rq->timeout = BLK_DEFAULT_SG_TIMEOUT;
+	if (rq->timeout < BLK_MIN_SG_TIMEOUT)
+		rq->timeout = BLK_MIN_SG_TIMEOUT;
 
 	return 0;
 }
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index d18ee67b40f8..f6b329669c6d 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -607,6 +607,7 @@ extern unsigned long blk_max_low_pfn, blk_max_pfn;
  * default timeout for SG_IO if none specified
  */
 #define BLK_DEFAULT_SG_TIMEOUT	(60 * HZ)
+#define BLK_MIN_SG_TIMEOUT	(7 * HZ)
 
 #ifdef CONFIG_BOUNCE
 extern int init_emergency_isa_pool(void);
