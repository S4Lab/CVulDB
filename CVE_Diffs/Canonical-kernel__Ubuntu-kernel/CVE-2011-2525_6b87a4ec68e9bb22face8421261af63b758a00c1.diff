Canonical-kernel__Ubuntu-kernel
commit 6b87a4ec68e9bb22face8421261af63b758a00c1
Author:     Paolo Pisati <paolo.pisati@canonical.com>
AuthorDate: Mon Oct 10 15:06:08 2011 +0200
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Mon Nov 7 20:58:24 2011 -0200

    net_sched: Fix qdisc_notify() - CVE-2011-2525
    
    Ben Pfaff reported a kernel oops and provided a test program to
    reproduce it.
    
    https://kerneltrap.org/mailarchive/linux-netdev/2010/5/21/6277805
    
    tc_fill_qdisc() should not be called for builtin qdisc, or it
    dereference a NULL pointer to get device ifindex.
    
    Fix is to always use tc_qdisc_dump_ignore() before calling
    tc_fill_qdisc().
    
    BugLink: http://bugs.launchpad.net/bugs/869250
    CVE-2011-2525
    
    Reported-by: Ben Pfaff <blp@nicira.com>
    Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    (backported from 53b0f08042f04813cd1a7473dacd3edfacb28eb3)
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/sched/sch_api.c b/net/sched/sch_api.c
index 8f3edce68e10..fccfe3a81e90 100644
--- a/net/sched/sch_api.c
+++ b/net/sched/sch_api.c
@@ -843,6 +843,11 @@ rtattr_failure:
 	return -1;
 }
 
+static bool tc_qdisc_dump_ignore(struct Qdisc *q)
+{
+	return (q->flags & TCQ_F_BUILTIN) ? true : false;
+}
+
 static int qdisc_notify(struct sk_buff *oskb, struct nlmsghdr *n,
 			u32 clid, struct Qdisc *old, struct Qdisc *new)
 {
@@ -853,11 +858,11 @@ static int qdisc_notify(struct sk_buff *oskb, struct nlmsghdr *n,
 	if (!skb)
 		return -ENOBUFS;
 
-	if (old && old->handle) {
+	if (old && !tc_qdisc_dump_ignore(old)) {
 		if (tc_fill_qdisc(skb, old, clid, pid, n->nlmsg_seq, 0, RTM_DELQDISC) < 0)
 			goto err_out;
 	}
-	if (new) {
+	if (new && !tc_qdisc_dump_ignore(new)) {
 		if (tc_fill_qdisc(skb, new, clid, pid, n->nlmsg_seq, old ? NLM_F_REPLACE : 0, RTM_NEWQDISC) < 0)
 			goto err_out;
 	}
