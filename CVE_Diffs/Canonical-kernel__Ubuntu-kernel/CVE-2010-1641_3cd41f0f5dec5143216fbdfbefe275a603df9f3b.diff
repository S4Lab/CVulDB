Canonical-kernel__Ubuntu-kernel
commit 3cd41f0f5dec5143216fbdfbefe275a603df9f3b
Author:     Steven Whitehouse <swhiteho@redhat.com>
AuthorDate: Mon May 24 14:36:48 2010 +0100
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Tue Jul 20 17:32:47 2010 +0200

    GFS2: Fix permissions checking for setflags ioctl()
    
    CVE-2010-1641
    
    We should be checking for the ownership of the file for which
    flags are being set, rather than just for write access.
    
    Reported-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>
    Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>
    (cherry-picked from commit 7df0e0397b9a18358573274db9fdab991941062f upstream)
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/fs/gfs2/file.c b/fs/gfs2/file.c
index 52d8785ba054..718493f43cf8 100644
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@ -219,6 +219,11 @@ static int do_gfs2_set_flags(struct file *filp, u32 reqflags, u32 mask)
 	if (error)
 		goto out_drop_write;
 
+	error = -EACCES;
+	if (!is_owner_or_cap(inode))
+		goto out;
+
+	error = 0;
 	flags = ip->i_diskflags;
 	new_flags = (flags & ~mask) | (reqflags & mask);
 	if ((new_flags ^ flags) == 0)
@@ -276,8 +281,10 @@ static int gfs2_set_flags(struct file *filp, u32 __user *ptr)
 {
 	struct inode *inode = filp->f_path.dentry->d_inode;
 	u32 fsflags, gfsflags;
+
 	if (get_user(fsflags, ptr))
 		return -EFAULT;
+
 	gfsflags = fsflags_cvt(fsflags_to_gfs2, fsflags);
 	if (!S_ISDIR(inode->i_mode)) {
 		if (gfsflags & GFS2_DIF_INHERIT_JDATA)
