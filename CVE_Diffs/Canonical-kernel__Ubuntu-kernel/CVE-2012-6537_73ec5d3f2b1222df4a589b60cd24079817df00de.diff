Canonical-kernel__Ubuntu-kernel
commit 73ec5d3f2b1222df4a589b60cd24079817df00de
Author:     Mathias Krause <minipli@googlemail.com>
AuthorDate: Wed Sep 19 11:33:41 2012 +0000
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Fri Mar 22 08:00:31 2013 -0600

    xfrm_user: fix info leak in copy_to_user_tmpl()
    
    CVE-2012-6537
    
    BugLink: http://bugs.launchpad.net/bugs/1156716
    
    The memory used for the template copy is a local stack variable. As
    struct xfrm_user_tmpl contains multiple holes added by the compiler for
    alignment, not initializing the memory will lead to leaking stack bytes
    to userland. Add an explicit memset(0) to avoid the info leak.
    
    Initial version of the patch by Brad Spengler.
    
    Cc: Brad Spengler <spender@grsecurity.net>
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit 1f86840f897717f86d523a13e99a447e6a5d2fa5)
    Acked-by: Colin King <colin.king@canonical.com>
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/xfrm/xfrm_user.c b/net/xfrm/xfrm_user.c
index b95a2d64eb59..ab5f23c08bc7 100644
--- a/net/xfrm/xfrm_user.c
+++ b/net/xfrm/xfrm_user.c
@@ -1176,6 +1176,7 @@ static int copy_to_user_tmpl(struct xfrm_policy *xp, struct sk_buff *skb)
 		struct xfrm_user_tmpl *up = &vec[i];
 		struct xfrm_tmpl *kp = &xp->xfrm_vec[i];
 
+		memset(up, 0, sizeof(*up));
 		memcpy(&up->id, &kp->id, sizeof(up->id));
 		up->family = kp->encap_family;
 		memcpy(&up->saddr, &kp->saddr, sizeof(up->saddr));
