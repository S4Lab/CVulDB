Canonical-kernel__Ubuntu-kernel
commit 449fed3e9aefac42a75e5f26209070696d857773
Author:     Dan Rosenberg <drosenberg@vsecurity.com>
AuthorDate: Mon Sep 19 11:43:14 2011 +0100
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Mon Oct 10 14:03:53 2011 -0300

    Bluetooth: Prevent buffer overflow in l2cap config request, CVE-2011-2497
    
    A remote user can provide a small value for the command size field in
    the command header of an l2cap configuration request, resulting in an
    integer underflow when subtracting the size of the configuration request
    header.  This results in copying a very large amount of data via
    memcpy() and destroying the kernel heap.  Check for underflow.
    
    Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>
    
    (backported from commit 7ac28817536797fd40e9646452183606f9e17f71)
    CVE-2011-2497
    BugLink: http://bugs.launchpad.net/bugs/838423
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/bluetooth/l2cap.c b/net/bluetooth/l2cap.c
index 514aa8fbbee2..71120ee8511e 100644
--- a/net/bluetooth/l2cap.c
+++ b/net/bluetooth/l2cap.c
@@ -2720,7 +2720,7 @@ static inline int l2cap_config_req(struct l2cap_conn *conn, struct l2cap_cmd_hdr
 
 	/* Reject if config buffer is too small. */
 	len = cmd_len - sizeof(*req);
-	if (l2cap_pi(sk)->conf_len + len > sizeof(l2cap_pi(sk)->conf_req)) {
+	if (len < 0 || l2cap_pi(sk)->conf_len + len > sizeof(l2cap_pi(sk)->conf_req)) {
 		l2cap_send_cmd(conn, cmd->ident, L2CAP_CONF_RSP,
 				l2cap_build_conf_rsp(sk, rsp,
 					L2CAP_CONF_REJECT, flags), rsp);
