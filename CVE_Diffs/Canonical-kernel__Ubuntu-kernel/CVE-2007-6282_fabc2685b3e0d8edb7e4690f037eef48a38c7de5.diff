Canonical-kernel__Ubuntu-kernel
commit fabc2685b3e0d8edb7e4690f037eef48a38c7de5
Author:     Thomas Graf <tgraf@suug.ch>
AuthorDate: Thu Mar 27 16:08:03 2008 -0700
Commit:     Kees Cook <kees@outflux.net>
CommitDate: Tue Jun 24 15:12:16 2008 -0700

    (CVE-2007-6282) [ESP]: Ensure IV is in linear part of the skb to avoid BUG() due to OOB access
    
    [linux-2.6: 920fc941a9617f95ccb283037fe6f8a38d95bb69]
    
    ESP does not account for the IV size when calling pskb_may_pull() to
    ensure everything it accesses directly is within the linear part of a
    potential fragment. This results in a BUG() being triggered when the
    both the IPv4 and IPv6 ESP stack is fed with an skb where the first
    fragment ends between the end of the esp header and the end of the IV.
    
    This bug was found by Dirk Nehring <dnehring@gmx.net> .
    
    Signed-off-by: Thomas Graf <tgraf@suug.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Kees Cook <kees.cook@canonical.com>

diff --git a/net/ipv4/esp4.c b/net/ipv4/esp4.c
index 1738113268bc..0f307f18dad8 100644
--- a/net/ipv4/esp4.c
+++ b/net/ipv4/esp4.c
@@ -165,7 +165,7 @@ static int esp_input(struct xfrm_state *x, struct sk_buff *skb)
 	int padlen;
 	int err;
 
-	if (!pskb_may_pull(skb, sizeof(*esph)))
+	if (!pskb_may_pull(skb, sizeof(*esph) + esp->conf.ivlen))
 		goto out;
 
 	if (elen <= 0 || (elen & (blksize-1)))
diff --git a/net/ipv6/esp6.c b/net/ipv6/esp6.c
index 444053254676..d993fa07cbd8 100644
--- a/net/ipv6/esp6.c
+++ b/net/ipv6/esp6.c
@@ -155,7 +155,7 @@ static int esp6_input(struct xfrm_state *x, struct sk_buff *skb)
 	int nfrags;
 	int ret = 0;
 
-	if (!pskb_may_pull(skb, sizeof(*esph))) {
+	if (!pskb_may_pull(skb, sizeof(*esph) + esp->conf.ivlen)) {
 		ret = -EINVAL;
 		goto out;
 	}
