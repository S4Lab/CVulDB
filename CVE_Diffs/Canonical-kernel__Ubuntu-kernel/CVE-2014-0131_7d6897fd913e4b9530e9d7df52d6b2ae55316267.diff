Canonical-kernel__Ubuntu-kernel
commit 7d6897fd913e4b9530e9d7df52d6b2ae55316267
Author:     Michael S. Tsirkin <mst@redhat.com>
AuthorDate: Fri Jun 13 12:12:27 2014 +0100
Commit:     Brad Figg <brad.figg@canonical.com>
CommitDate: Wed Jun 25 08:52:39 2014 -0700

    skbuff: add an api to orphan frags
    
    Many places do
           if ((skb_shinfo(skb)->tx_flags & SKBTX_DEV_ZEROCOPY))
                    skb_copy_ubufs(skb, gfp_mask);
    to copy and invoke frag destructors if necessary.
    Add an inline helper for this.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit a353e0ce0fd42d8859260666d1e9b10f2abd4698)
    CVE-2014-0131
    BugLink: http://bugs.launchpad.net/bugs/1298119
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Acked-by: Andy Whitcroft <andy.whitcroft@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 0f7fcc41d896..0233b69f309a 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -1681,6 +1681,22 @@ static inline void skb_orphan(struct sk_buff *skb)
 	skb->sk		= NULL;
 }
 
+/**
+ *	skb_orphan_frags - orphan the frags contained in a buffer
+ *	@skb: buffer to orphan frags from
+ *	@gfp_mask: allocation mask for replacement pages
+ *
+ *	For each frag in the SKB which needs a destructor (i.e. has an
+ *	owner) create a copy of that frag and release the original
+ *	page by calling the destructor.
+ */
+static inline int skb_orphan_frags(struct sk_buff *skb, gfp_t gfp_mask)
+{
+	if (likely(!(skb_shinfo(skb)->tx_flags & SKBTX_DEV_ZEROCOPY)))
+		return 0;
+	return skb_copy_ubufs(skb, gfp_mask);
+}
+
 /**
  *	__skb_queue_purge - empty a list
  *	@list: list to empty
