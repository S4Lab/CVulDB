Canonical-kernel__Ubuntu-kernel
commit 327bc283b051b401312954ab7e5254cde72a3b44
Author:     Xiaotian Feng <xtfeng@gmail.com>
AuthorDate: Thu Jan 12 17:17:08 2012 -0800
Commit:     Leann Ogasawara <leann.ogasawara@canonical.com>
CommitDate: Mon Apr 2 13:19:49 2012 -0700

    proc: fix null pointer deref in proc_pid_permission()
    
    get_proc_task() can fail to search the task and return NULL,
    put_task_struct() will then bomb the kernel with following oops:
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
      IP: [<ffffffff81217d34>] proc_pid_permission+0x64/0xe0
      PGD 112075067 PUD 112814067 PMD 0
      Oops: 0002 [#1] PREEMPT SMP
    
    This is a regression introduced by commit 0499680a ("procfs: add hidepid=
    and gid= mount options").  The kernel should return -ESRCH if
    get_proc_task() failed.
    
    Signed-off-by: Xiaotian Feng <dannyfeng@tencent.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Vasiliy Kulikov <segoon@openwall.com>
    Cc: Stephen Wilson <wilsons@start.ca>
    Acked-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    (cherry picked from commit a2ef990ab5a6705a356d146dd773a3b359787497)
    CVE-2011-4915
    CVE-2011-4916
    CVE-2011-4917
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

diff --git a/fs/proc/base.c b/fs/proc/base.c
index e4762b1b4cd9..92690313a450 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -597,6 +597,8 @@ static int proc_pid_permission(struct inode *inode, int mask)
 	bool has_perms;
 
 	task = get_proc_task(inode);
+	if (!task)
+		return -ESRCH;
 	has_perms = has_pid_permissions(pid, task, 1);
 	put_task_struct(task);
 
