Canonical-kernel__Ubuntu-kernel
commit f50acf082d30b1030fd60fd7084dd854a55ecb2d
Author:     Stefan Bader <stefan.bader@canonical.com>
AuthorDate: Thu May 20 12:01:03 2010 +0200
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Tue May 25 14:09:00 2010 +0200

    UBUNTU: KVM: x86: Completely backport get_cpl functionality
    
    CVE-2010-0306
    CVE-2010-0298
    
    For Ubuntu-2.6.24-25.62 (CVE-2009-3290) we partially backported
    
      commit 2e4d2653497856b102c90153f970c9e344ba96c6 upstream
        KVM: x86: add functions to get the cpl of vcpu
    
    as a prerequisite for
    
      commit 07708c4af1346ab1521b26a202f438366b7bcffd upstream
        KVM: x86: Disallow hypercalls for guest callers in rings > 0
    
    This seems to have worked on AMD CPUs by luck (probably the call was
    never made for those). But now, introduced by
    
      commit 1871c6020d7308afb99127bba51f04548e7ca84e upstream
        KVM: x86 emulator: fix memory access during x86 emulation
    
    this is called on both CPU types, leading to a blazing crash when tried
    on a AMD CPU based system. So this adds the missing part from the
    partial backport.
    
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 28ad3c41a506..1e8ff3d7076e 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -796,6 +796,13 @@ static void svm_get_segment(struct kvm_vcpu *vcpu,
 	var->unusable = !var->present;
 }
 
+static int svm_get_cpl(struct kvm_vcpu *vcpu)
+{
+	struct vmcb_save_area *save = &to_svm(vcpu)->vmcb->save;
+
+	return save->cpl;
+}
+
 static void svm_get_idt(struct kvm_vcpu *vcpu, struct descriptor_table *dt)
 {
 	struct vcpu_svm *svm = to_svm(vcpu);
@@ -1826,6 +1833,7 @@ static struct kvm_x86_ops svm_x86_ops = {
 	.get_segment_base = svm_get_segment_base,
 	.get_segment = svm_get_segment,
 	.set_segment = svm_set_segment,
+	.get_cpl = svm_get_cpl,
 	.get_cs_db_l_bits = kvm_get_cs_db_l_bits,
 	.decache_cr4_guest_bits = svm_decache_cr4_guest_bits,
 	.set_cr0 = svm_set_cr0,
