Canonical-kernel__Ubuntu-kernel
commit 448ec1435daf7b7a4c8520cc8823a96aa66f4dac
Author:     Kees Cook <keescook@chromium.org>
AuthorDate: Thu Jul 4 18:26:08 2013 +0100
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Mon Jul 8 09:38:18 2013 -0400

    block: do not pass disk names as format strings
    
    BugLink: http://bugs.launchpad.net/bugs/1189832
    
    Disk names may contain arbitrary strings, so they must not be
    interpreted as format strings.  It seems that only md allows arbitrary
    strings to be used for disk names, but this could allow for a local
    memory corruption from uid 0 into ring 0.
    
    CVE-2013-2851
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    (back ported from commit ffc8b30866879ed9ba62bd0a86fecdbd51cd3d19)
    
    [ luis: backported to Lucid kernel:
      - adjusted context
      - register_disk() is in fs/partitions/check.c
      - dropped changes to osd_probe() as the issue was introduced only
        with commit d6ae433 ]
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/drivers/block/nbd.c b/drivers/block/nbd.c
index 7b83e7b62bbb..cf5d83a273d5 100644
--- a/drivers/block/nbd.c
+++ b/drivers/block/nbd.c
@@ -655,7 +655,8 @@ static int __nbd_ioctl(struct block_device *bdev, struct nbd_device *lo,
 
 		mutex_unlock(&lo->tx_lock);
 
-		thread = kthread_create(nbd_thread, lo, lo->disk->disk_name);
+		thread = kthread_create(nbd_thread, lo, "%s",
+					lo->disk->disk_name);
 		if (IS_ERR(thread)) {
 			mutex_lock(&lo->tx_lock);
 			return PTR_ERR(thread);
diff --git a/fs/partitions/check.c b/fs/partitions/check.c
index 7b685e10cbad..aa90d88118e3 100644
--- a/fs/partitions/check.c
+++ b/fs/partitions/check.c
@@ -476,7 +476,7 @@ void register_disk(struct gendisk *disk)
 
 	ddev->parent = disk->driverfs_dev;
 
-	dev_set_name(ddev, disk->disk_name);
+	dev_set_name(ddev, "%s", disk->disk_name);
 
 	/* delay uevents, until we scanned partition table */
 	dev_set_uevent_suppress(ddev, 1);
