Canonical-kernel__Ubuntu-kernel
commit e353b749b049c9a6801d882037c24a4d0e254b80
Author:     Andy Whitcroft <apw@canonical.com>
AuthorDate: Tue Jan 17 11:48:23 2012 +0000
Commit:     Ricardo Salveti de Araujo <ricardo.salveti@canonical.com>
CommitDate: Fri Jan 24 01:35:15 2014 -0200

    UBUNTU: ubuntu: overlayfs -- overlayfs: apply device cgroup and security permissions to overlay files
    
    When checking permissions on an overlayfs inode we do not take into
    account either device cgroup restrictions nor security permissions.
    This allows a user to mount an overlayfs layer over a restricted device
    directory and by pass those permissions to open otherwise restricted
    files.
    
    Use devcgroup_inode_permission() and security_inode_permission() against
    the underlying inodes when calculating ovl_permission().
    
    CVE-2012-0055
    BugLink: http://bugs.launchpad.net/bugs/915941
    BugLink: http://bugs.launchpad.net/bugs/918212
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    (cherry picked from commit 59aa87f808b13463bc717ad69362b5372f6c5574)
    
    BugLink: http://bugs.launchpad.net/bugs/1076317
    
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/fs/overlayfs/inode.c b/fs/overlayfs/inode.c
index ba1a77748dda..1145a763e15b 100644
--- a/fs/overlayfs/inode.c
+++ b/fs/overlayfs/inode.c
@@ -10,6 +10,8 @@
 #include <linux/fs.h>
 #include <linux/slab.h>
 #include <linux/xattr.h>
+#include <linux/device_cgroup.h>
+#include <linux/security.h>
 #include "overlayfs.h"
 
 int ovl_setattr(struct dentry *dentry, struct iattr *attr)
@@ -118,6 +120,11 @@ int ovl_permission(struct inode *inode, int mask)
 		err = realinode->i_op->permission(realinode, mask);
 	else
 		err = generic_permission(realinode, mask);
+
+	if (!err)
+		err = devcgroup_inode_permission(realinode, mask);
+	if (!err)
+		err = security_inode_permission(realinode, mask);
 out_dput:
 	dput(alias);
 	return err;
