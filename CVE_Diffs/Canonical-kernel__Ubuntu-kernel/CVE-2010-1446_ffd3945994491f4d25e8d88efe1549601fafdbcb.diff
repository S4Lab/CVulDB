Canonical-kernel__Ubuntu-kernel
commit ffd3945994491f4d25e8d88efe1549601fafdbcb
Author:     Wufei <fei.wu@windriver.com>
AuthorDate: Wed Apr 28 17:42:32 2010 -0400
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Wed Jun 2 12:33:18 2010 +0200

    kgdb: don't needlessly skip PAGE_USER test for Fsl booke
    
    BugLink: http://bugs.launchpad.net/bugs/583414
    
    commit 56151e753468e34aeb322af4b0309ab727c97d2e upstream.
    
    The bypassing of this test is a leftover from 2.4 vintage
    kernels, and is no longer appropriate, or even used by KGDB.
    Currently KGDB uses probe_kernel_write() for all access to
    memory via the KGDB core, so it can simply be deleted.
    
    This fixes CVE-2010-1446.
    
    CC: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    CC: Paul Mackerras <paulus@samba.org>
    CC: Kumar Gala <galak@kernel.crashing.org>
    Signed-off-by: Wufei <fei.wu@windriver.com>
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/arch/powerpc/mm/fsl_booke_mmu.c b/arch/powerpc/mm/fsl_booke_mmu.c
index dc93e95b256e..45f4e61b2632 100644
--- a/arch/powerpc/mm/fsl_booke_mmu.c
+++ b/arch/powerpc/mm/fsl_booke_mmu.c
@@ -131,15 +131,10 @@ void settlbcam(int index, unsigned long virt, phys_addr_t phys,
 	TLBCAM[index].MAS3 = (phys & PAGE_MASK) | MAS3_SX | MAS3_SR;
 	TLBCAM[index].MAS3 |= ((flags & _PAGE_RW) ? MAS3_SW : 0);
 
-#ifndef CONFIG_KGDB /* want user access for breakpoints */
 	if (flags & _PAGE_USER) {
 	   TLBCAM[index].MAS3 |= MAS3_UX | MAS3_UR;
 	   TLBCAM[index].MAS3 |= ((flags & _PAGE_RW) ? MAS3_UW : 0);
 	}
-#else
-	TLBCAM[index].MAS3 |= MAS3_UX | MAS3_UR;
-	TLBCAM[index].MAS3 |= ((flags & _PAGE_RW) ? MAS3_UW : 0);
-#endif
 
 	tlbcam_addrs[index].start = virt;
 	tlbcam_addrs[index].limit = virt + size - 1;
