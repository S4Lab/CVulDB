Canonical-kernel__Ubuntu-kernel
commit 378972082d9c9332a03310f49d1a067bd3401ed2
Author:     Linus Torvalds <torvalds@linux-foundation.org>
AuthorDate: Mon Aug 29 12:11:07 2011 -0300
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Mon Aug 29 09:46:52 2011 -0600

    proc: fix oops on invalid /proc/<pid>/maps access, CVE-2011-1020
    
    When m_start returns an error, the seq_file logic will still call m_stop
    with that error entry, so we'd better make sure that we check it before
    using it as a vma.
    
    Introduced by commit ec6fd8a4355c ("report errors in /proc/*/*map*
    sanely"), which replaced NULL with various ERR_PTR() cases.
    
    (On ia64, you happen to get a unaligned fault instead of a page fault,
    since the address used is generally some random error code like -EPERM)
    
    Reported-by: Anca Emanuel <anca.emanuel@gmail.com>
    Reported-by: Tony Luck <tony.luck@intel.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Am√©rico Wang <xiyou.wangcong@gmail.com>
    Cc: Stephen Wilson <wilsons@start.ca>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    (cherry picked from commit 76597cd31470fa130784c78fadb4dab2e624a723)
    CVE-2011-1020
    BugLink: http://bugs.launchpad.net/bugs/813026
    Signed-off-by: Herton R. Krzesinski <herton.krzesinski@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c
index 8b48a2e7515d..0fd463a4f26e 100644
--- a/fs/proc/task_mmu.c
+++ b/fs/proc/task_mmu.c
@@ -175,7 +175,8 @@ static void m_stop(struct seq_file *m, void *v)
 	struct proc_maps_private *priv = m->private;
 	struct vm_area_struct *vma = v;
 
-	vma_stop(priv, vma);
+	if (!IS_ERR(vma))
+		vma_stop(priv, vma);
 	if (priv->task)
 		put_task_struct(priv->task);
 }
