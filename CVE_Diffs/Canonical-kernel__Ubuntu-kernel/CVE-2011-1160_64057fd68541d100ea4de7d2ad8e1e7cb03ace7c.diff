Canonical-kernel__Ubuntu-kernel
commit 64057fd68541d100ea4de7d2ad8e1e7cb03ace7c
Author:     Peter Huewe <huewe.external.infineon@googlemail.com>
AuthorDate: Wed Jul 27 16:20:23 2011 +0100
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Wed Aug 10 10:02:35 2011 -0300

    char/tpm: Fix unitialized usage of data buffer, CVE-2011-1160
    
    This patch fixes information leakage to the userspace by initializing
    the data buffer to zero.
    
    Reported-by: Peter Huewe <huewe.external@infineon.com>
    Signed-off-by: Peter Huewe <huewe.external@infineon.com>
    Signed-off-by: Marcel Selhorst <m.selhorst@sirrix.com>
    [ Also removed the silly "* sizeof(u8)".  If that isn't 1, we have way
      deeper problems than a simple multiplication can fix.   - Linus ]
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    (backported from commit 1309d7afbed112f0e8e90be9af975550caa0076b)
    CVE-2011-1160
    BugLink: http://bugs.launchpad.net/bugs/816546
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/drivers/char/tpm/tpm.c b/drivers/char/tpm/tpm.c
index c88424a0c89b..14ad7451e96c 100644
--- a/drivers/char/tpm/tpm.c
+++ b/drivers/char/tpm/tpm.c
@@ -922,7 +922,7 @@ int tpm_open(struct inode *inode, struct file *file)
 
 	spin_unlock(&driver_lock);
 
-	chip->data_buffer = kmalloc(TPM_BUFSIZE * sizeof(u8), GFP_KERNEL);
+	chip->data_buffer = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
 	if (chip->data_buffer == NULL) {
 		chip->num_opens--;
 		put_device(chip->dev);
