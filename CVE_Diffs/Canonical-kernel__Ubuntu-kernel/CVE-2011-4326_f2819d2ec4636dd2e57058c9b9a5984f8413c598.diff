Canonical-kernel__Ubuntu-kernel
commit f2819d2ec4636dd2e57058c9b9a5984f8413c598
Author:     Shan Wei <shanwei@cn.fujitsu.com>
AuthorDate: Tue Apr 19 22:52:49 2011 +0000
Commit:     Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
CommitDate: Mon Nov 28 13:42:41 2011 -0200

    ipv6: udp: fix the wrong headroom check
    
    At this point, skb->data points to skb_transport_header.
    So, headroom check is wrong.
    
    For some case:bridge(UFO is on) + eth device(UFO is off),
    there is no enough headroom for IPv6 frag head.
    But headroom check is always false.
    
    This will bring about data be moved to there prior to skb->head,
    when adding IPv6 frag header to skb.
    
    Signed-off-by: Shan Wei <shanwei@cn.fujitsu.com>
    Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    BugLink: http://bugs.launchpad.net/bugs/894373
    CVE-2011-4326
    (cherry-picked from commit a9cf73ea7ff78f52662c8658d93c226effbbedde upstream)
    Acked-by: Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
    Acked-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andy Whitcroft <apw@canonical.com>

diff --git a/net/ipv6/udp.c b/net/ipv6/udp.c
index fc368f8d7020..bfd8d4bc6a19 100644
--- a/net/ipv6/udp.c
+++ b/net/ipv6/udp.c
@@ -1336,7 +1336,7 @@ static struct sk_buff *udp6_ufo_fragment(struct sk_buff *skb, int features)
 	skb->ip_summed = CHECKSUM_NONE;
 
 	/* Check if there is enough headroom to insert fragment header. */
-	if ((skb_headroom(skb) < frag_hdr_sz) &&
+	if ((skb_mac_header(skb) < skb->head + frag_hdr_sz) &&
 	    pskb_expand_head(skb, frag_hdr_sz, 0, GFP_ATOMIC))
 		goto out;
 
