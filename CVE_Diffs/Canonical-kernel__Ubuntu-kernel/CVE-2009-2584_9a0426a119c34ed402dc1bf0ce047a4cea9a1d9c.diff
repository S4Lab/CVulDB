Canonical-kernel__Ubuntu-kernel
commit 9a0426a119c34ed402dc1bf0ce047a4cea9a1d9c
Author:     Linus Torvalds <torvalds@linux-foundation.org>
AuthorDate: Thu Nov 5 10:48:30 2009 -0800
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Thu Nov 12 14:16:35 2009 +0100

    sgi-gru: decrapfiy options_write() function
    
    BugLink: http://bugs.launchpad.net/bugs/480144
    
    commit d39b7dd1dcbf394a1cb897457c862dafe9a20ac5 upstream.
    
    Note: the cherry-pick did not apply cleanly and the patch had to be
    applied by hand due to a previous commit for CVE-2009-2584
    
    Not a single line of actual code in the function was really
    fundamentally correct.
    
    Problems ranged from lack of proper range checking, to removing the last
    character written (which admittedly is usually '\n'), to not accepting
    hex numbers even though the 'show' routine would show the data in that
    format.
    
    This tries to do better.
    
    Acked-by: Michael Buesch <mb@bu3sch.de>
    Tested-and-acked-by: Jack Steiner <steiner@sgi.com>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Michael Gilbert <michael.s.gilbert@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Acked-by: Andy Whitcroft <andy.whitcroft@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/drivers/misc/sgi-gru/gruprocfs.c b/drivers/misc/sgi-gru/gruprocfs.c
index 23950be8d554..9170fa5dcfe7 100644
--- a/drivers/misc/sgi-gru/gruprocfs.c
+++ b/drivers/misc/sgi-gru/gruprocfs.c
@@ -161,14 +161,15 @@ static int options_show(struct seq_file *s, void *p)
 static ssize_t options_write(struct file *file, const char __user *userbuf,
 			     size_t count, loff_t *data)
 {
-	unsigned long val;
-	char buf[80];
+	char buf[20];
 
 	memset(buf, 0, sizeof(buf));
-	if (strncpy_from_user(buf, userbuf, sizeof(buf) - 1) < 0)
+	if (count >= sizeof(buf))
+		return -EINVAL;
+	if (copy_from_user(buf, userbuf, count))
 		return -EFAULT;
-	if (!strict_strtoul(buf, 10, &val))
-		gru_options = val;
+	if (strict_strtoul(buf, 0, &gru_options))
+		return -EINVAL;
 
 	return count;
 }
