Canonical-kernel__Ubuntu-kernel
commit 2bbfd1f8af8b748991742e09efe151971af0190a
Author:     Steve French <sfrench@us.ibm.com>
AuthorDate: Wed Mar 18 05:57:22 2009 +0000
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Mon Jun 15 17:52:52 2009 +0200

    Fix memory overwrite when saving nativeFileSystem field during mount
    
    CVE-2009-1439
    
    commit b363b3304bcf68c4541683b2eff70b29f0446a5b upstream
    
    CIFS can allocate a few bytes to little for the nativeFileSystem field
    during tree connect response processing during mount.  This can result
    in a "Redzone overwritten" message to be logged.
    
    Signed-off-by: Sridhar Vinay <vinaysridhar@in.ibm.com>
    Acked-by: Shirish Pargaonkar <shirishp@us.ibm.com>
    CC: Stable <stable@kernel.org>
    Signed-off-by: Steve French <sfrench@us.ibm.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/fs/cifs/CHANGES b/fs/cifs/CHANGES
index a609599287aa..11c5b82454dc 100644
--- a/fs/cifs/CHANGES
+++ b/fs/cifs/CHANGES
@@ -1,3 +1,7 @@
+Fix "redzone overwritten" bug in cifs_put_tcon (CIFSTcon may allocate too
+little memory for the "nativeFileSystem" field returned by the server
+during mount).
+
 Version 1.52
 ------------
 Fix oops on second mount to server when null auth is used.
diff --git a/fs/cifs/connect.c b/fs/cifs/connect.c
index fd9147cdb5a9..6eb27ffc4e54 100644
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@ -3421,7 +3421,7 @@ CIFSTCon(unsigned int xid, struct cifsSesInfo *ses,
 			    BCC(smb_buffer_response)) {
 				kfree(tcon->nativeFileSystem);
 				tcon->nativeFileSystem =
-				    kzalloc(length + 2, GFP_KERNEL);
+				    kzalloc(2*(length + 1), GFP_KERNEL);
 				if (tcon->nativeFileSystem)
 					cifs_strfromUCS_le(
 						tcon->nativeFileSystem,
