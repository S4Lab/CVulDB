Canonical-kernel__Ubuntu-kernel
commit bcabf76e3dcffacfad937f3600de12982ea2884a
Author:     Kyle McMartin <kyle@bearlake.i.cabal.ca>
AuthorDate: Wed Oct 3 00:54:20 2007 -0400
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Tue Dec 4 12:39:27 2007 -0700

    UBUNTU: fix ia32entry-xen.S for CVE-2007-4573

diff --git a/debian/binary-custom.d/xen/patchset/003-fix-ia32entry-xen.patch b/debian/binary-custom.d/xen/patchset/003-fix-ia32entry-xen.patch
new file mode 100644
index 000000000000..0e3cf88b8d56
--- /dev/null
+++ b/debian/binary-custom.d/xen/patchset/003-fix-ia32entry-xen.patch
@@ -0,0 +1,49 @@
+diff -Nur custom-source-xen.orig/arch/x86_64/ia32/ia32entry-xen.S custom-source-xen/arch/x86_64/ia32/ia32entry-xen.S
+--- custom-source-xen.orig/arch/x86_64/ia32/ia32entry-xen.S	2007-10-03 00:32:28.000000000 -0400
++++ custom-source-xen/arch/x86_64/ia32/ia32entry-xen.S	2007-10-03 00:38:23.000000000 -0400
+@@ -40,6 +40,18 @@
+ 	movq	%rax,R8(%rsp)
+ 	.endm
+ 
++	.macro LOAD_ARGS32 offset
++	movl \offset(%rsp),%r11d
++	movl \offset+8(%rsp),%r10d
++	movl \offset+16(%rsp),%r9d
++	movl \offset+24(%rsp),%r8d
++	movl \offset+40(%rsp),%ecx
++	movl \offset+48(%rsp),%edx
++	movl \offset+56(%rsp),%esi
++	movl \offset+64(%rsp),%edi
++	movl \offset+72(%rsp),%eax
++	.endm
++
+ #if defined (__XEN_X86_64)
+ #include "../kernel/xen_entry.S"
+ 		
+@@ -172,7 +184,7 @@
+ 	movq	$-ENOSYS,RAX(%rsp)	/* really needed? */
+ 	movq	%rsp,%rdi        /* &pt_regs -> arg1 */
+ 	call	syscall_trace_enter
+-	LOAD_ARGS ARGOFFSET  /* reload args from stack in case ptrace changed it */
++	LOAD_ARGS32 ARGOFFSET  /* reload args from stack in case ptrace changed it */
+ 	RESTORE_REST
+ 	movl	%ebp, %ebp
+ 	/* no need to do an access_ok check here because rbp has been
+@@ -277,7 +289,7 @@
+ 	movq $-ENOSYS,RAX(%rsp)	/* really needed? */
+ 	movq %rsp,%rdi        /* &pt_regs -> arg1 */
+ 	call syscall_trace_enter
+-	LOAD_ARGS ARGOFFSET  /* reload args from stack in case ptrace changed it */
++	LOAD_ARGS32 ARGOFFSET  /* reload args from stack in case ptrace changed it */
+ 	RESTORE_REST
+ 	movl RSP-ARGOFFSET(%rsp), %r8d
+ 	/* no need to do an access_ok check here because r8 has been
+@@ -360,7 +372,7 @@
+ 	movq $-ENOSYS,RAX(%rsp)	/* really needed? */
+ 	movq %rsp,%rdi        /* &pt_regs -> arg1 */
+ 	call syscall_trace_enter
+-	LOAD_ARGS ARGOFFSET  /* reload args from stack in case ptrace changed it */
++	LOAD_ARGS32 ARGOFFSET  /* reload args from stack in case ptrace changed it */
+ 	RESTORE_REST
+ 	jmp ia32_do_syscall
+ END(ia32_syscall)
