Canonical-kernel__Ubuntu-kernel
commit e23e1cdeb7c7aca9fb357c12baf8bbfd8d88a2c5
Author:     Peter Huewe <huewe.external.infineon@googlemail.com>
AuthorDate: Thu Sep 15 14:47:42 2011 -0300
Commit:     Brad Figg <brad.figg@canonical.com>
CommitDate: Wed Nov 30 10:04:40 2011 -0800

    TPM: Zero buffer after copying to userspace
    
    BugLink: http://bugs.launchpad.net/bugs/888042
    
    commit 3321c07ae5068568cd61ac9f4ba749006a7185c9 upstream.
    
    Since the buffer might contain security related data it might be a good idea to
    zero the buffer after we have copied it to userspace.
    
    This got assigned CVE-2011-1162.
    
    Signed-off-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com>
    Signed-off-by: James Morris <jmorris@namei.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Brad Figg <brad.figg@canonical.com>

diff --git a/drivers/char/tpm/tpm.c b/drivers/char/tpm/tpm.c
index 78cb0b3a96d3..a0789f682e14 100644
--- a/drivers/char/tpm/tpm.c
+++ b/drivers/char/tpm/tpm.c
@@ -1044,6 +1044,7 @@ ssize_t tpm_read(struct file *file, char __user *buf,
 {
 	struct tpm_chip *chip = file->private_data;
 	ssize_t ret_size;
+	int rc;
 
 	del_singleshot_timer_sync(&chip->user_read_timer);
 	flush_scheduled_work();
@@ -1054,8 +1055,11 @@ ssize_t tpm_read(struct file *file, char __user *buf,
 			ret_size = size;
 
 		mutex_lock(&chip->buffer_mutex);
-		if (copy_to_user(buf, chip->data_buffer, ret_size))
+		rc = copy_to_user(buf, chip->data_buffer, ret_size);
+		memset(chip->data_buffer, 0, ret_size);
+		if (rc)
 			ret_size = -EFAULT;
+
 		mutex_unlock(&chip->buffer_mutex);
 	}
 
