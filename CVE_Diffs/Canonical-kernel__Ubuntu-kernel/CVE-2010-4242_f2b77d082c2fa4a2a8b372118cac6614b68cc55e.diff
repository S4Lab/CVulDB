Canonical-kernel__Ubuntu-kernel
commit f2b77d082c2fa4a2a8b372118cac6614b68cc55e
Author:     Alan Cox <alan@linux.intel.com>
AuthorDate: Fri Feb 11 12:35:20 2011 -0800
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Fri Feb 25 10:47:29 2011 -0600

    bluetooth: Fix missing NULL check, CVE-2010-4242
    
    CVE-2010-4242
    
    BugLink: http://bugs.launchpad.net/bugs/714846
    
    Fortunately this is only exploitable on very unusual hardware.
    
    [Reported a while ago but nothing happened so just fixing it]
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    (cherry-picked from commit c19483cc5e56ac5e22dd19cf25ba210ab1537773)
    Signed-off-by: Brad Figg <brad.figg@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/drivers/bluetooth/hci_ldisc.c b/drivers/bluetooth/hci_ldisc.c
index e68821d074b0..7b62dfd9f4d7 100644
--- a/drivers/bluetooth/hci_ldisc.c
+++ b/drivers/bluetooth/hci_ldisc.c
@@ -263,9 +263,16 @@ static int hci_uart_tty_open(struct tty_struct *tty)
 
 	BT_DBG("tty %p", tty);
 
+	/* FIXME: This btw is bogus, nothing requires the old ldisc to clear
+	   the pointer */
 	if (hu)
 		return -EEXIST;
 
+	/* Error if the tty has no write op instead of leaving an exploitable
+	   hole */
+	if (tty->driver->write == NULL)
+		return -EOPNOTSUPP;
+
 	if (!(hu = kzalloc(sizeof(struct hci_uart), GFP_KERNEL))) {
 		BT_ERR("Can't allocate control structure");
 		return -ENFILE;
