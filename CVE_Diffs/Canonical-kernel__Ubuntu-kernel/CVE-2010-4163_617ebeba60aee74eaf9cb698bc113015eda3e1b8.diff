Canonical-kernel__Ubuntu-kernel
commit 617ebeba60aee74eaf9cb698bc113015eda3e1b8
Author:     Xiaotian Feng <dfeng@redhat.com>
AuthorDate: Mon Nov 29 10:03:55 2010 +0100
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Wed Jun 22 09:02:50 2011 -0600

    block: check for proper length of iov entries earlier in blk_rq_map_user_iov(), CVE-2010-4163
    
    BugLink: http://bugs.launchpad.net/bugs/721504
    
    CVE-2010-4163
    
    commit 9284bcf checks for proper length of iov entries in
    blk_rq_map_user_iov(). But if the map is unaligned, kernel
    will break out the loop without checking for the proper length.
    So we need to check the proper length before the unalign check.
    
    Signed-off-by: Xiaotian Feng <dfeng@redhat.com>
    Cc: stable@kernel.org
    Signed-off-by: Jens Axboe <jaxboe@fusionio.com>
    (cherry picked from commit 5478755616ae2ef1ce144dded589b62b2a50d575)
    
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Acked-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/block/blk-map.c b/block/blk-map.c
index 30a7e5158930..749effa7149c 100644
--- a/block/blk-map.c
+++ b/block/blk-map.c
@@ -201,12 +201,13 @@ int blk_rq_map_user_iov(struct request_queue *q, struct request *rq,
 	for (i = 0; i < iov_count; i++) {
 		unsigned long uaddr = (unsigned long)iov[i].iov_base;
 
+		if (!iov[i].iov_len)
+			return -EINVAL;
+
 		if (uaddr & queue_dma_alignment(q)) {
 			unaligned = 1;
 			break;
 		}
-		if (!iov[i].iov_len)
-			return -EINVAL;
 	}
 
 	if (unaligned || (q->dma_pad_mask & len) || map_data)
