Canonical-kernel__Ubuntu-kernel
commit 65008caaa8a8286f075ccfcfe298299ed618a4cc
Author:     Dan Rosenberg <drosenberg@vsecurity.com>
AuthorDate: Thu Jul 7 23:12:19 2011 +0100
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Thu Jul 7 20:43:14 2011 -0600

    dccp: handle invalid feature options length, CVE-2011-1770
    
    A length of zero (after subtracting two for the type and len fields) for
    the DCCPO_{CHANGE,CONFIRM}_{L,R} options will cause an underflow due to
    the subtraction.  The subsequent code may read past the end of the
    options value buffer when parsing.  I'm unsure of what the consequences
    of this might be, but it's probably not good.
    
    Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>
    Cc: stable@kernel.org
    Acked-by: Gerrit Renker <gerrit@erg.abdn.ac.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    (cherry picked from commit a294865978b701e4d0d90135672749531b9a900d)
    CVE-2011-1770
    BugLink: http://bugs.launchpad.net/bugs/806375
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/dccp/options.c b/net/dccp/options.c
index 07395f861d35..92a41300a7f7 100644
--- a/net/dccp/options.c
+++ b/net/dccp/options.c
@@ -131,6 +131,8 @@ int dccp_parse_options(struct sock *sk, struct dccp_request_sock *dreq,
 		case DCCPO_CHANGE_L ... DCCPO_CONFIRM_R:
 			if (pkt_type == DCCP_PKT_DATA)      /* RFC 4340, 6 */
 				break;
+			if (len == 0)
+				goto out_invalid_option;
 			rc = dccp_feat_parse_options(sk, dreq, mandatory, opt,
 						    *value, value + 1, len - 1);
 			if (rc)
