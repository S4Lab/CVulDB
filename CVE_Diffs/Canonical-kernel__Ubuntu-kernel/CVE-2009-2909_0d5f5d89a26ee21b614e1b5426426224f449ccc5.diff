Canonical-kernel__Ubuntu-kernel
commit 0d5f5d89a26ee21b614e1b5426426224f449ccc5
Author:     Arjan van de Ven <arjan@linux.intel.com>
AuthorDate: Wed Sep 30 13:51:11 2009 +0200
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Tue Dec 1 19:58:47 2009 +0100

    net ax25: Fix signed comparison in the sockopt handler
    
    CVE-2009-2909
    
    commit 536a16fef0f84b71d949c67b0fc51de6325bca32 upstream 2.6.31.2
    
    fixed upstream in commit b7058842c940ad2c08dd829b21e5c92ebe3b8758 in a different way
    
    The ax25 code tried to use
    
            if (optlen < sizeof(int))
                    return -EINVAL;
    
    as a security check against optlen being negative (or zero) in the
    set socket option.
    
    Unfortunately, "sizeof(int)" is an unsigned property, with the
    result that the whole comparison is done in unsigned, letting
    negative values slip through.
    
    This patch changes this to
    
            if (optlen < (int)sizeof(int))
                    return -EINVAL;
    
    so that the comparison is done as signed, and negative values
    get properly caught.
    
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    
    (cherry picked from commit 536a16fef0f84b71d949c67b0fc51de6325bca32)
    
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/net/ax25/af_ax25.c b/net/ax25/af_ax25.c
index b4725ff317c0..3683f8720fa8 100644
--- a/net/ax25/af_ax25.c
+++ b/net/ax25/af_ax25.c
@@ -541,7 +541,7 @@ static int ax25_setsockopt(struct socket *sock, int level, int optname,
 	if (level != SOL_AX25)
 		return -ENOPROTOOPT;
 
-	if (optlen < sizeof(int))
+	if (optlen < (int)sizeof(int))
 		return -EINVAL;
 
 	if (get_user(opt, (int __user *)optval))
