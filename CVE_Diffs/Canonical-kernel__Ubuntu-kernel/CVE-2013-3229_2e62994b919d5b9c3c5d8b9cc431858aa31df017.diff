Canonical-kernel__Ubuntu-kernel
commit 2e62994b919d5b9c3c5d8b9cc431858aa31df017
Author:     Mathias Krause <minipli@googlemail.com>
AuthorDate: Sun Apr 7 01:51:54 2013 +0000
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Fri May 31 12:44:17 2013 -0500

    iucv: Fix missing msg_namelen update in iucv_sock_recvmsg()
    
    CVE-2013-3229
    
    BugLink: https://bugs.launchpad.net/bugs/1172381
    
    The current code does not fill the msg_name member in case it is set.
    It also does not set the msg_namelen member to 0 and therefore makes
    net/socket.c leak the local, uninitialized sockaddr_storage variable
    to userland -- 128 bytes of kernel stack memory.
    
    Fix that by simply setting msg_namelen to 0 as obviously nobody cared
    about iucv_sock_recvmsg() not filling the msg_name in case it was set.
    
    Cc: Ursula Braun <ursula.braun@de.ibm.com>
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (back ported from commit a5598bd9c087dc0efc250a5221e5d0e6f584ee88)
    
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/iucv/af_iucv.c b/net/iucv/af_iucv.c
index bada1b9c670b..f605b238bd6f 100644
--- a/net/iucv/af_iucv.c
+++ b/net/iucv/af_iucv.c
@@ -1160,6 +1160,8 @@ static int iucv_sock_recvmsg(struct kiocb *iocb, struct socket *sock,
 	struct sk_buff *skb, *rskb, *cskb;
 	int err = 0;
 
+	msg->msg_namelen = 0;
+
 	if ((sk->sk_state == IUCV_DISCONN || sk->sk_state == IUCV_SEVERED) &&
 	    skb_queue_empty(&iucv->backlog_skb_q) &&
 	    skb_queue_empty(&sk->sk_receive_queue) &&
