Canonical-kernel__Ubuntu-kernel
commit 7db42a79cd364ac22669f4ce23b3a11669d51f73
Author:     Mathias Krause <minipli@googlemail.com>
AuthorDate: Sun Apr 7 01:51:57 2013 +0000
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Fri May 31 12:44:17 2013 -0500

    netrom: fix info leak via msg_name in nr_recvmsg()
    
    CVE-2013-3232
    
    BugLink: https://bugs.launchpad.net/bugs/1172386
    
    In case msg_name is set the sockaddr info gets filled out, as
    requested, but the code fails to initialize the padding bytes of
    struct sockaddr_ax25 inserted by the compiler for alignment. Also
    the sax25_ndigis member does not get assigned, leaking four more
    bytes.
    
    Both issues lead to the fact that the code will leak uninitialized
    kernel stack bytes in net/socket.c.
    
    Fix both issues by initializing the memory with memset(0).
    
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit 3ce5efad47b62c57a4f5c54248347085a750ce0e)
    
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/netrom/af_netrom.c b/net/netrom/af_netrom.c
index 7a834952f67f..d2405237f6e0 100644
--- a/net/netrom/af_netrom.c
+++ b/net/netrom/af_netrom.c
@@ -1181,6 +1181,7 @@ static int nr_recvmsg(struct kiocb *iocb, struct socket *sock,
 	skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);
 
 	if (sax != NULL) {
+		memset(sax, 0, sizeof(sax));
 		sax->sax25_family = AF_NETROM;
 		skb_copy_from_linear_data_offset(skb, 7, sax->sax25_call.ax25_call,
 			      AX25_ADDR_LEN);
