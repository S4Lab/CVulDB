Canonical-kernel__Ubuntu-kernel
commit 53d54754caca9b01235947c2c7601d283e405997
Author:     Stefan Bader <stefan.bader@canonical.com>
AuthorDate: Tue Aug 17 14:17:28 2010 +0200
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Wed Aug 18 11:26:03 2010 +0200

    OPENVZ: Fixup patches to memory.c and mlock.c
    
    CVE-2010-2240
    
    This updates the openvz patchset to handle changes in the upstream code.
    
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch b/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
index 2001ac2616e8..0bde9f871fa7 100644
--- a/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
+++ b/debian/binary-custom.d/openvz/patchset/0001-2.6.24-ovz002.patch
@@ -70375,21 +70375,24 @@ Index: kernel/mm/memory.c
  	unlock_page(page);
  	page_cache_release(page);
  	return ret;
-@@ -2186,10 +2268,14 @@
+@@ -2186,13 +2268,17 @@
  	struct page *page;
  	spinlock_t *ptl;
  	pte_t entry;
 +	struct page_beancounter *pbc;
  
- 	/* Allocate our own private page. */
- 	pte_unmap(page_table);
+	pte_unmap(page_table);
+ 
+ 	/* Check if we need to add a guard page to the stack */
+ 	if (check_stack_guard_page(vma, address) < 0)
+ 		return VM_FAULT_SIGBUS;
  
 +	if (unlikely(pb_alloc(&pbc)))
 +		goto oom_nopb;
 +
+ 	/* Allocate our own private page. */
  	if (unlikely(anon_vma_prepare(vma)))
  		goto oom;
- 	page = alloc_zeroed_user_highpage_movable(vma, address);
 @@ -2205,17 +2291,22 @@
  	inc_mm_counter(mm, anon_rss);
  	lru_cache_add_active(page);
@@ -70640,9 +70643,9 @@ Index: kernel/mm/mlock.c
  
  success:
 @@ -74,13 +84,19 @@
- 		pages = -pages;
- 		if (!(newflags & VM_IO))
+ 
  			ret = make_pages_present(start, end);
+ 		}
 -	}
 +	} else
 +		ub_locked_uncharge(mm, end - start);
@@ -70831,7 +70834,7 @@ Index: kernel/mm/mmap.c
  	 * Overcommit..  This must be the final test, as it will
  	 * update security statistics.
  	 */
- 	if (security_vm_enough_memory(grow))
+ 	if (security_vm_enough_memory_mm(mm, grow))
 -		return -ENOMEM;
 +		goto fail_sec;
  
