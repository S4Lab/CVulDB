Canonical-kernel__Ubuntu-kernel
commit 410457ee558e1c96f10de094fbb1814961923d4d
Author:     Takuya Yoshikawa <yoshikawa.takuya@oss.ntt.co.jp>
AuthorDate: Thu Aug 15 12:52:22 2013 +0100
Commit:     Brad Figg <brad.figg@canonical.com>
CommitDate: Wed Aug 21 11:20:12 2013 -0700

    KVM: Validate userspace_addr of memslot when registered
    
    CVE-2013-1943
    
    BugLink: http://bugs.launchpad.net/bugs/1191918
    
    This way, we can avoid checking the user space address many times when
    we read the guest memory.
    
    Although we can do the same for write if we check which slots are
    writable, we do not care write now: reading the guest memory happens
    more often than writing.
    
    [avi: change VERIFY_READ to VERIFY_WRITE]
    
    Signed-off-by: Takuya Yoshikawa <yoshikawa.takuya@oss.ntt.co.jp>
    Signed-off-by: Avi Kivity <avi@redhat.com>
    (back ported from commit fa3d315a4ce2c0891cdde262562e710d95fba19e)
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 3715e41820b4..2542058d2be9 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -1189,7 +1189,10 @@ int __kvm_set_memory_region(struct kvm *kvm,
 		goto out;
 	if (mem->guest_phys_addr & (PAGE_SIZE - 1))
 		goto out;
-	if (user_alloc && (mem->userspace_addr & (PAGE_SIZE - 1)))
+	/* We can read the guest memory with __xxx_user() later on. */
+	if (user_alloc &&
+	    ((mem->userspace_addr & (PAGE_SIZE - 1)) ||
+	     !access_ok(VERIFY_WRITE, mem->userspace_addr, mem->memory_size)))
 		goto out;
 	if (mem->slot >= KVM_MEMORY_SLOTS + KVM_PRIVATE_MEM_SLOTS)
 		goto out;
@@ -1620,7 +1623,7 @@ int kvm_read_guest_page(struct kvm *kvm, gfn_t gfn, void *data, int offset,
 	addr = gfn_to_hva(kvm, gfn);
 	if (kvm_is_error_hva(addr))
 		return -EFAULT;
-	r = copy_from_user(data, (void __user *)addr + offset, len);
+	r = __copy_from_user(data, (void __user *)addr + offset, len);
 	if (r)
 		return -EFAULT;
 	return 0;
