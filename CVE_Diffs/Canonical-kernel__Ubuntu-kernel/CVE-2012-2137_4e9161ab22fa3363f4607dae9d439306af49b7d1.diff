Canonical-kernel__Ubuntu-kernel
commit 4e9161ab22fa3363f4607dae9d439306af49b7d1
Author:     Avi Kivity <avi@redhat.com>
AuthorDate: Sun Apr 22 17:02:11 2012 +0300
Commit:     Luis Henriques <luis.henriques@canonical.com>
CommitDate: Mon Sep 24 18:29:37 2012 +0100

    KVM: Fix buffer overflow in kvm_set_irq()
    
    CVE-2012-2137
    
    BugLink: http://bugs.launchpad.net/bugs/1016298
    
    kvm_set_irq() has an internal buffer of three irq routing entries, allowing
    connecting a GSI to three IRQ chips or on MSI.  However setup_routing_entry()
    does not properly enforce this, allowing three irqchip routes followed by
    an MSI route to overflow the buffer.
    
    Fix by ensuring that an MSI entry is added to an empty list.
    
    Signed-off-by: Avi Kivity <avi@redhat.com>
    (cherry picked from commit f2ebd422f71cda9c791f76f85d2ca102ae34a1ed)
    
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Acked-by: Brad Figg <brad.figg@canonical.com>
    Acked-by: Colin King <colin.king@canonical.com>

diff --git a/virt/kvm/irq_comm.c b/virt/kvm/irq_comm.c
index 9f614b4e365f..272407c00ede 100644
--- a/virt/kvm/irq_comm.c
+++ b/virt/kvm/irq_comm.c
@@ -318,6 +318,7 @@ static int setup_routing_entry(struct kvm_irq_routing_table *rt,
 	 */
 	hlist_for_each_entry(ei, n, &rt->map[ue->gsi], link)
 		if (ei->type == KVM_IRQ_ROUTING_MSI ||
+		    ue->type == KVM_IRQ_ROUTING_MSI ||
 		    ue->u.irqchip.irqchip == ei->irqchip.irqchip)
 			return r;
 
