Canonical-kernel__Ubuntu-kernel
commit f8fb43d5c3a29ee2355c08473df88c9f024efb0b
Author:     Benjamin Poirier <bpoirier@suse.de>
AuthorDate: Wed Nov 30 07:47:18 2011 -0500
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Mon Dec 12 15:54:53 2011 +0100

    gro: reset vlan_tci on reuse
    
    BugLink: http://bugs.launchpad.net/bugs/902317
    
    This one liner is part of upstream
    commit 3701e51382a026cba10c60b03efabe534fba4ca4
    Author: Jesse Gross <jesse@nicira.com>
    
        vlan: Centralize handling of hardware acceleration.
    
    The bulk of that commit is a rework of the hardware assisted vlan tagging
    driver interface, and as such doesn't classify for -stable inclusion. The fix
    that is needed is a part of that commit but can work independently of the
    rest.
    
    This patch can avoid panics on the 2.6.32.y -stable kernels and is in the same
    spirit as mainline commits
    66c46d7 gro: Reset dev pointer on reuse
    6d152e2 gro: reset skb_iif on reuse
    which are already in -stable.
    
    For drivers using the vlan_gro_frags() interface, a packet with an invalid tci
    leads to GRO_DROP and napi_reuse_skb(). The skb has to be sanitized before
    being reused or we may send an skb with an invalid vlan_tci field up the stack
    where it is not expected.
    
    Signed-off-by: Benjamin Poirier <bpoirier@suse.de>
    Cc: Jesse Gross <jesse@nicira.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    
    CVE-2011-1576
    BugLink: http://bugs.launchpad.net/bugs/844361
    (cherry-picked from 5aff28abc7e0ec1ddd562372ae4fa01e8e4d4073 linux-2.6.32.y)
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/net/core/dev.c b/net/core/dev.c
index 4b8752cb7db3..f5f7ea6ada7b 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -2557,6 +2557,7 @@ void napi_reuse_skb(struct napi_struct *napi, struct sk_buff *skb)
 {
 	__skb_pull(skb, skb_headlen(skb));
 	skb_reserve(skb, NET_IP_ALIGN - skb_headroom(skb));
+	skb->vlan_tci = 0;
 	skb->dev = napi->dev;
 	skb->iif = 0;
 
