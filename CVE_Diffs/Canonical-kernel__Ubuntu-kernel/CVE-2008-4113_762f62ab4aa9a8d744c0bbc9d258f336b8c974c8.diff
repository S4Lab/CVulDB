Canonical-kernel__Ubuntu-kernel
commit 762f62ab4aa9a8d744c0bbc9d258f336b8c974c8
Author:     Vlad Yasevich <vladislav.yasevich@hp.com>
AuthorDate: Wed Aug 27 16:09:49 2008 -0700
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Fri Oct 10 10:44:22 2008 -0400

    sctp: fix random memory dereference with SCTP_HMAC_IDENT option.
    
    CVE-2008-4113
    
    commit d97240552cd98c4b07322f30f66fd9c3ba4171de upstream
    
    The number of identifiers needs to be checked against the option
    length.  Also, the identifier index provided needs to be verified
    to make sure that it doesn't exceed the bounds of the array.
    
    Signed-off-by: Vlad Yasevich <vladislav.yasevich@hp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Stefan Bader <stefan.bader@canonical>

diff --git a/net/sctp/auth.c b/net/sctp/auth.c
index c4d7d68e0d0a..19bc7c708a44 100644
--- a/net/sctp/auth.c
+++ b/net/sctp/auth.c
@@ -786,6 +786,9 @@ int sctp_auth_ep_set_hmacs(struct sctp_endpoint *ep,
 	for (i = 0; i < hmacs->shmac_num_idents; i++) {
 		id = hmacs->shmac_idents[i];
 
+		if (id > SCTP_AUTH_HMAC_ID_MAX)
+			return -EOPNOTSUPP;
+
 		if (SCTP_AUTH_HMAC_ID_SHA1 == id)
 			has_sha1 = 1;
 
diff --git a/net/sctp/socket.c b/net/sctp/socket.c
index d34c06fe7fcf..ff340be6dcc7 100644
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@ -2990,6 +2990,7 @@ static int sctp_setsockopt_hmac_ident(struct sock *sk,
 				    int optlen)
 {
 	struct sctp_hmacalgo *hmacs;
+	u32 idents;
 	int err;
 
 	if (!sctp_auth_enable)
@@ -3007,8 +3008,9 @@ static int sctp_setsockopt_hmac_ident(struct sock *sk,
 		goto out;
 	}
 
-	if (hmacs->shmac_num_idents == 0 ||
-	    hmacs->shmac_num_idents > SCTP_AUTH_NUM_HMACS) {
+	idents = hmacs->shmac_num_idents;
+	if (idents == 0 || idents > SCTP_AUTH_NUM_HMACS ||
+	    (idents * sizeof(u16)) > (optlen - sizeof(struct sctp_hmacalgo))) {
 		err = -EINVAL;
 		goto out;
 	}
