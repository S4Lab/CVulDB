Canonical-kernel__Ubuntu-kernel
commit c0085a478d166ae1b53178f203bc06f161af888f
Author:     Vlad Yasevich <vladislav.yasevich@hp.com>
AuthorDate: Mon Aug 25 15:16:19 2008 -0700
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Fri Oct 10 10:44:19 2008 -0400

    sctp: add verification checks to SCTP_AUTH_KEY option
    
    CVE-2008-3526, CVE-2008-4445
    
    commit e2ab3da38b46f4f1389f18c7cd4a9a71ceac0bc6 2.6.26.y
    commit 30c2235cbc477d4629983d440cdc4f496fec9246 upstream
    
    The structure used for SCTP_AUTH_KEY option contains a
    length that needs to be verfied to prevent buffer overflow
    conditions.  Spoted by Eugene Teo <eteo@redhat.com>.
    
    Signed-off-by: Vlad Yasevich <vladislav.yasevich@hp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/net/sctp/auth.c b/net/sctp/auth.c
index 97e6ebd14500..c4d7d68e0d0a 100644
--- a/net/sctp/auth.c
+++ b/net/sctp/auth.c
@@ -80,6 +80,10 @@ static struct sctp_auth_bytes *sctp_auth_create_key(__u32 key_len, gfp_t gfp)
 {
 	struct sctp_auth_bytes *key;
 
+	/* Verify that we are not going to overflow INT_MAX */
+	if ((INT_MAX - key_len) < sizeof(struct sctp_auth_bytes))
+		return NULL;
+
 	/* Allocate the shared key */
 	key = kmalloc(sizeof(struct sctp_auth_bytes) + key_len, gfp);
 	if (!key)
diff --git a/net/sctp/socket.c b/net/sctp/socket.c
index f4cd51ef1860..f8191d3c1d31 100644
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@ -3039,6 +3039,11 @@ static int sctp_setsockopt_auth_key(struct sock *sk,
 		goto out;
 	}
 
+	if (authkey->sca_keylen > optlen) {
+		ret = -EINVAL;
+		goto out;
+	}
+
 	asoc = sctp_id2assoc(sk, authkey->sca_assoc_id);
 	if (!asoc && authkey->sca_assoc_id && sctp_style(sk, UDP)) {
 		ret = -EINVAL;
