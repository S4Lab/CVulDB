Canonical-kernel__Ubuntu-kernel
commit 3f515493a485e1391b85f18b7171c5307885174e
Author:     Will Deacon <will.deacon@arm.com>
AuthorDate: Mon Aug 26 09:52:41 2013 +0100
Commit:     Tim Gardner <tim.gardner@canonical.com>
CommitDate: Thu Aug 29 10:56:49 2013 -0600

    ARM: 7809/1: perf: fix event validation for software group leaders
    
    CVE-2013-4254
    
    BugLink: http://bugs.launchpad.net/bugs/1216442
    
    It is possible to construct an event group with a software event as a
    group leader and then subsequently add a hardware event to the group.
    This results in the event group being validated by adding all members
    of the group to a fake PMU and attempting to allocate each event on
    their respective PMU.
    
    Unfortunately, for software events wthout a corresponding arm_pmu, this
    results in a kernel crash attempting to dereference the ->get_event_idx
    function pointer.
    
    This patch fixes the problem by checking explicitly for software events
    and ignoring those in event validation (since they can always be
    scheduled). We will probably want to revisit this for 3.12, since the
    validation checks don't appear to work correctly when dealing with
    multiple hardware PMUs anyway.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Tested-by: Vince Weaver <vincent.weaver@maine.edu>
    Tested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    (cherry picked from commit c95eb3184ea1a3a2551df57190c81da695e2144b)
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/arch/arm/kernel/perf_event.c b/arch/arm/kernel/perf_event.c
index cd38feecb396..ae6d07932439 100644
--- a/arch/arm/kernel/perf_event.c
+++ b/arch/arm/kernel/perf_event.c
@@ -331,6 +331,9 @@ validate_event(struct pmu_hw_events *hw_events,
 	struct hw_perf_event fake_event = event->hw;
 	struct pmu *leader_pmu = event->group_leader->pmu;
 
+	if (is_software_event(event))
+		return 1;
+
 	if (event->pmu != leader_pmu || event->state < PERF_EVENT_STATE_OFF)
 		return 1;
 
