Canonical-kernel__Ubuntu-kernel
commit db6c85a755dc601c10b23a94ac0861707d695ec1
Author:     Pavel Roskin <proski@gnu.org>
AuthorDate: Sat Jan 17 13:33:03 2009 -0500
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Wed Mar 18 14:45:06 2009 +0100

    dell_rbu: use scnprintf() instead of less secure sprintf()
    
    CVE-2009-0322
    
    commit 81156928f8fe31621e467490b9d441c0285998c3 upstream
    
    Reading 0 bytes from /sys/devices/platform/dell_rbu/image_type or
    /sys/devices/platform/dell_rbu/packet_size by an ordinary user causes an
    oops.
    
    Signed-off-by: Pavel Roskin <proski@gnu.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/drivers/firmware/dell_rbu.c b/drivers/firmware/dell_rbu.c
index 477a3d0e3caf..d436f034cd85 100644
--- a/drivers/firmware/dell_rbu.c
+++ b/drivers/firmware/dell_rbu.c
@@ -598,7 +598,7 @@ static ssize_t read_rbu_image_type(struct kobject *kobj,
 {
 	int size = 0;
 	if (!pos)
-		size = sprintf(buffer, "%s\n", image_type);
+		size = scnprintf(buffer, count, "%s\n", image_type);
 	return size;
 }
 
@@ -670,7 +670,7 @@ static ssize_t read_rbu_packet_size(struct kobject *kobj,
 	int size = 0;
 	if (!pos) {
 		spin_lock(&rbu_data.lock);
-		size = sprintf(buffer, "%lu\n", rbu_data.packetsize);
+		size = scnprintf(buffer, count, "%lu\n", rbu_data.packetsize);
 		spin_unlock(&rbu_data.lock);
 	}
 	return size;
