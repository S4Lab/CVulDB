Canonical-kernel__Ubuntu-kernel
commit 5c62cbb4183ec1eb8d260c3da63205d63634987a
Author:     Jody Bruchon <jody@nctritech.com>
AuthorDate: Sat Feb 6 10:46:26 2010 -0500
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Tue May 25 13:57:31 2010 +0200

    ALSA: hda-intel: Avoid divide by zero crash
    
    CVE-2010-1085
    
    On my AMD780V chipset, hda_intel.c can crash the kernel with a divide by
    zero
    for as-yet unknown reasons. A simple check for zero prevents it, though
    the problem that causes it remains. Since the workaround is harmless and
    won't affect anyone except victims of this bug, it should be safe;
    moreover,
    because this crash can be triggered by a user-mode application, there are
    denial of service implications on the systems affected by the bug without
    the patch.
    
    Signed-off-by: Jody Bruchon <jody@nctritech.com>
    Cc: <stable@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    (cherry-picked from commit fed08d036f2aabd8d0c684439de37f8ebec2bbc2 upstream)
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/sound/pci/hda/hda_intel.c b/sound/pci/hda/hda_intel.c
index d5e20cfa34c6..8bc5314c8e23 100644
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@ -1839,6 +1839,12 @@ static int azx_position_ok(struct azx *chip, struct azx_dev *azx_dev)
 
 	if (!bdl_pos_adj[chip->dev_index])
 		return 1; /* no delayed ack */
+	if (azx_dev->period_bytes == 0) {
+		printk(KERN_WARNING
+		       "hda-intel: Divide by zero was avoided "
+		       "in azx_dev->period_bytes.\n");
+		return 0;
+	}
 	if (pos % azx_dev->period_bytes > azx_dev->period_bytes / 2)
 		return 0; /* NG - it's below the period boundary */
 	return 1; /* OK, it's fine */
