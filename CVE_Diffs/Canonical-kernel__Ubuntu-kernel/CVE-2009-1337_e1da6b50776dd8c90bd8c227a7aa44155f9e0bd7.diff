Canonical-kernel__Ubuntu-kernel
commit e1da6b50776dd8c90bd8c227a7aa44155f9e0bd7
Author:     Oleg Nesterov <oleg@redhat.com>
AuthorDate: Mon Apr 6 16:16:02 2009 +0200
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Mon Jun 15 17:33:33 2009 +0200

    exit_notify: kill the wrong capable(CAP_KILL) check
    
    CVE-2009-1337
    
    commit 432870dab85a2f69dc417022646cb9a70acf7f94 upstream
    
    The CAP_KILL check in exit_notify() looks just wrong, kill it.
    
    Whatever logic we have to reset ->exit_signal, the malicious user
    can bypass it if it execs the setuid application before exiting.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Acked-by: Serge Hallyn <serue@us.ibm.com>
    Acked-by: Roland McGrath <roland@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/kernel/exit.c b/kernel/exit.c
index 549c0558ba68..e2d7380692c8 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -813,8 +813,7 @@ static void exit_notify(struct task_struct *tsk)
 	 */
 	if (tsk->exit_signal != SIGCHLD && tsk->exit_signal != -1 &&
 	    ( tsk->parent_exec_id != t->self_exec_id  ||
-	      tsk->self_exec_id != tsk->parent_exec_id)
-	    && !capable(CAP_KILL))
+	      tsk->self_exec_id != tsk->parent_exec_id))
 		tsk->exit_signal = SIGCHLD;
 
 
