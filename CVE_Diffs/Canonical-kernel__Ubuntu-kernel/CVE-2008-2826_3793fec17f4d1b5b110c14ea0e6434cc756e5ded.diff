Canonical-kernel__Ubuntu-kernel
commit 3793fec17f4d1b5b110c14ea0e6434cc756e5ded
Author:     David S. Miller <davem@davemloft.net>
AuthorDate: Fri Jun 20 22:04:34 2008 -0700
Commit:     Kees Cook <kees@outflux.net>
CommitDate: Wed Jun 25 16:32:55 2008 -0700

    (CVE-2008-2826) sctp: Make sure N * sizeof(union sctp_addr) does not overflow.
    
    [linux-2.6: 735ce972fbc8a65fb17788debd7bbe7b4383cc62]
    
    As noticed by Gabriel Campana, the kmalloc() length arg
    passed in by sctp_getsockopt_local_addrs_old() can overflow
    if ->addr_num is large enough.
    
    Therefore, enforce an appropriate limit.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Kees Cook <kees.cook@canonical.com>

diff --git a/net/sctp/socket.c b/net/sctp/socket.c
index ea9649ca0b2a..f4cd51ef1860 100644
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@ -4391,7 +4391,9 @@ static int sctp_getsockopt_local_addrs_old(struct sock *sk, int len,
 	if (copy_from_user(&getaddrs, optval, len))
 		return -EFAULT;
 
-	if (getaddrs.addr_num <= 0) return -EINVAL;
+	if (getaddrs.addr_num <= 0 ||
+	    getaddrs.addr_num >= (INT_MAX / sizeof(union sctp_addr)))
+		return -EINVAL;
 	/*
 	 *  For UDP-style sockets, id specifies the association to query.
 	 *  If the id field is set to the value '0' then the locally bound
