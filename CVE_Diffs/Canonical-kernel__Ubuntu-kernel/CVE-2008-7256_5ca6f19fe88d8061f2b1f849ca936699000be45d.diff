Canonical-kernel__Ubuntu-kernel
commit 5ca6f19fe88d8061f2b1f849ca936699000be45d
Author:     Junjiro R. Okajima <hooanon05@yahoo.co.jp>
AuthorDate: Tue Dec 2 10:31:46 2008 -0800
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Tue Jul 20 17:36:59 2010 +0200

    nfsd: fix vm overcommit crash fix #2
    
    CVE-2008-7256
    
    The previous patch from Alan Cox ("nfsd: fix vm overcommit crash",
    commit 731572d39fcd3498702eda4600db4c43d51e0b26) fixed the problem where
    knfsd crashes on exported shmemfs objects and strict overcommit is set.
    
    But the patch forgot supporting the case when CONFIG_SECURITY is
    disabled.
    
    This patch copies a part of his fix which is mainly for detecting a bug
    earlier.
    
    Acked-by: James Morris <jmorris@namei.org>
    Signed-off-by: Alan Cox <alan@redhat.com>
    Signed-off-by: Junjiro R. Okajima <hooanon05@yahoo.co.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    (cherry-picked from commit 1b79cd04fab80be61dcd2732e2423aafde9a4c1c upstream)
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/include/linux/security.h b/include/linux/security.h
index 8fe921ca0f21..4141a93bd71c 100644
--- a/include/linux/security.h
+++ b/include/linux/security.h
@@ -1743,17 +1743,21 @@ static inline int security_settime(struct timespec *ts, struct timezone *tz)
 
 static inline int security_vm_enough_memory(long pages)
 {
+	WARN_ON(current->mm == NULL);
 	return cap_vm_enough_memory(current->mm, pages);
 }
 
-static inline int security_vm_enough_memory_kern(long pages)
+static inline int security_vm_enough_memory_mm(struct mm_struct *mm, long pages)
 {
-	return cap_vm_enough_memory(current->mm, pages);
+	WARN_ON(mm == NULL);
+	return cap_vm_enough_memory(mm, pages);
 }
 
-static inline int security_vm_enough_memory_mm(struct mm_struct *mm, long pages)
+static inline int security_vm_enough_memory_kern(long pages)
 {
-	return cap_vm_enough_memory(mm, pages);
+	/* If current->mm is a kernel thread then we will pass NULL,
+	   for this specific case that is fine */
+	return cap_vm_enough_memory(current->mm, pages);
 }
 
 static inline int security_bprm_alloc (struct linux_binprm *bprm)
