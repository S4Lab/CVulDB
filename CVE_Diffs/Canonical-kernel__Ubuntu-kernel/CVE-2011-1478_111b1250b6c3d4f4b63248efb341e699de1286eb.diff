Canonical-kernel__Ubuntu-kernel
commit 111b1250b6c3d4f4b63248efb341e699de1286eb
Author:     Herbert Xu <herbert@gondor.apana.org.au>
AuthorDate: Wed Jul 27 16:20:52 2011 +0100
Commit:     Andy Whitcroft <apw@canonical.com>
CommitDate: Mon Aug 8 12:40:57 2011 +0100

    gro: Reset dev pointer on reuse, CVE-2011-1478
    
    commit 66c46d741e2e60f0e8b625b80edb0ab820c46d7a upstream.
    
    On older kernels the VLAN code may zero skb->dev before dropping
    it and causing it to be reused by GRO.
    
    Unfortunately we didn't reset skb->dev in that case which causes
    the next GRO user to get a bogus skb->dev pointer.
    
    This particular problem no longer happens with the current upstream
    kernel due to changes in VLAN processing.
    
    However, for correctness we should still reset the skb->dev pointer
    in the GRO reuse function in case a future user does the same thing.
    
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Brandon Philips <bphilips@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    
    CVE-2011-1478
    BugLink: http://bugs.launchpad.net/bugs/816549
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/net/core/dev.c b/net/core/dev.c
index 42250978df88..bed9dc336934 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -2557,6 +2557,7 @@ void napi_reuse_skb(struct napi_struct *napi, struct sk_buff *skb)
 {
 	__skb_pull(skb, skb_headlen(skb));
 	skb_reserve(skb, NET_IP_ALIGN - skb_headroom(skb));
+	skb->dev = napi->dev;
 
 	napi->skb = skb;
 }
