Canonical-kernel__Ubuntu-kernel
commit 476a110a21b64d526613c3b869c278b40e793aa9
Author:     Michael Buesch <mb@bu3sch.de>
AuthorDate: Mon Jul 20 22:58:44 2009 +0000
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Wed Oct 14 17:22:17 2009 +0200

    parisc: isa-eeprom - Fix loff_t usage
    
    CVE-2009-2846
    
    commit 6b4dbcd86a9d464057fcc7abe4d0574093071fcc upstream
    
    loff_t is a signed type. If userspace passes a negative ppos, the "count"
    range check is weakened. "count"s bigger than HPEE_MAX_LENGTH will pass the check.
    Also, if ppos is negative, the readb(eisa_eeprom_addr + *ppos) will poke in random
    memory.
    
    Signed-off-by: Michael Buesch <mb@bu3sch.de>
    Cc: stable@kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>

diff --git a/drivers/parisc/eisa_eeprom.c b/drivers/parisc/eisa_eeprom.c
index 86e9c84a965e..8edb176d4438 100644
--- a/drivers/parisc/eisa_eeprom.c
+++ b/drivers/parisc/eisa_eeprom.c
@@ -54,7 +54,7 @@ static ssize_t eisa_eeprom_read(struct file * file,
 	ssize_t ret;
 	int i;
 	
-	if (*ppos >= HPEE_MAX_LENGTH)
+	if (*ppos < 0 || *ppos >= HPEE_MAX_LENGTH)
 		return 0;
 	
 	count = *ppos + count < HPEE_MAX_LENGTH ? count : HPEE_MAX_LENGTH - *ppos;
