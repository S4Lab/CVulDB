Canonical-kernel__Ubuntu-kernel
commit f7bfd216b50f5da55775d4ed5059b7f2dd9bfc41
Author:     Ben Hutchings <bhutchings@solarflare.com>
AuthorDate: Thu Sep 30 15:44:09 2010 -0700
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Wed Oct 6 16:16:25 2010 +0100

    niu: Fix kernel buffer overflow for ETHTOOL_GRXCLSRLALL
    
    CVE-2010-3084
    
    niu_get_ethtool_tcam_all() assumes that its output buffer is the right
    size, and warns before returning if it is not.  However, the output
    buffer size is under user control and ETHTOOL_GRXCLSRLALL is an
    unprivileged ethtool command.  Therefore this is at least a local
    denial-of-service vulnerability.
    
    Change it to check before writing each entry and to return an error if
    the buffer is already full.
    
    Compile-tested only.
    
    Signed-off-by: Ben Hutchings <bhutchings@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Brad Figg <brad.figg@canonical.com>

diff --git a/drivers/net/niu.c b/drivers/net/niu.c
index d6c7ac68f6ea..2dce134a360b 100644
--- a/drivers/net/niu.c
+++ b/drivers/net/niu.c
@@ -7315,33 +7315,28 @@ static int niu_get_ethtool_tcam_all(struct niu *np,
 	struct niu_parent *parent = np->parent;
 	struct niu_tcam_entry *tp;
 	int i, idx, cnt;
-	u16 n_entries;
 	unsigned long flags;
-
+	int ret = 0;
 
 	/* put the tcam size here */
 	nfc->data = tcam_get_size(np);
 
 	niu_lock_parent(np, flags);
-	n_entries = nfc->rule_cnt;
 	for (cnt = 0, i = 0; i < nfc->data; i++) {
 		idx = tcam_get_index(np, i);
 		tp = &parent->tcam[idx];
 		if (!tp->valid)
 			continue;
+		if (cnt == nfc->rule_cnt) {
+			ret = -EMSGSIZE;
+			break;
+		}
 		rule_locs[cnt] = i;
 		cnt++;
 	}
 	niu_unlock_parent(np, flags);
 
-	if (n_entries != cnt) {
-		/* print warning, this should not happen */
-		pr_info(PFX "niu%d: %s In niu_get_ethtool_tcam_all, "
-			"n_entries[%d] != cnt[%d]!!!\n\n",
-			np->parent->index, np->dev->name, n_entries, cnt);
-	}
-
-	return 0;
+	return ret;
 }
 
 static int niu_get_nfc(struct net_device *dev, struct ethtool_rxnfc *cmd,
