Canonical-kernel__Ubuntu-kernel
commit fc3e27bfb1a11d736034a4015c132a100f4def64
Author:     Duane Griffin <duaneg@dghda.com>
AuthorDate: Fri Dec 19 20:47:10 2008 +0000
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Wed Mar 18 14:38:17 2009 +0100

    eCryptfs: check readlink result was not an error before using it
    
    CVE-2009-0269
    
    commit a17d5232de7b53d34229de79ec22f4bb04adb7e4 upstream
    
    The result from readlink is being used to index into the link name
    buffer without checking whether it is a valid length. If readlink
    returns an error this will fault or cause memory corruption.
    
    Cc: Tyler Hicks <tyhicks@linux.vnet.ibm.com>
    Cc: Dustin Kirkland <kirkland@canonical.com>
    Cc: ecryptfs-devel@lists.launchpad.net
    Signed-off-by: Duane Griffin <duaneg@dghda.com>
    Acked-by: Michael Halcrow <mhalcrow@us.ibm.com>
    Acked-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/fs/ecryptfs/inode.c b/fs/ecryptfs/inode.c
index 8ed6c6c41ada..f759596dfb72 100644
--- a/fs/ecryptfs/inode.c
+++ b/fs/ecryptfs/inode.c
@@ -681,10 +681,11 @@ static void *ecryptfs_follow_link(struct dentry *dentry, struct nameidata *nd)
 	ecryptfs_printk(KERN_DEBUG, "Calling readlink w/ "
 			"dentry->d_name.name = [%s]\n", dentry->d_name.name);
 	rc = dentry->d_inode->i_op->readlink(dentry, (char __user *)buf, len);
-	buf[rc] = '\0';
 	set_fs(old_fs);
 	if (rc < 0)
 		goto out_free;
+	else
+		buf[rc] = '\0';
 	rc = 0;
 	nd_set_link(nd, buf);
 	goto out;
