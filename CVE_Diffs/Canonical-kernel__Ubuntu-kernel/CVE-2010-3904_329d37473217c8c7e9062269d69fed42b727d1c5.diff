Canonical-kernel__Ubuntu-kernel
commit 329d37473217c8c7e9062269d69fed42b727d1c5
Author:     Dan Rosenberg <drosenberg@vsecurity.com>
AuthorDate: Wed Oct 13 16:56:35 2010 -0400
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Thu Oct 14 15:02:55 2010 -0500

    Local privilege escalation vulnerability in RDS sockets
    
    CVE-2010-3904
    
    Hi all,
    
    I've discovered a Linux kernel vulnerability in RDS sockets.  The
    vulnerability has existed since the introduction of RDS in Linux 2.6.30.
    
    The handling functions for sending and receiving messages, in
    rds_page_copy_user(), use the unchecked __copy_*_user_inatomic functions
    without any access checks on user-provided pointers.  As a result, by
    passing a kernel address as an iovec base address in recvmsg-style
    calls, a local user can overwrite arbitrary kernel memory, which can
    easily be used to escalate privileges to root.  Alternatively, an
    arbitrary kernel read can be performed via sendmsg calls.  I've
    developed a working exploit that leverages this bug to escalate
    privileges to root, available on request.
    
    Since this is a somewhat serious security issue that affects
    distributions, I'd like to request an embargo date of October 19.  Until
    that point, please refrain from making public commits related to this
    bug.  On that date, I will be publishing an advisory for the issue
    through my employer, Virtual Security Research.  Ubuntu security has
    assigned CVE-2010-3904 for the issue.
    
    The below patch resolves the issue by checking with access_ok() prior to
    copying to or from userspace.  It might also be worth considering
    verifying the base addresses for iovecs in the appropriate system calls,
    so individual net protocols don't have to worry about this sort of
    thing, but I leave that to people better equipped to make those kinds of
    decisions.
    
    Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>
    Signed-off-by: Steve Conklin <sconklin@canonical.com>

diff --git a/net/rds/page.c b/net/rds/page.c
index 36790122dfd4..84a1cd607007 100644
--- a/net/rds/page.c
+++ b/net/rds/page.c
@@ -60,6 +60,14 @@ int rds_page_copy_user(struct page *page, unsigned long offset,
 		rds_stats_add(s_copy_to_user, bytes);
 	else
 		rds_stats_add(s_copy_from_user, bytes);
+	
+	if (to_user)
+		ret = access_ok(VERIFY_WRITE, ptr, bytes);
+	else
+		ret = access_ok(VERIFY_READ, ptr, bytes);
+	
+	if (!ret)
+		return -EFAULT;
 
 	addr = kmap_atomic(page, KM_USER0);
 	if (to_user)
