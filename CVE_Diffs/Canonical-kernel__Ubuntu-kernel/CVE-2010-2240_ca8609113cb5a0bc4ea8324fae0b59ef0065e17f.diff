Canonical-kernel__Ubuntu-kernel
commit ca8609113cb5a0bc4ea8324fae0b59ef0065e17f
Author:     Linus Torvalds <torvalds@linux-foundation.org>
AuthorDate: Fri Aug 13 09:24:04 2010 -0700
Commit:     Stefan Bader <stefan.bader@canonical.com>
CommitDate: Tue Aug 17 15:27:24 2010 +0200

    mm: fix missing page table unmap for stack guard page failure case
    
    CVE-2010-2240
    
    .. which didn't show up in my tests because it's a no-op on x86-64 and
    most other architectures.  But we enter the function with the last-level
    page table mapped, and should unmap it at exit.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    (cherry-picked from commit 5528f9132cf65d4d892bcbc5684c61e7822b21e9 upstream)
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/mm/memory.c b/mm/memory.c
index 955acadcae99..d29b3b5fb55c 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -2644,8 +2644,10 @@ static int do_anonymous_page(struct mm_struct *mm, struct vm_area_struct *vma,
 	spinlock_t *ptl;
 	pte_t entry;
 
-	if (check_stack_guard_page(vma, address) < 0)
+	if (check_stack_guard_page(vma, address) < 0) {
+		pte_unmap(page_table);
 		return VM_FAULT_SIGBUS;
+	}
 
 	/* Allocate our own private page. */
 	pte_unmap(page_table);
