Canonical-kernel__Ubuntu-kernel
commit 8688980396b906d2d424fad70152b8262551dd7e
Author:     Dan Rosenberg <drosenberg@vsecurity.com>
AuthorDate: Sat Dec 25 16:23:40 2010 -0500
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Thu Apr 21 09:37:47 2011 -0500

    sound: Prevent buffer overflow in OSS load_mixer_volumes, CVE-2010-4527
    
    CVE-2010-4527
    
    BugLink: http://bugs.launchpad.net/bugs/737073
    
    The load_mixer_volumes() function, which can be triggered by
    unprivileged users via the SOUND_MIXER_SETLEVELS ioctl, is vulnerable to
    a buffer overflow.  Because the provided "name" argument isn't
    guaranteed to be NULL terminated at the expected 32 bytes, it's possible
    to overflow past the end of the last element in the mixer_vols array.
    Further exploitation can result in an arbitrary kernel write (via
    subsequent calls to load_mixer_volumes()) leading to privilege
    escalation, or arbitrary kernel reads via get_mixer_levels().  In
    addition, the strcmp() may leak bytes beyond the mixer_vols array.
    
    Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    
    (cherry picked from commit d81a12bc29ae4038770e05dce4ab7f26fd5880fb)
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>
    Acked-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

diff --git a/sound/oss/soundcard.c b/sound/oss/soundcard.c
index a9c23b2502ad..eac3c00f7bd9 100644
--- a/sound/oss/soundcard.c
+++ b/sound/oss/soundcard.c
@@ -87,7 +87,7 @@ int *load_mixer_volumes(char *name, int *levels, int present)
 	int             i, n;
 
 	for (i = 0; i < num_mixer_volumes; i++) {
-		if (strcmp(name, mixer_vols[i].name) == 0) {
+		if (strncmp(name, mixer_vols[i].name, 32) == 0) {
 			if (present)
 				mixer_vols[i].num = i;
 			return mixer_vols[i].levels;
@@ -99,7 +99,7 @@ int *load_mixer_volumes(char *name, int *levels, int present)
 	}
 	n = num_mixer_volumes++;
 
-	strcpy(mixer_vols[n].name, name);
+	strncpy(mixer_vols[n].name, name, 32);
 
 	if (present)
 		mixer_vols[n].num = n;
