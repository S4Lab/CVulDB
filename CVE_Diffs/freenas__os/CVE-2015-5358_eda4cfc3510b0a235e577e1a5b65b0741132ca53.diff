freenas__os
commit eda4cfc3510b0a235e577e1a5b65b0741132ca53
Author:     delphij <delphij@FreeBSD.org>
AuthorDate: Tue Jul 21 23:42:56 2015 +0000
Commit:     delphij <delphij@FreeBSD.org>
CommitDate: Tue Jul 21 23:42:56 2015 +0000

    Fix resource exhaustion due to sessions stuck in LAST_ACK state.
    
    Security:       CVE-2015-5358
    Security:       SA-15:13.tcp
    Submitted by:   Jonathan Looney (Juniper SIRT)
    Approved by:    so

diff --git a/UPDATING b/UPDATING
index 4fe2f45de36..124467c39f0 100644
--- a/UPDATING
+++ b/UPDATING
@@ -11,6 +11,11 @@ handbook:
 Items affecting the ports and packages system can be found in
 /usr/ports/UPDATING.  Please read that file before running portupgrade.
 
+20150721:	p20	FreeBSD-SA-15:13.tcp
+
+	Fix resource exhaustion due to sessions stuck in LAST_ACK state.
+	[SA-15:13]
+
 20150707:	p19	FreeBSD-SA-15:11.bind
 	Fix BIND resolver remote denial of service when validating.
 
diff --git a/sys/conf/newvers.sh b/sys/conf/newvers.sh
index 38b99c43383..3b7d9afe503 100644
--- a/sys/conf/newvers.sh
+++ b/sys/conf/newvers.sh
@@ -32,7 +32,7 @@
 
 TYPE="FreeBSD"
 REVISION="9.3"
-BRANCH="RELEASE-p19"
+BRANCH="RELEASE-p20"
 if [ "X${BRANCH_OVERRIDE}" != "X" ]; then
 	BRANCH=${BRANCH_OVERRIDE}
 fi
diff --git a/sys/netinet/tcp_output.c b/sys/netinet/tcp_output.c
index 79b1d6f85ea..d2fd28d85bc 100644
--- a/sys/netinet/tcp_output.c
+++ b/sys/netinet/tcp_output.c
@@ -397,7 +397,7 @@ tcp_output(struct tcpcb *tp)
 		flags &= ~TH_FIN;
 	}
 
-	if (len < 0) {
+	if (len <= 0) {
 		/*
 		 * If FIN has been sent but not acked,
 		 * but we haven't been called to retransmit,
@@ -407,9 +407,16 @@ tcp_output(struct tcpcb *tp)
 		 * to (closed) window, and set the persist timer
 		 * if it isn't already going.  If the window didn't
 		 * close completely, just wait for an ACK.
+		 *
+		 * We also do a general check here to ensure that
+		 * we will set the persist timer when we have data
+		 * to send, but a 0-byte window. This makes sure
+		 * the persist timer is set even if the packet
+		 * hits one of the "goto send" lines below.
 		 */
 		len = 0;
-		if (sendwin == 0) {
+		if ((sendwin == 0) && (TCPS_HAVEESTABLISHED(tp->t_state)) &&
+			(off < (int) so->so_snd.sb_cc)) {
 			tcp_timer_activate(tp, TT_REXMT, 0);
 			tp->t_rxtshift = 0;
 			tp->snd_nxt = tp->snd_una;
