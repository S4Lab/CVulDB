freenas__os
commit 6d379b8f3ed10c8928b63bd2358d463e490b0d40
Author:     delphij <delphij@ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f>
AuthorDate: Tue Jul 8 21:54:23 2014 +0000
Commit:     delphij <delphij@ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f>
CommitDate: Tue Jul 8 21:54:23 2014 +0000

    Don't leave the padding between the msg header and the cmsg data,
    and the padding after the cmsg data un-initialized.
    
    Submitted by:   tuexen
    Security:       CVE-2014-3952
    Security:       FreeBSD-SA-14:17.kmem
    
    
    git-svn-id: svn+ssh://svn.freebsd.org/base/head@268430 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f

diff --git a/sys/kern/uipc_sockbuf.c b/sys/kern/uipc_sockbuf.c
index d804d9ae3f3..25820895980 100644
--- a/sys/kern/uipc_sockbuf.c
+++ b/sys/kern/uipc_sockbuf.c
@@ -1071,6 +1071,11 @@ sbcreatecontrol(caddr_t p, int size, int type, int level)
 	m->m_len = 0;
 	KASSERT(CMSG_SPACE((u_int)size) <= M_TRAILINGSPACE(m),
 	    ("sbcreatecontrol: short mbuf"));
+	/*
+	 * Don't leave the padding between the msg header and the
+	 * cmsg data and the padding after the cmsg data un-initialized.
+	 */
+	bzero(cp, CMSG_SPACE((u_int)size));
 	if (p != NULL)
 		(void)memcpy(CMSG_DATA(cp), p, size);
 	m->m_len = CMSG_SPACE(size);
