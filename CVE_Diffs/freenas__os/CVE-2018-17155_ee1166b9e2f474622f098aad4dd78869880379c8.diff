freenas__os
commit ee1166b9e2f474622f098aad4dd78869880379c8
Author:     vangyzen <vangyzen@FreeBSD.org>
AuthorDate: Wed Nov 28 21:20:51 2018 +0000
Commit:     vangyzen <vangyzen@FreeBSD.org>
CommitDate: Wed Nov 28 21:20:51 2018 +0000

    MFC r340995
    
    Prevent kernel stack disclosure in signal delivery
    
    On arm64 and riscv platforms, sendsig() failed to zero the signal
    frame before copying it out to userspace.  Zero it.
    
    On arm, I believe all the contents of the frame were initialized,
    so there was no disclosure.  However, explicitly zero the whole frame
    because that fact could inadvertently change in the future,
    it's more clear to the reader, and I could be wrong in the first place.
    
    Security:       similar to FreeBSD-EN-18:12.mem and CVE-2018-17155
    Sponsored by:   Dell EMC Isilon

diff --git a/sys/arm/arm/machdep.c b/sys/arm/arm/machdep.c
index 966d7c3be28..16932692492 100644
--- a/sys/arm/arm/machdep.c
+++ b/sys/arm/arm/machdep.c
@@ -609,6 +609,7 @@ sendsig(catcher, ksi, mask)
 	/* make the stack aligned */
 	fp = (struct sigframe *)STACKALIGN(fp);
 	/* Populate the siginfo frame. */
+	bzero(&frame, sizeof(frame));
 	get_mcontext(td, &frame.sf_uc.uc_mcontext, 0);
 #ifdef VFP
 	get_vfpcontext(td, &frame.sf_vfp);
diff --git a/sys/arm64/arm64/machdep.c b/sys/arm64/arm64/machdep.c
index 6d2e46a0c9b..66e091b66eb 100644
--- a/sys/arm64/arm64/machdep.c
+++ b/sys/arm64/arm64/machdep.c
@@ -590,6 +590,7 @@ sendsig(sig_t catcher, ksiginfo_t *ksi, sigset_t *mask)
 	fp = (struct sigframe *)STACKALIGN(fp);
 
 	/* Fill in the frame to copy out */
+	bzero(&frame, sizeof(frame));
 	get_mcontext(td, &frame.sf_uc.uc_mcontext, 0);
 	get_fpcontext(td, &frame.sf_uc.uc_mcontext);
 	frame.sf_si = ksi->ksi_info;
diff --git a/sys/riscv/riscv/machdep.c b/sys/riscv/riscv/machdep.c
index fafa2f43978..db302c86b1c 100644
--- a/sys/riscv/riscv/machdep.c
+++ b/sys/riscv/riscv/machdep.c
@@ -522,6 +522,7 @@ sendsig(sig_t catcher, ksiginfo_t *ksi, sigset_t *mask)
 	fp = (struct sigframe *)STACKALIGN(fp);
 
 	/* Fill in the frame to copy out */
+	bzero(&frame, sizeof(frame));
 	get_mcontext(td, &frame.sf_uc.uc_mcontext, 0);
 	get_fpcontext(td, &frame.sf_uc.uc_mcontext);
 	frame.sf_si = ksi->ksi_info;
