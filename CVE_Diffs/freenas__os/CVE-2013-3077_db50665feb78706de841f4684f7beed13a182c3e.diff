freenas__os
commit db50665feb78706de841f4684f7beed13a182c3e
Author:     delphij <delphij@ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f>
AuthorDate: Thu Aug 22 00:51:37 2013 +0000
Commit:     delphij <delphij@ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f>
CommitDate: Thu Aug 22 00:51:37 2013 +0000

    Fix an integer overflow in computing the size of a temporary buffer
    can result in a buffer which is too small for the requested
    operation.
    
    Security:       CVE-2013-3077
    Security:       FreeBSD-SA-13:09.ip_multicast
    
    
    git-svn-id: svn+ssh://svn.freebsd.org/base/head@254629 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f

diff --git a/sys/netinet/in_mcast.c b/sys/netinet/in_mcast.c
index 31f2fe1ca4f..8022c69a9ff 100644
--- a/sys/netinet/in_mcast.c
+++ b/sys/netinet/in_mcast.c
@@ -1648,6 +1648,8 @@ inp_get_source_filters(struct inpcb *inp, struct sockopt *sopt)
 	 * has asked for, but we always tell userland how big the
 	 * buffer really needs to be.
 	 */
+	if (msfr.msfr_nsrcs > in_mcast_maxsocksrc)
+		msfr.msfr_nsrcs = in_mcast_maxsocksrc;
 	tss = NULL;
 	if (msfr.msfr_srcs != NULL && msfr.msfr_nsrcs > 0) {
 		tss = malloc(sizeof(struct sockaddr_storage) * msfr.msfr_nsrcs,
diff --git a/sys/netinet6/in6_mcast.c b/sys/netinet6/in6_mcast.c
index ce23aa8c34c..fca48b5c6d6 100644
--- a/sys/netinet6/in6_mcast.c
+++ b/sys/netinet6/in6_mcast.c
@@ -1625,6 +1625,8 @@ in6p_get_source_filters(struct inpcb *inp, struct sockopt *sopt)
 	 * has asked for, but we always tell userland how big the
 	 * buffer really needs to be.
 	 */
+	if (msfr.msfr_nsrcs > in6_mcast_maxsocksrc)
+		msfr.msfr_nsrcs = in6_mcast_maxsocksrc;
 	tss = NULL;
 	if (msfr.msfr_srcs != NULL && msfr.msfr_nsrcs > 0) {
 		tss = malloc(sizeof(struct sockaddr_storage) * msfr.msfr_nsrcs,
