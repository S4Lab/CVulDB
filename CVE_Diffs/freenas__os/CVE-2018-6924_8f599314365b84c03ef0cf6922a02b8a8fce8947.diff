freenas__os
commit 8f599314365b84c03ef0cf6922a02b8a8fce8947
Author:     gordon <gordon@FreeBSD.org>
AuthorDate: Wed Sep 12 04:57:34 2018 +0000
Commit:     gordon <gordon@FreeBSD.org>
CommitDate: Wed Sep 12 04:57:34 2018 +0000

    Correct ELF header parsing code to prevent invalid ELF sections from
    disclosing memory.
    
    Submitted by:   markj
    Reported by:    Thomas Barabosch, Fraunhofer FKIE
    Approved by:    re (implicit)
    Approved by:    so
    Security:       FreeBSD-SA-18:12.elf
    Security:       CVE-2018-6924
    Sponsored by:   The FreeBSD Foundation

diff --git a/sys/kern/imgact_elf.c b/sys/kern/imgact_elf.c
index 2a73a722148..f4302d46665 100644
--- a/sys/kern/imgact_elf.c
+++ b/sys/kern/imgact_elf.c
@@ -839,7 +839,8 @@ __CONCAT(exec_, __elfN(imgact))(struct image_params *imgp)
 			break;
 		case PT_INTERP:
 			/* Path to interpreter */
-			if (phdr[i].p_filesz > MAXPATHLEN) {
+			if (phdr[i].p_filesz < 2 ||
+			    phdr[i].p_filesz > MAXPATHLEN) {
 				uprintf("Invalid PT_INTERP\n");
 				error = ENOEXEC;
 				goto ret;
@@ -870,6 +871,11 @@ __CONCAT(exec_, __elfN(imgact))(struct image_params *imgp)
 			} else {
 				interp = __DECONST(char *, imgp->image_header) +
 				    phdr[i].p_offset;
+				if (interp[interp_name_len - 1] != '\0') {
+					uprintf("Invalid PT_INTERP\n");
+					error = ENOEXEC;
+					goto ret;
+				}
 			}
 			break;
 		case PT_GNU_STACK:
diff --git a/sys/kern/vfs_vnops.c b/sys/kern/vfs_vnops.c
index 09f665e8f3f..00392ee3a07 100644
--- a/sys/kern/vfs_vnops.c
+++ b/sys/kern/vfs_vnops.c
@@ -527,6 +527,8 @@ vn_rdwr(enum uio_rw rw, struct vnode *vp, void *base, int len, off_t offset,
 	struct vn_io_fault_args args;
 	int error, lock_flags;
 
+	if (offset < 0 && vp->v_type != VCHR)
+		return (EINVAL);
 	auio.uio_iov = &aiov;
 	auio.uio_iovcnt = 1;
 	aiov.iov_base = base;
