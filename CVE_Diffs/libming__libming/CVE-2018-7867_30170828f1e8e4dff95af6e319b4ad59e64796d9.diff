libming__libming
commit 30170828f1e8e4dff95af6e319b4ad59e64796d9
Author:     Hugo Lefeuvre <hle@debian.org>
AuthorDate: Fri Mar 16 15:56:55 2018 +0100
Commit:     Sandro Santilli <strk@kbt.io>
CommitDate: Sun May 20 07:49:13 2018 +0200

    Fix heap-buffer-overflow in getString
    
    getString is allocating a 4-bytes buffer to store an 'R' and an
    8-bit number.
    
    t=malloc(4); /* Rdd */
    sprintf(t,"R%d", act->p.RegisterNumber );
    return t;
    
    Since up to three digits can be required to store the 8-bit
    number, the buffer has to be 5 bytes long.
    
    In this commit we also fix the PUSH_DOUBLE case by dynamically
    computing the required buffer size.
    
    This commit fixes #116 (CVE-2018-7867).

diff --git a/NEWS b/NEWS
index ebafd8af..27d7f065 100644
--- a/NEWS
+++ b/NEWS
@@ -41,6 +41,7 @@
     CVE-2018-7868, issues #112, #113, #114, #117, #120, #122 and #123).
   * Fix NULL pointer dereference happening when calling getName and getString
     with empty acts (NULL act->p.String) (issue #121).
+  * Fix heap-buffer-overflow in getString (CVE-2018-7867, issue #116).
 
 0.4.8 - 2017-04-07
 
diff --git a/util/decompile.c b/util/decompile.c
index 13e3b061..7486efdf 100644
--- a/util/decompile.c
+++ b/util/decompile.c
@@ -334,7 +334,7 @@ getString(struct SWF_ACTIONPUSHPARAM *act)
 		}
 		else
 		{
-			t=malloc(4); /* Rdd */
+			t=malloc(5); /* Rddd */
 			sprintf(t,"R%d", act->p.RegisterNumber );
 			return t;
 		}
@@ -344,9 +344,19 @@ getString(struct SWF_ACTIONPUSHPARAM *act)
 		else
 			return "false";
 	case PUSH_DOUBLE: /* DOUBLE */
-		t=malloc(10); /* big enough? */
-		sprintf(t,"%g", act->p.Double );
+	{
+		char length_finder[1];
+		int needed_length = snprintf(length_finder, 1, "%g", act->p.Double) + 1;
+		if (needed_length <= 0)
+		{
+		        SWF_warn("WARNING: could not evaluate size of buffer (memory issue ?).\n");
+		        break;
+		}
+
+		t = malloc(needed_length);
+		sprintf(t, "%g", act->p.Double );
 		return t;
+	}
 	case PUSH_INT: /* INTEGER */
 		t=malloc(10); /* 32-bit decimal */
 		sprintf(t,"%ld", act->p.Integer );
@@ -417,7 +427,7 @@ getName(struct SWF_ACTIONPUSHPARAM *act)
 		}
 #if 0
 	  case 4: /* REGISTER */
-                t=malloc(4); /* Rdd */
+		t=malloc(5); /* Rddd */
   		sprintf(t,"R%d", act->p.RegisterNumber );
   		return t;
 #endif
