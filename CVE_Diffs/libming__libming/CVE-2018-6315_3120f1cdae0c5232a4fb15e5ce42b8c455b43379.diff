libming__libming
commit 3120f1cdae0c5232a4fb15e5ce42b8c455b43379
Author:     Hugo Lefeuvre <hle@debian.org>
AuthorDate: Thu Jan 25 10:33:06 2018 +0100
Commit:     Sandro Santilli <strk@kbt.io>
CommitDate: Sat Jan 27 09:00:58 2018 +0100

    Fix NULL pointer deref in outputSWF_TEXT_RECORD
    
    In outputSWF_TEXT_RECORD, the array offset is stored in a
    signed int, while (&(trec->GlyphEntries[i]))->GlyphIndex[0]
    returns an unsigned 32 bit number.
    
    This may lead to an integer overflow when reading the offset
    from the GlyphIndex array, and further to a buffer overflow
    when doing buffer[i]=fi->fontcodeptr[off] with negative off.
    
    In this commit, we change the type of off to unsigned long so
    we are guaranteed to be able to store 32 unsigned integers.
    
    This commit fixes CVE-2018-6315 (fixes #101).

diff --git a/NEWS b/NEWS
index b0256279..8d86692e 100644
--- a/NEWS
+++ b/NEWS
@@ -28,6 +28,7 @@
     shift in readUInt32) (CVE-2018-5251, issue #98)
   * Fix left shift of a negative value in util/read.c (left shift of a
     negative value in readSBits) (CVE-2018-5294, issue #97)
+  * Fix buffer overflow in outputSWF_TEXT_RECORD (CVE-2018-6315, issue #101)
 
 0.4.8 - 2017-04-07
 
diff --git a/util/outputscript.c b/util/outputscript.c
index ee168744..f90e5e76 100644
--- a/util/outputscript.c
+++ b/util/outputscript.c
@@ -1439,7 +1439,7 @@ outputSWF_TEXT_RECORD (SWF_TEXTRECORD *trec, int level,char *tname,char *buffer,
     fip_current=fi;					/* set current font */
     for(i=0;i<trec->GlyphCount && i<bsize-1 ;i++)	/* byte n-1 will be terminator '\0' */
     {
-     int off=(&(trec->GlyphEntries[i]))->GlyphIndex[0];
+     unsigned long off=(&(trec->GlyphEntries[i]))->GlyphIndex[0];
      if (off<fi->fontcodearrsize)
       buffer[i]=fi->fontcodeptr[off];
      else
