openbsd__xenocara
commit 74d10c412fa29496db4df3f46d098017c4665e1f
Author:     matthieu <matthieu@openbsd.org>
AuthorDate: Sat Oct 14 09:30:50 2017 +0000
Commit:     matthieu <matthieu@openbsd.org>
CommitDate: Sat Oct 14 09:30:50 2017 +0000

    MFC: Xi: integer overflow and unvalidated length in
         (S)ProcXIBarrierReleasePointer
    
    [jcristau: originally this patch fixed the same issue as commit
    211e05ac85 "Xi: Test exact size of XIBarrierReleasePointer", with the
    addition of these checks]
    
    This addresses CVE-2017-12179

diff --git a/xserver/Xi/xibarriers.c b/xserver/Xi/xibarriers.c
index 0bc5761f3..b0a4a92a1 100644
--- a/xserver/Xi/xibarriers.c
+++ b/xserver/Xi/xibarriers.c
@@ -834,6 +834,8 @@ SProcXIBarrierReleasePointer(ClientPtr client)
     REQUEST_AT_LEAST_SIZE(xXIBarrierReleasePointerReq);
 
     swapl(&stuff->num_barriers);
+    if (stuff->num_barriers > UINT32_MAX / sizeof(xXIBarrierReleasePointerInfo))
+        return BadLength;
     REQUEST_FIXED_SIZE(xXIBarrierReleasePointerReq, stuff->num_barriers * sizeof(xXIBarrierReleasePointerInfo));
 
     info = (xXIBarrierReleasePointerInfo*) &stuff[1];
@@ -856,6 +858,9 @@ ProcXIBarrierReleasePointer(ClientPtr client)
     xXIBarrierReleasePointerInfo *info;
 
     REQUEST(xXIBarrierReleasePointerReq);
+    REQUEST_AT_LEAST_SIZE(xXIBarrierReleasePointerReq);
+    if (stuff->num_barriers > UINT32_MAX / sizeof(xXIBarrierReleasePointerInfo))
+        return BadLength;
     REQUEST_FIXED_SIZE(xXIBarrierReleasePointerReq, stuff->num_barriers * sizeof(xXIBarrierReleasePointerInfo));
 
     info = (xXIBarrierReleasePointerInfo*) &stuff[1];
