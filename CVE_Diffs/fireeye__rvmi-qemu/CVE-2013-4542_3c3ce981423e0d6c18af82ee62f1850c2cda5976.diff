fireeye__rvmi-qemu
commit 3c3ce981423e0d6c18af82ee62f1850c2cda5976
Author:     Michael S. Tsirkin <mst@redhat.com>
AuthorDate: Thu Apr 3 19:52:17 2014 +0300
Commit:     Juan Quintela <quintela@redhat.com>
CommitDate: Mon May 5 22:15:02 2014 +0200

    virtio-scsi: fix buffer overrun on invalid state load
    
    CVE-2013-4542
    
    hw/scsi/scsi-bus.c invokes load_request.
    
     virtio_scsi_load_request does:
        qemu_get_buffer(f, (unsigned char *)&req->elem, sizeof(req->elem));
    
    this probably can make elem invalid, for example,
    make in_num or out_num huge, then:
    
        virtio_scsi_parse_req(s, vs->cmd_vqs[n], req);
    
    will do:
    
        if (req->elem.out_num > 1) {
            qemu_sgl_init_external(req, &req->elem.out_sg[1],
                                   &req->elem.out_addr[1],
                                   req->elem.out_num - 1);
        } else {
            qemu_sgl_init_external(req, &req->elem.in_sg[1],
                                   &req->elem.in_addr[1],
                                   req->elem.in_num - 1);
        }
    
    and this will access out of array bounds.
    
    Note: this adds security checks within assert calls since
    SCSIBusInfo's load_request cannot fail.
    For now simply disable builds with NDEBUG - there seems
    to be little value in supporting these.
    
    Cc: Andreas FÃ¤rber <afaerber@suse.de>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Juan Quintela <quintela@redhat.com>

diff --git a/hw/scsi/virtio-scsi.c b/hw/scsi/virtio-scsi.c
index b0d7517cb1..175219376c 100644
--- a/hw/scsi/virtio-scsi.c
+++ b/hw/scsi/virtio-scsi.c
@@ -147,6 +147,15 @@ static void *virtio_scsi_load_request(QEMUFile *f, SCSIRequest *sreq)
     qemu_get_be32s(f, &n);
     assert(n < vs->conf.num_queues);
     qemu_get_buffer(f, (unsigned char *)&req->elem, sizeof(req->elem));
+    /* TODO: add a way for SCSIBusInfo's load_request to fail,
+     * and fail migration instead of asserting here.
+     * When we do, we might be able to re-enable NDEBUG below.
+     */
+#ifdef NDEBUG
+#error building with NDEBUG is not supported
+#endif
+    assert(req->elem.in_num <= ARRAY_SIZE(req->elem.in_sg));
+    assert(req->elem.out_num <= ARRAY_SIZE(req->elem.out_sg));
     virtio_scsi_parse_req(s, vs->cmd_vqs[n], req);
 
     scsi_req_ref(sreq);
