vadz__libtiff
commit 882d392c33815b089fa21a069e0274f4128901a2
Author:     fwarmerdam <fwarmerdam>
AuthorDate: Fri Nov 2 05:13:24 2012 +0000
Commit:     fwarmerdam <fwarmerdam>
CommitDate: Fri Nov 2 05:13:24 2012 +0000

    fix zero size buffer exploit (CVE-2012-4564) in ppm2tiff

diff --git a/ChangeLog b/ChangeLog
index 333027b0..d2ff45fd 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,9 @@
+2012-11-01  Frank Warmerdam  <warmerdam@pobox.com>
+
+	* tools/ppm2tiff.c: avoid zero size buffer vulnerability.
+	CVE-2012-4564 - Thanks to Huzaifa Sidhpurwala of the 
+	Red Hat Security Response team for the fix.
+
 2012-10-18  Frank Warmerdam  <warmerdam@google.com>
 
 	* tif_zip.c: Avoid crash on NULL error messages.
diff --git a/tools/ppm2tiff.c b/tools/ppm2tiff.c
index 8910e768..f9fceb56 100644
--- a/tools/ppm2tiff.c
+++ b/tools/ppm2tiff.c
@@ -89,6 +89,7 @@ main(int argc, char* argv[])
 	int c;
 	extern int optind;
 	extern char* optarg;
+	tmsize_t scanline_size;
 
 	if (argc < 2) {
 	    fprintf(stderr, "%s: Too few arguments\n", argv[0]);
@@ -237,8 +238,16 @@ main(int argc, char* argv[])
 	}
 	if (TIFFScanlineSize(out) > linebytes)
 		buf = (unsigned char *)_TIFFmalloc(linebytes);
-	else
-		buf = (unsigned char *)_TIFFmalloc(TIFFScanlineSize(out));
+	else {
+		scanline_size = TIFFScanlineSize(out);
+		if (scanline_size != 0)
+			buf = (unsigned char *)_TIFFmalloc(TIFFScanlineSize(out));
+		else {
+			fprintf(stderr, "%s: scanline size overflow\n",infile);
+			(void) TIFFClose(out);
+			exit(-2);					
+			}
+		}
 	if (resolution > 0) {
 		TIFFSetField(out, TIFFTAG_XRESOLUTION, resolution);
 		TIFFSetField(out, TIFFTAG_YRESOLUTION, resolution);
