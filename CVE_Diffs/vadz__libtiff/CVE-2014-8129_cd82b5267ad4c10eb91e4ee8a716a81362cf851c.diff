vadz__libtiff
commit cd82b5267ad4c10eb91e4ee8a716a81362cf851c
Author:     erouault <erouault>
AuthorDate: Sun Dec 21 18:07:48 2014 +0000
Commit:     erouault <erouault>
CommitDate: Sun Dec 21 18:07:48 2014 +0000

    * libtiff/tif_next.c: check that BitsPerSample = 2. Fixes
    http://bugzilla.maptools.org/show_bug.cgi?id=2487 (CVE-2014-8129)

diff --git a/ChangeLog b/ChangeLog
index c7bb607a..73ee6722 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,8 @@
+2014-12-21  Even Rouault  <even.rouault@spatialys.com>
+
+	* libtiff/tif_next.c: check that BitsPerSample = 2. Fixes
+	http://bugzilla.maptools.org/show_bug.cgi?id=2487 (CVE-2014-8129)
+
 2014-12-21  Even Rouault  <even.rouault@spatialys.com>
 
 	* tools/tiff2pdf.c: check return code of TIFFGetField() when reading
diff --git a/libtiff/tif_next.c b/libtiff/tif_next.c
index a53c716f..d8341969 100644
--- a/libtiff/tif_next.c
+++ b/libtiff/tif_next.c
@@ -141,10 +141,27 @@ bad:
 	return (0);
 }
 
+static int
+NeXTPreDecode(TIFF* tif, uint16 s)
+{
+	static const char module[] = "NeXTPreDecode";
+	TIFFDirectory *td = &tif->tif_dir;
+	(void)s;
+
+	if( td->td_bitspersample != 2 )
+	{
+		TIFFErrorExt(tif->tif_clientdata, module, "Unsupported BitsPerSample = %d",
+					 td->td_bitspersample);
+		return (0);
+	}
+	return (1);
+}
+	
 int
 TIFFInitNeXT(TIFF* tif, int scheme)
 {
 	(void) scheme;
+	tif->tif_predecode = NeXTPreDecode;  
 	tif->tif_decoderow = NeXTDecode;  
 	tif->tif_decodestrip = NeXTDecode;  
 	tif->tif_decodetile = NeXTDecode;
