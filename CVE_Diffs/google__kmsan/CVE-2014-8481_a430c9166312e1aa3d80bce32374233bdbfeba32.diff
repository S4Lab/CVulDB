google__kmsan
commit a430c9166312e1aa3d80bce32374233bdbfeba32
Author:     Paolo Bonzini <pbonzini@redhat.com>
AuthorDate: Thu Oct 23 14:54:14 2014 +0200
Commit:     Paolo Bonzini <pbonzini@redhat.com>
CommitDate: Fri Oct 24 13:30:35 2014 +0200

    KVM: emulate: avoid accessing NULL ctxt->memopp
    
    A failure to decode the instruction can cause a NULL pointer access.
    This is fixed simply by moving the "done" label as close as possible
    to the return.
    
    This fixes CVE-2014-8481.
    
    Reported-by: Andy Lutomirski <luto@amacapital.net>
    Cc: stable@vger.kernel.org
    Fixes: 41061cdb98a0bec464278b4db8e894a3121671f5
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/emulate.c b/arch/x86/kvm/emulate.c
index 02c8ea804aaf..eb3b1c46f995 100644
--- a/arch/x86/kvm/emulate.c
+++ b/arch/x86/kvm/emulate.c
@@ -4580,10 +4580,10 @@ int x86_decode_insn(struct x86_emulate_ctxt *ctxt, void *insn, int insn_len)
 	/* Decode and fetch the destination operand: register or memory. */
 	rc = decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask);
 
-done:
 	if (ctxt->rip_relative)
 		ctxt->memopp->addr.mem.ea += ctxt->_eip;
 
+done:
 	return (rc != X86EMUL_CONTINUE) ? EMULATION_FAILED : EMULATION_OK;
 }
 
