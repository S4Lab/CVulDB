vmware__likewise-open
commit d8c480b650beee9174fe016b4be48a34adca3a65
Author:     dtor <a@b>
AuthorDate: Mon Sep 9 10:13:45 2013 -0800
Commit:     Sriram Nambakam <snambakam@vmware.com>
CommitDate: Thu Mar 5 17:56:00 2015 -0800

    Likewise PKINIT: fix null pointer deref [CVE-2013-1415]
    
    Pick up a change from Fedora KRB5 package:
    
    commit dfa3dbb2f5c6d7d32d97c179f6c34e0dbb554111
    Author: Xi Wang <xi.wang@gmail.com>
    Date:   Thu Feb 14 18:17:40 2013 -0500
    
        PKINIT null pointer deref [CVE-2013-1415]
    
        Don't dereference a null pointer when cleaning up.
    
        The KDC plugin for PKINIT can dereference a null pointer when a
        malformed packet causes processing to terminate early, leading to
        a crash of the KDC process.  An attacker would need to have a valid
        PKINIT certificate or have observed a successful PKINIT authentication,
        or an unauthenticated attacker could execute the attack if anonymous
        PKINIT is enabled.
    
        CVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:C/E:P/RL:O/RC:C
    
        This is a minimal commit for pullup; style fixes in a followup.
        [kaduk@mit.edu: reformat and edit commit message]
    
        (cherry picked from commit c773d3c775e9b2d88bcdff5f8a8ba88d7ec4e8ed)
    
        ticket: 7577 (new)
        version_fixed: 1.10.4
        status: resolved
    
    QA Notes:
    Testing Done:
    Sandbox of likewise.
    Documentation Notes:
    Bug Number:
    Reviewed by: grantr, snambakam
    Approved by:
    Mailto:
    
    [git-p4: depot-paths = "//public/vmware-likewise-open-6-1/main/": change = 32096]

diff --git a/krb5/src/plugins/preauth/pkinit/pkinit_crypto_openssl.c b/krb5/src/plugins/preauth/pkinit/pkinit_crypto_openssl.c
index 045060954..a38e80df1 100644
--- a/krb5/src/plugins/preauth/pkinit/pkinit_crypto_openssl.c
+++ b/krb5/src/plugins/preauth/pkinit/pkinit_crypto_openssl.c
@@ -2830,7 +2830,7 @@ pkinit_check_kdc_pkid(krb5_context context,
     pkiDebug("found kdcPkId in AS REQ\n");
     is = d2i_PKCS7_ISSUER_AND_SERIAL(NULL, &p, (int)pkid_len);
     if (is == NULL)
-	goto cleanup;
+        return retval;
 
     status = X509_NAME_cmp(X509_get_issuer_name(kdc_cert), is->issuer);
     if (!status) {
@@ -2840,7 +2840,6 @@ pkinit_check_kdc_pkid(krb5_context context,
     }
 
     retval = 0;
-cleanup:
     X509_NAME_free(is->issuer);
     ASN1_INTEGER_free(is->serial);
     free(is);
