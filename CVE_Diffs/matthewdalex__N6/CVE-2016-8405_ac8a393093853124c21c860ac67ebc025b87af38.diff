matthewdalex__N6
commit ac8a393093853124c21c860ac67ebc025b87af38
Author:     Kees Cook <keescook@chromium.org>
AuthorDate: Tue Jan 24 15:18:24 2017 -0800
Commit:     Elektroschmock <elektroschmock78@googlemail.com>
CommitDate: Wed Oct 4 21:26:09 2017 +0200

    fbdev: color map copying bounds checking
    
    commit 2dc705a9930b4806250fbf5a76e55266e59389f2 upstream.
    
    Copying color maps to userspace doesn't check the value of to->start,
    which will cause kernel heap buffer OOB read due to signedness wraps.
    
    CVE-2016-8405
    
    Link: http://lkml.kernel.org/r/20170105224249.GA50925@beast
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reported-by: Peter Pi (@heisecode) of Trend Micro
    Cc: Min Chong <mchong@google.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>

diff --git a/drivers/video/fbcmap.c b/drivers/video/fbcmap.c
index 2a358ae7754..11a44a17672 100644
--- a/drivers/video/fbcmap.c
+++ b/drivers/video/fbcmap.c
@@ -163,8 +163,8 @@ void fb_dealloc_cmap(struct fb_cmap *cmap)
 
 int fb_copy_cmap(const struct fb_cmap *from, struct fb_cmap *to)
 {
-	int tooff = 0, fromoff = 0;
-	int size;
+	unsigned int tooff = 0, fromoff = 0;
+	size_t size;
 
 	if (!to || !from)
 		return -EINVAL;
@@ -173,10 +173,11 @@ int fb_copy_cmap(const struct fb_cmap *from, struct fb_cmap *to)
 		fromoff = to->start - from->start;
 	else
 		tooff = from->start - to->start;
-	size = to->len - tooff;
-	if (size > (int) (from->len - fromoff))
-		size = from->len - fromoff;
-	if (size <= 0)
+	if (fromoff >= from->len || tooff >= to->len)
+		return -EINVAL;
+
+	size = min_t(size_t, to->len - tooff, from->len - fromoff);
+	if (size == 0)
 		return -EINVAL;
 	size *= sizeof(u16);
 
@@ -193,8 +194,8 @@ int fb_copy_cmap(const struct fb_cmap *from, struct fb_cmap *to)
 
 int fb_cmap_to_user(const struct fb_cmap *from, struct fb_cmap_user *to)
 {
-	int tooff = 0, fromoff = 0;
-	int size;
+	unsigned int tooff = 0, fromoff = 0;
+	size_t size;
 
 	if (!to || !from || (int)(to->start) < 0)
 		return -EINVAL;
@@ -203,13 +204,12 @@ int fb_cmap_to_user(const struct fb_cmap *from, struct fb_cmap_user *to)
 		fromoff = to->start - from->start;
 	else
 		tooff = from->start - to->start;
-	if ((to->len <= tooff) || (from->len <= fromoff))
+	if (fromoff >= from->len || tooff >= to->len)
 		return -EINVAL;
 
-	size = to->len - tooff;
-
-	if (size > (int) (from->len - fromoff))
-		size = from->len - fromoff;
+	size = min_t(size_t, to->len - tooff, from->len - fromoff);
+	if (size == 0)
+		return -EINVAL;
 	size *= sizeof(u16);
 
 	if (from->red && to->red)
