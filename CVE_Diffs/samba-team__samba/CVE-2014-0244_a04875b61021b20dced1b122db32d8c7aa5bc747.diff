samba-team__samba
commit a04875b61021b20dced1b122db32d8c7aa5bc747
Author:     Jeremy Allison <jra@samba.org>
AuthorDate: Wed May 28 10:40:27 2014 -0700
Commit:     Karolin Seeger <kseeger@samba.org>
CommitDate: Sun Jun 22 16:26:14 2014 +0200

    s3: nmbd: Fix bug 10633 - nmbd denial of service
    
    The Linux kernel has a bug in that it can give spurious
    wakeups on a non-blocking UDP socket for a non-deliverable packet.
    
    When nmbd was changed to use non-blocking sockets it
    became vulnerable to a spurious wakeup from poll/epoll.
    
    Fix sys_recvfile() to return on EWOULDBLOCK/EAGAIN.
    
    CVE-2014-0244
    
    Signed-off-by: Jeremy Allison <jra@samba.org>

diff --git a/source3/lib/system.c b/source3/lib/system.c
index 8252e4fcfc9..4f385974969 100644
--- a/source3/lib/system.c
+++ b/source3/lib/system.c
@@ -169,6 +169,7 @@ ssize_t sys_send(int s, const void *msg, size_t len, int flags)
 
 /*******************************************************************
 A recvfrom wrapper that will deal with EINTR.
+NB. As used with non-blocking sockets, return on EAGAIN/EWOULDBLOCK
 ********************************************************************/
 
 ssize_t sys_recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlen)
@@ -177,11 +178,7 @@ ssize_t sys_recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *f
 
 	do {
 		ret = recvfrom(s, buf, len, flags, from, fromlen);
-#if defined(EWOULDBLOCK)
-	} while (ret == -1 && (errno == EINTR || errno == EAGAIN || errno == EWOULDBLOCK));
-#else
-	} while (ret == -1 && (errno == EINTR || errno == EAGAIN));
-#endif
+	} while (ret == -1 && (errno == EINTR));
 	return ret;
 }
 
