chunkeey__LEDE-IPQ40XX
commit f4a4f324cb76ad839ca75c1449ef716d7745daca
Author:     Jo-Philipp Wich <jo@mein.io>
AuthorDate: Wed Jun 7 18:15:24 2017 +0200
Commit:     Jo-Philipp Wich <jo@mein.io>
CommitDate: Wed Jun 7 21:40:42 2017 +0200

    kernel: update kernel 4.4 to 4.4.71
    
    Fixes the following security vulnerabilities:
    
    CVE-2017-8890
    The inet_csk_clone_lock function in net/ipv4/inet_connection_sock.c in the
    Linux kernel through 4.10.15 allows attackers to cause a denial of service
    (double free) or possibly have unspecified other impact by leveraging use
    of the accept system call.
    
    CVE-2017-9074
    The IPv6 fragmentation implementation in the Linux kernel through 4.11.1
    does not consider that the nexthdr field may be associated with an invalid
    option, which allows local users to cause a denial of service (out-of-bounds
    read and BUG) or possibly have unspecified other impact via crafted socket
    and send system calls.
    
    CVE-2017-9075
    The sctp_v6_create_accept_sk function in net/sctp/ipv6.c in the Linux kernel
    through 4.11.1 mishandles inheritance, which allows local users to cause a
    denial of service or possibly have unspecified other impact via crafted
    system calls, a related issue to CVE-2017-8890.
    
    CVE-2017-9076
    The dccp_v6_request_recv_sock function in net/dccp/ipv6.c in the Linux
    kernel through 4.11.1 mishandles inheritance, which allows local users to
    cause a denial of service or possibly have unspecified other impact via
    crafted system calls, a related issue to CVE-2017-8890.
    
    CVE-2017-9077
    The tcp_v6_syn_recv_sock function in net/ipv6/tcp_ipv6.c in the Linux kernel
    through 4.11.1 mishandles inheritance, which allows local users to cause a
    denial of service or possibly have unspecified other impact via crafted
    system calls, a related issue to CVE-2017-8890.
    
    CVE-2017-9242
    The __ip6_append_data function in net/ipv6/ip6_output.c in the Linux kernel
    through 4.11.3 is too late in checking whether an overwrite of an skb data
    structure may occur, which allows local users to cause a denial of service
    (system crash) via crafted system calls.
    
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8890
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9074
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9075
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9076
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9077
    Ref: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9242
    Ref: https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.4.71
    
    Signed-off-by: Jo-Philipp Wich <jo@mein.io>

diff --git a/include/kernel-version.mk b/include/kernel-version.mk
index a0a7783c6f..a95bd4059d 100644
--- a/include/kernel-version.mk
+++ b/include/kernel-version.mk
@@ -7,7 +7,7 @@ LINUX_VERSION-4.4 = .70
 LINUX_VERSION-4.9 = .30
 
 LINUX_KERNEL_HASH-3.18.43 = 1236e8123a6ce537d5029232560966feed054ae31776fe8481dd7d18cdd5492c
-LINUX_KERNEL_HASH-4.4.70 = c0a8b36ca9044a91eccb475cc1c467cee1f5b296f30ca06db2b91e0589072dfa
+LINUX_KERNEL_HASH-4.4.71 = 44cd5532d6df32197fd0f89e6f8c542fcfb76b52155a4d3a609ef4898522e6ab
 LINUX_KERNEL_HASH-4.9.30 = 4272ef025ce8cd717c9291b5cbe587e13c15901d8c26ceebc471af3a1d730bbb
 
 ifdef KERNEL_PATCHVER
diff --git a/target/linux/ar71xx/patches-4.4/910-unaligned_access_hacks.patch b/target/linux/ar71xx/patches-4.4/910-unaligned_access_hacks.patch
index 7e3ba4c8d5..e180216441 100644
--- a/target/linux/ar71xx/patches-4.4/910-unaligned_access_hacks.patch
+++ b/target/linux/ar71xx/patches-4.4/910-unaligned_access_hacks.patch
@@ -610,7 +610,7 @@
  			goto next_ht;
 --- a/net/ipv6/ip6_offload.c
 +++ b/net/ipv6/ip6_offload.c
-@@ -222,7 +222,7 @@ static struct sk_buff **ipv6_gro_receive
+@@ -223,7 +223,7 @@ static struct sk_buff **ipv6_gro_receive
  			continue;
  
  		iph2 = (struct ipv6hdr *)(p->data + off);
@@ -838,7 +838,7 @@
  
 --- a/net/ipv4/tcp_input.c
 +++ b/net/ipv4/tcp_input.c
-@@ -3818,14 +3818,16 @@ static bool tcp_parse_aligned_timestamp(
+@@ -3819,14 +3819,16 @@ static bool tcp_parse_aligned_timestamp(
  {
  	const __be32 *ptr = (const __be32 *)(th + 1);
  
diff --git a/target/linux/generic/patches-4.4/002-phy_drivers_backport.patch b/target/linux/generic/patches-4.4/002-phy_drivers_backport.patch
index 8cf4eb30c6..b752b4d6a4 100644
--- a/target/linux/generic/patches-4.4/002-phy_drivers_backport.patch
+++ b/target/linux/generic/patches-4.4/002-phy_drivers_backport.patch
@@ -363,7 +363,7 @@
  }
  
  
-@@ -392,13 +388,12 @@ mvswitch_probe(struct phy_device *pdev)
+@@ -398,13 +394,12 @@ mvswitch_probe(struct phy_device *pdev)
  static int
  mvswitch_fixup(struct phy_device *dev)
  {
@@ -379,9 +379,9 @@
  	if (reg != MV_IDENT_VALUE)
  		return 0;
  
-@@ -418,13 +413,14 @@ static struct phy_driver mvswitch_driver
- 	.config_init	= &mvswitch_config_init,
+@@ -425,13 +420,14 @@ static struct phy_driver mvswitch_driver
  	.config_aneg	= &mvswitch_config_aneg,
+ 	.aneg_done	= &mvswitch_aneg_done,
  	.read_status	= &mvswitch_read_status,
 +	.driver		= { .owner = THIS_MODULE,},
  };
diff --git a/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch b/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
index e3f60e2fc9..1ec2b81e1a 100644
--- a/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
+++ b/target/linux/generic/patches-4.4/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
@@ -68,7 +68,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  static void rt_fibinfo_free(struct rtable __rcu **rtp)
 --- a/net/ipv4/fib_trie.c
 +++ b/net/ipv4/fib_trie.c
-@@ -2368,6 +2368,7 @@ static const char *const rtn_type_names[
+@@ -2370,6 +2370,7 @@ static const char *const rtn_type_names[
  	[RTN_THROW] = "THROW",
  	[RTN_NAT] = "NAT",
  	[RTN_XRESOLVE] = "XRESOLVE",
diff --git a/target/linux/generic/patches-4.4/902-debloat_proc.patch b/target/linux/generic/patches-4.4/902-debloat_proc.patch
index 2f54db5201..98e78183de 100644
--- a/target/linux/generic/patches-4.4/902-debloat_proc.patch
+++ b/target/linux/generic/patches-4.4/902-debloat_proc.patch
@@ -184,7 +184,7 @@
  
 --- a/net/ipv4/fib_trie.c
 +++ b/net/ipv4/fib_trie.c
-@@ -2639,10 +2639,12 @@ static const struct file_operations fib_
+@@ -2641,10 +2641,12 @@ static const struct file_operations fib_
  
  int __net_init fib_proc_init(struct net *net)
  {
@@ -199,7 +199,7 @@
  			 &fib_triestat_fops))
  		goto out2;
  
-@@ -2652,17 +2654,21 @@ int __net_init fib_proc_init(struct net
+@@ -2654,17 +2656,21 @@ int __net_init fib_proc_init(struct net
  	return 0;
  
  out3:
diff --git a/target/linux/mvebu/patches-4.4/126-phy-marvell-88E1512-add-flow-control-support.patch b/target/linux/mvebu/patches-4.4/126-phy-marvell-88E1512-add-flow-control-support.patch
index e731c4ddf5..c8f372b409 100644
--- a/target/linux/mvebu/patches-4.4/126-phy-marvell-88E1512-add-flow-control-support.patch
+++ b/target/linux/mvebu/patches-4.4/126-phy-marvell-88E1512-add-flow-control-support.patch
@@ -15,7 +15,7 @@ Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
 
 --- a/drivers/net/phy/marvell.c
 +++ b/drivers/net/phy/marvell.c
-@@ -1142,7 +1142,7 @@ static struct phy_driver marvell_drivers
+@@ -1150,7 +1150,7 @@ static struct phy_driver marvell_drivers
  		.phy_id = MARVELL_PHY_ID_88E1510,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1510",
