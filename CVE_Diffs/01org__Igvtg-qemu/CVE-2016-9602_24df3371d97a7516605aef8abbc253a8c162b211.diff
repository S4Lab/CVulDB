01org__Igvtg-qemu
commit 24df3371d97a7516605aef8abbc253a8c162b211
Author:     Greg Kurz <groug@kaod.org>
AuthorDate: Thu May 25 10:30:14 2017 +0200
Commit:     Greg Kurz <groug@kaod.org>
CommitDate: Thu May 25 10:30:14 2017 +0200

    9pfs: assume utimensat() and futimens() are present
    
    The utimensat() and futimens() syscalls have been around for ages (ie,
    glibc 2.6 and linux 2.6.22), and the decision was already taken to
    switch to utimensat() anyway when fixing CVE-2016-9602 in 2.9.
    
    Signed-off-by: Greg Kurz <groug@kaod.org>
    Reviewed-by: Eric Blake <eblake@redhat.com>

diff --git a/fsdev/virtfs-proxy-helper.c b/fsdev/virtfs-proxy-helper.c
index 4c4238f62e..6c066ec9a0 100644
--- a/fsdev/virtfs-proxy-helper.c
+++ b/fsdev/virtfs-proxy-helper.c
@@ -945,7 +945,8 @@ static int process_requests(int sock)
                                      &spec[0].tv_sec, &spec[0].tv_nsec,
                                      &spec[1].tv_sec, &spec[1].tv_nsec);
             if (retval > 0) {
-                retval = qemu_utimens(path.data, spec);
+                retval = utimensat(AT_FDCWD, path.data, spec,
+                                   AT_SYMLINK_NOFOLLOW);
                 if (retval < 0) {
                     retval = -errno;
                 }
diff --git a/hw/9pfs/9p-handle.c b/hw/9pfs/9p-handle.c
index 1687661bc9..9875f1894c 100644
--- a/hw/9pfs/9p-handle.c
+++ b/hw/9pfs/9p-handle.c
@@ -378,7 +378,6 @@ static int handle_utimensat(FsContext *ctx, V9fsPath *fs_path,
                             const struct timespec *buf)
 {
     int ret;
-#ifdef CONFIG_UTIMENSAT
     int fd;
     struct handle_data *data = (struct handle_data *)ctx->private;
 
@@ -388,10 +387,6 @@ static int handle_utimensat(FsContext *ctx, V9fsPath *fs_path,
     }
     ret = futimens(fd, buf);
     close(fd);
-#else
-    ret = -1;
-    errno = ENOSYS;
-#endif
     return ret;
 }
 
