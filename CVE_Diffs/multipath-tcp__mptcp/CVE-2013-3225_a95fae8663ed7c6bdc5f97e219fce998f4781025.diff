multipath-tcp__mptcp
commit a95fae8663ed7c6bdc5f97e219fce998f4781025
Author:     Mathias Krause <minipli@googlemail.com>
AuthorDate: Sun Apr 7 01:51:50 2013 +0000
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Thu May 30 17:09:02 2013 -0500

    Bluetooth: RFCOMM - Fix missing msg_namelen update in rfcomm_sock_recvmsg()
    
    CVE-2013-3225
    
    BugLink: http://bugs.launchpad.net/bugs/1172369
    
    If RFCOMM_DEFER_SETUP is set in the flags, rfcomm_sock_recvmsg() returns
    early with 0 without updating the possibly set msg_namelen member. This,
    in turn, leads to a 128 byte kernel stack leak in net/socket.c.
    
    Fix this by updating msg_namelen in this case. For all other cases it
    will be handled in bt_sock_stream_recvmsg().
    
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Cc: Johan Hedberg <johan.hedberg@gmail.com>
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit e11e0455c0d7d3d62276a0c55d9dfbc16779d691)
    Acked-by: Andy Whitcroft <andy.whitcroft@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index 20bd1480f868..514bead4b6f0 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -629,6 +629,7 @@ static int rfcomm_sock_recvmsg(struct kiocb *iocb, struct socket *sock,
 
 	if (test_and_clear_bit(RFCOMM_DEFER_SETUP, &d->flags)) {
 		rfcomm_dlc_accept(d);
+		msg->msg_namelen = 0;
 		return 0;
 	}
 
