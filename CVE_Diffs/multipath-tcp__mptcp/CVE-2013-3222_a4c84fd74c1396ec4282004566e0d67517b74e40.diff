multipath-tcp__mptcp
commit a4c84fd74c1396ec4282004566e0d67517b74e40
Author:     Mathias Krause <minipli@googlemail.com>
AuthorDate: Sun Apr 7 01:51:47 2013 +0000
Commit:     Steve Conklin <sconklin@canonical.com>
CommitDate: Thu May 30 17:09:03 2013 -0500

    atm: update msg_namelen in vcc_recvmsg()
    
    CVE-2013-3222
    
    BugLink: http://bugs.launchpad.net/bugs/1172365
    
    The current code does not fill the msg_name member in case it is set.
    It also does not set the msg_namelen member to 0 and therefore makes
    net/socket.c leak the local, uninitialized sockaddr_storage variable
    to userland -- 128 bytes of kernel stack memory.
    
    Fix that by simply setting msg_namelen to 0 as obviously nobody cared
    about vcc_recvmsg() not filling the msg_name in case it was set.
    
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit 9b3e617f3df53822345a8573b6d358f6b9e5ed87)
    Acked-by: Andy Whitcroft <andy.whitcroft@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/net/atm/common.c b/net/atm/common.c
index 0c0ad930a632..f0a9b7eb3732 100644
--- a/net/atm/common.c
+++ b/net/atm/common.c
@@ -520,6 +520,8 @@ int vcc_recvmsg(struct kiocb *iocb, struct socket *sock, struct msghdr *msg,
 	struct sk_buff *skb;
 	int copied, error = -EINVAL;
 
+	msg->msg_namelen = 0;
+
 	if (sock->state != SS_CONNECTED)
 		return -ENOTCONN;
 
