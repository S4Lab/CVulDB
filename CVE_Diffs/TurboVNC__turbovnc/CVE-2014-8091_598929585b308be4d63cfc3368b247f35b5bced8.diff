TurboVNC__turbovnc
commit 598929585b308be4d63cfc3368b247f35b5bced8
Author:     DRC <dcommander@users.sourceforge.net>
AuthorDate: Fri Dec 12 12:51:44 2014 +0000
Commit:     DRC <dcommander@users.sourceforge.net>
CommitDate: Fri Dec 12 12:51:44 2014 +0000

    From 90cc925c5991fcb203f72d00b04419cd754a9b2c Mon Sep 17 00:00:00 2001
    From: Alan Coopersmith <alan.coopersmith@oracle.com>
    Date: Fri, 17 Jan 2014 18:54:03 -0800
    Subject: unchecked malloc may allow unauthed client to crash Xserver
     [CVE-2014-8091]
    
    authdes_ezdecode() calls malloc() using a length provided by the
    connection handshake sent by a newly connected client in order
    to authenticate to the server, so should be treated as untrusted.
    
    It didn't check if malloc() failed before writing to the newly
    allocated buffer, so could lead to a server crash if the server
    fails to allocate memory (up to UINT16_MAX bytes, since the len
    field is a CARD16 in the X protocol).
    
    Reported-by: Ilja Van Sprundel <ivansprundel@ioactive.com>
    Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>
    Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
    
    
    git-svn-id: svn+ssh://svn.code.sf.net/p/turbovnc/code/trunk@2918 799e4f7b-5fd2-41f6-823c-2ecc41bc7f0b

diff --git a/unix/Xvnc/programs/Xserver/os/rpcauth.c b/unix/Xvnc/programs/Xserver/os/rpcauth.c
index bd219acf..c5bf7877 100644
--- a/unix/Xvnc/programs/Xserver/os/rpcauth.c
+++ b/unix/Xvnc/programs/Xserver/os/rpcauth.c
@@ -66,6 +66,10 @@ authdes_ezdecode(const char *inmsg, int len)
     SVCXPRT xprt;
 
     temp_inmsg = malloc(len);
+    if (temp_inmsg == NULL) {
+        why = AUTH_FAILED; /* generic error, since there is no AUTH_BADALLOC */
+        return NULL;
+    }
     memmove(temp_inmsg, inmsg, len);
 
     memset((char *) &msg, 0, sizeof(msg));
