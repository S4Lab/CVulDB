TurboVNC__turbovnc
commit ed21eeeab1b5d8472f592ffa28f4f71327d521e1
Author:     Robert Morell <rmorell@nvidia.com>
AuthorDate: Wed Nov 12 18:51:43 2014 -0800
Commit:     DRC <information@virtualgl.org>
CommitDate: Tue Aug 8 15:35:21 2017 -0500

    glx: Fix mask truncation in __glXGetAnswerBuffer [CVE-2014-8093 6/6]
    
    On a system where sizeof(unsigned) != sizeof(intptr_t), the unary
    bitwise not operation will result in a mask that clears all high bits
    from temp_buf in the expression:
            temp_buf = (temp_buf + mask) & ~mask;
    
    Signed-off-by: Robert Morell <rmorell@nvidia.com>
    Reviewed-by: Alan Coopersmith <alan.coopersmith@oracle.com>
    Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>

diff --git a/unix/Xvnc/programs/Xserver/glx/indirect_util.c b/unix/Xvnc/programs/Xserver/glx/indirect_util.c
index 03292c8d..3b7aff61 100644
--- a/unix/Xvnc/programs/Xserver/glx/indirect_util.c
+++ b/unix/Xvnc/programs/Xserver/glx/indirect_util.c
@@ -78,7 +78,7 @@ __glXGetAnswerBuffer(__GLXclientState * cl, size_t required_size,
                      void *local_buffer, size_t local_size, unsigned alignment)
 {
     void *buffer = local_buffer;
-    const unsigned mask = alignment - 1;
+    const intptr_t mask = alignment - 1;
 
     if (local_size < required_size) {
         size_t worst_case_size;
