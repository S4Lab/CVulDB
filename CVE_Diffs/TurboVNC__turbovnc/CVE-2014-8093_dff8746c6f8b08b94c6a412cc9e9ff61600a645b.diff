TurboVNC__turbovnc
commit dff8746c6f8b08b94c6a412cc9e9ff61600a645b
Author:     Adam Jackson <ajax@redhat.com>
AuthorDate: Mon Nov 10 12:13:38 2014 -0500
Commit:     DRC <information@virtualgl.org>
CommitDate: Tue Aug 8 15:35:20 2017 -0500

    glx: Additional paranoia in __glXGetAnswerBuffer / __GLX_GET_ANSWER_BUFFER (v2) [CVE-2014-8093 3/6]
    
    If the computed reply size is negative, something went wrong, treat it
    as an error.
    
    v2: Be more careful about size_t being unsigned (Matthieu Herrb)
    v3: SIZE_MAX not SIZE_T_MAX (Alan Coopersmith)
    
    Reviewed-by: Julien Cristau <jcristau@debian.org>
    Reviewed-by: Michal Srb <msrb@suse.com>
    Reviewed-by: Andy Ritger <aritger@nvidia.com>
    Signed-off-by: Adam Jackson <ajax@redhat.com>
    Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>

diff --git a/unix/Xvnc/programs/Xserver/glx/indirect_util.c b/unix/Xvnc/programs/Xserver/glx/indirect_util.c
index a54f70ae..03292c8d 100644
--- a/unix/Xvnc/programs/Xserver/glx/indirect_util.c
+++ b/unix/Xvnc/programs/Xserver/glx/indirect_util.c
@@ -81,9 +81,14 @@ __glXGetAnswerBuffer(__GLXclientState * cl, size_t required_size,
     const unsigned mask = alignment - 1;
 
     if (local_size < required_size) {
-        const size_t worst_case_size = required_size + alignment;
+        size_t worst_case_size;
         intptr_t temp_buf;
 
+        if (required_size < SIZE_MAX - alignment)
+            worst_case_size = required_size + alignment;
+        else
+            return NULL;
+
         if (cl->returnBufSize < worst_case_size) {
             void *temp = realloc(cl->returnBuf, worst_case_size);
 
diff --git a/unix/Xvnc/programs/Xserver/glx/unpack.h b/unix/Xvnc/programs/Xserver/glx/unpack.h
index 0a088fc3..f7d447f8 100644
--- a/unix/Xvnc/programs/Xserver/glx/unpack.h
+++ b/unix/Xvnc/programs/Xserver/glx/unpack.h
@@ -83,7 +83,8 @@ extern xGLXSingleReply __glXReply;
 ** pointer.
 */
 #define __GLX_GET_ANSWER_BUFFER(res,cl,size,align)			 \
-    if ((size) > sizeof(answerBuffer)) {				 \
+    if (size < 0) return BadLength;                                      \
+    else if ((size) > sizeof(answerBuffer)) {				 \
 	int bump;							 \
 	if ((cl)->returnBufSize < (size)+(align)) {			 \
 	    (cl)->returnBuf = (GLbyte*)realloc((cl)->returnBuf,	 	 \
