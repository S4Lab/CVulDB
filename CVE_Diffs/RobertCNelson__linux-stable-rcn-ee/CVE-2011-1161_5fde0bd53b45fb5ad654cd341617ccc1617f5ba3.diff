RobertCNelson__linux-stable-rcn-ee
commit 5fde0bd53b45fb5ad654cd341617ccc1617f5ba3
Author:     Peter Huewe <huewe.external.infineon@googlemail.com>
AuthorDate: Thu Sep 15 14:37:43 2011 -0300
Commit:     Paul Gortmaker <paul.gortmaker@windriver.com>
CommitDate: Fri Aug 17 15:35:18 2012 -0400

    TPM: Call tpm_transmit with correct size
    
    commit 6b07d30aca7e52f2881b8c8c20c8a2cd28e8b3d3 upstream.
    
    This patch changes the call of tpm_transmit by supplying the size of the
    userspace buffer instead of TPM_BUFSIZE.
    
    This got assigned CVE-2011-1161.
    
    [The first hunk didn't make sense given one could expect
     way less data than TPM_BUFSIZE, so added tpm_transmit boundary
     check over bufsiz instead
     The last parameter of tpm_transmit() reflects the amount
     of data expected from the device, and not the buffer size
     being supplied to it. It isn't ideal to parse it directly,
     so we just set it to the maximum the input buffer can handle
     and let the userspace API to do such job.]
    
    Signed-off-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com>
    Signed-off-by: James Morris <jmorris@namei.org>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/char/tpm/tpm.c b/drivers/char/tpm/tpm.c
index 7f95fec90268..f39e5ee17d49 100644
--- a/drivers/char/tpm/tpm.c
+++ b/drivers/char/tpm/tpm.c
@@ -375,6 +375,9 @@ static ssize_t tpm_transmit(struct tpm_chip *chip, const char *buf,
 	u32 count, ordinal;
 	unsigned long stop;
 
+	if (bufsiz > TPM_BUFSIZE)
+		bufsiz = TPM_BUFSIZE;
+
 	count = be32_to_cpu(*((__be32 *) (buf + 2)));
 	ordinal = be32_to_cpu(*((__be32 *) (buf + 6)));
 	if (count == 0)
