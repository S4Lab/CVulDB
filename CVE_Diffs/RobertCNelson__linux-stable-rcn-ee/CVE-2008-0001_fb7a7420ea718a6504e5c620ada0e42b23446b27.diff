RobertCNelson__linux-stable-rcn-ee
commit fb7a7420ea718a6504e5c620ada0e42b23446b27
Author:     Linus Torvalds <torvalds@linux-foundation.org>
AuthorDate: Tue Jan 15 23:39:01 2008 +0200
Commit:     Adrian Bunk <bunk@kernel.org>
CommitDate: Wed Jan 16 01:48:15 2008 +0200

    Use access mode instead of open flags to determine needed permissions (CVE-2008-0001)
    
    patch 974a9f0b47da74e28f68b9c8645c3786aa5ace1a in mainline
    
    Way back when (in commit 834f2a4a1554dc5b2598038b3fe8703defcbe467, aka
    "VFS: Allow the filesystem to return a full file pointer on open intent"
    to be exact), Trond changed the open logic to keep track of the original
    flags to a file open, in order to pass down the the intent of a dentry
    lookup to the low-level filesystem.
    
    However, when doing that reorganization, it changed the meaning of
    namei_flags, and thus inadvertently changed the test of access mode for
    directories (and RO filesystem) to use the wrong flag.  So fix those
    test back to use access mode ("acc_mode") rather than the open flag
    ("flag").
    
    Issue noticed by Bill Roman at Datalight.
    
    Reported-and-tested-by: Bill Roman <bill.roman@datalight.com>
    Acked-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Acked-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Adrian Bunk <bunk@kernel.org>

diff --git a/fs/namei.c b/fs/namei.c
index 3ece3a93dd92..0d2d26823f7b 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -1489,7 +1489,7 @@ int may_open(struct nameidata *nd, int acc_mode, int flag)
 	if (S_ISLNK(inode->i_mode))
 		return -ELOOP;
 	
-	if (S_ISDIR(inode->i_mode) && (flag & FMODE_WRITE))
+	if (S_ISDIR(inode->i_mode) && (acc_mode & MAY_WRITE))
 		return -EISDIR;
 
 	error = vfs_permission(nd, acc_mode);
@@ -1508,7 +1508,7 @@ int may_open(struct nameidata *nd, int acc_mode, int flag)
 			return -EACCES;
 
 		flag &= ~O_TRUNC;
-	} else if (IS_RDONLY(inode) && (flag & FMODE_WRITE))
+	} else if (IS_RDONLY(inode) && (acc_mode & MAY_WRITE))
 		return -EROFS;
 	/*
 	 * An append-only file must be opened in append mode for writing.
