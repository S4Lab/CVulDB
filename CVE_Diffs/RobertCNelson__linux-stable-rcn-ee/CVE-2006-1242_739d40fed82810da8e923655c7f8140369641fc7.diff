RobertCNelson__linux-stable-rcn-ee
commit 739d40fed82810da8e923655c7f8140369641fc7
Author:     Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>
AuthorDate: Wed Mar 22 14:34:42 2006 -0800
Commit:     Greg Kroah-Hartman <gregkh@suse.de>
CommitDate: Mon Mar 27 23:00:23 2006 -0800

    [PATCH] TCP: Do not use inet->id of global tcp_socket when sending RST (CVE-2006-1242)
    
    The problem is in ip_push_pending_frames(), which uses:
    
            if (!df) {
                    __ip_select_ident(iph, &rt->u.dst, 0);
            } else {
                    iph->id = htons(inet->id++);
            }
    
    instead of ip_select_ident().
    
    Right now I think the code is a nonsense. Most likely, I copied it from
    old ip_build_xmit(), where it was really special, we had to decide
    whether to generate unique ID when generating the first (well, the last)
    fragment.
    
    In ip_push_pending_frames() it does not make sense, it should use plain
    ip_select_ident() instead.
    
    Signed-off-by: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Chris Wright <chrisw@sous-sol.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/net/ipv4/ip_output.c b/net/ipv4/ip_output.c
index eba64e2bd397..9844d9ebf141 100644
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@ -1237,11 +1237,7 @@ int ip_push_pending_frames(struct sock *sk)
 	iph->tos = inet->tos;
 	iph->tot_len = htons(skb->len);
 	iph->frag_off = df;
-	if (!df) {
-		__ip_select_ident(iph, &rt->u.dst, 0);
-	} else {
-		iph->id = htons(inet->id++);
-	}
+	ip_select_ident(iph, &rt->u.dst, sk);
 	iph->ttl = ttl;
 	iph->protocol = sk->sk_protocol;
 	iph->saddr = rt->rt_src;
