spurious__SDL-mirror
commit 9643dc15e8b4691e2a01e1c121051abf9e388eb1
Author:     Petr Písař <ppisar@redhat.com>
AuthorDate: Mon Jun 10 08:54:29 2019 -0700
Commit:     Petr Písař <ppisar@redhat.com>
CommitDate: Mon Jun 10 08:54:29 2019 -0700

    CVE-2019-7577: Fix a buffer overread in MS_ADPCM_nibble and MS_ADPCM_decode
    If a chunk of RIFF/WAV file with MS ADPCM encoding contains an invalid
    predictor (a valid predictor's value is between 0 and 6 inclusive),
    a buffer overread can happen when the predictor is used as an index
    into an array of MS ADPCM coefficients.
    
    The overead happens when indexing MS_ADPCM_state.aCoeff[] array in
    MS_ADPCM_decode() and later when dereferencing a coef pointer in
    MS_ADPCM_nibble().
    
    This patch fixes it by checking the MS ADPCM predictor values fit
    into the valid range.
    
    CVE-2019-7577
    Reproducer: https://bugzilla.libsdl.org/show_bug.cgi?id=4492
    
    Signed-off-by: Petr Písař <ppisar@redhat.com>
    
    --HG--
    branch : SDL-1.2

diff --git a/src/audio/SDL_wave.c b/src/audio/SDL_wave.c
index 6c6eb14eb..3eedd20a1 100644
--- a/src/audio/SDL_wave.c
+++ b/src/audio/SDL_wave.c
@@ -147,6 +147,9 @@ static int MS_ADPCM_decode(Uint8 **audio_buf, Uint32 *audio_len)
 		if ( stereo ) {
 			state[1]->hPredictor = *encoded++;
 		}
+		if (state[0]->hPredictor >= 7 || state[1]->hPredictor >= 7) {
+			goto invalid_predictor;
+		}
 		state[0]->iDelta = ((encoded[1]<<8)|encoded[0]);
 		encoded += sizeof(Sint16);
 		if ( stereo ) {
@@ -217,6 +220,10 @@ too_short:
 	SDL_SetError("Too short chunk for a MS ADPCM decoder");
 	SDL_free(freeable);
 	return(-1);
+invalid_predictor:
+	SDL_SetError("Invalid predictor value for a MS ADPCM decoder");
+	SDL_free(freeable);
+	return(-1);
 }
 
 struct IMA_ADPCM_decodestate {
