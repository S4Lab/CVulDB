minipli__linux-grsec
commit 6cffb2520aba06a0df8ddbe0917175e07475431a
Author:     Eric W. Biederman <ebiederm@xmission.com>
AuthorDate: Fri Dec 5 18:26:30 2014 -0600
Commit:     Jiri Slaby <jslaby@suse.cz>
CommitDate: Wed Jan 7 17:55:12 2015 +0100

    userns: Check euid no fsuid when establishing an unprivileged uid mapping
    
    commit 80dd00a23784b384ccea049bfb3f259d3f973b9d upstream.
    
    setresuid allows the euid to be set to any of uid, euid, suid, and
    fsuid.  Therefor it is safe to allow an unprivileged user to map
    their euid and use CAP_SETUID privileged with exactly that uid,
    as no new credentials can be obtained.
    
    I can not find a combination of existing system calls that allows setting
    uid, euid, suid, and fsuid from the fsuid making the previous use
    of fsuid for allowing unprivileged mappings a bug.
    
    This is part of a fix for CVE-2014-8989.
    
    Reviewed-by: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

diff --git a/kernel/user_namespace.c b/kernel/user_namespace.c
index a5809c42a1b3..6e495bd672a7 100644
--- a/kernel/user_namespace.c
+++ b/kernel/user_namespace.c
@@ -805,7 +805,7 @@ static bool new_idmap_permitted(const struct file *file,
 		u32 id = new_map->extent[0].lower_first;
 		if (cap_setid == CAP_SETUID) {
 			kuid_t uid = make_kuid(ns->parent, id);
-			if (uid_eq(uid, file->f_cred->fsuid))
+			if (uid_eq(uid, file->f_cred->euid))
 				return true;
 		}
 	}
