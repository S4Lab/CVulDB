minipli__linux-grsec
commit 16365e5badcb314f350c47d4a9be90ed8a61b71a
Author:     Oleg Nesterov <oleg@redhat.com>
AuthorDate: Tue Feb 19 17:31:10 2013 +0000
Commit:     Willy Tarreau <w@1wt.eu>
CommitDate: Mon Jun 10 11:42:22 2013 +0200

    wake_up_process() should be never used to wakeup a TASK_STOPPED/TRACED task
    
    wake_up_process() should be never used to wakeup a TASK_STOPPED/TRACED task
    
    CVE-2013-0871
    
    BugLink: http://bugs.launchpad.net/bugs/1129192
    
    wake_up_process() should never wakeup a TASK_STOPPED/TRACED task.
    Change it to use TASK_NORMAL and add the WARN_ON().
    
    TASK_ALL has no other users, probably can be killed.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    (backported from commit 9067ac85d533651b98c2ff903182a20cbb361fcb)
    
    Conflicts:
            kernel/sched/core.c
    
    Signed-off-by: Luis Henriques <luis.henriques@canonical.com>
    Acked-by: Colin King <colin.king@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Willy Tarreau <w@1wt.eu>

diff --git a/kernel/sched.c b/kernel/sched.c
index 0591df8c9ace..42bf6a668e91 100644
--- a/kernel/sched.c
+++ b/kernel/sched.c
@@ -2618,7 +2618,8 @@ static int try_to_wake_up(struct task_struct *p, unsigned int state,
  */
 int wake_up_process(struct task_struct *p)
 {
-	return try_to_wake_up(p, TASK_ALL, 0);
+	WARN_ON(task_is_stopped_or_traced(p));
+	return try_to_wake_up(p, TASK_NORMAL, 0);
 }
 EXPORT_SYMBOL(wake_up_process);
 
