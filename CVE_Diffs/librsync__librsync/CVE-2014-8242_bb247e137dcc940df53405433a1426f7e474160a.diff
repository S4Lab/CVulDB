librsync__librsync
commit bb247e137dcc940df53405433a1426f7e474160a
Author:     Martin Pool <mbp@sourcefrog.net>
AuthorDate: Sat Nov 1 10:06:12 2014 -0700
Commit:     Martin Pool <mbp@sourcefrog.net>
CommitDate: Sat Nov 1 10:06:12 2014 -0700

    Mention CVE-2014-8242 in the news

diff --git a/NEWS b/NEWS
index 474f4f6..0fd49cb 100644
--- a/NEWS
+++ b/NEWS
@@ -1,18 +1,17 @@
 Changes in 1.0.0 (not yet released)
 
- * SECURITY: librsync previously used a truncated MD4 "strong" check sum 
-   to match blocks. However, MD4 is not cryptographically strong. It's 
-   possible that an attacker who can control the contents of one part of a 
-   file could use it to control other regions of the file, if it's
-   transferred using librsync/rdiff. For example this might occur in a 
-   database, mailbox, or VM image containing some attacker-controlled 
-   data.
+ * SECURITY: CVE-2014-8242: librsync previously used a truncated MD4
+   "strong" check sum to match blocks. However, MD4 is not cryptographically
+   strong. It's possible that an attacker who can control the contents of one
+   part of a file could use it to control other regions of the file, if it's
+   transferred using librsync/rdiff. For example this might occur in a
+   database, mailbox, or VM image containing some attacker-controlled data.
 
    To mitigate this issue, signatures will by default be computed with a
    256-bit BLAKE2 hash. Old versions of librsync will complain about a
    bad magic number when given these signature files.
 
-   Backward compatibility can be obtained using the new 
+   Backward compatibility can be obtained using the new
    `rdiff sig --hash=md4`
    option or through specifying the "signature magic" in the API, but 
    this should not be used when either the old or new file contain 
