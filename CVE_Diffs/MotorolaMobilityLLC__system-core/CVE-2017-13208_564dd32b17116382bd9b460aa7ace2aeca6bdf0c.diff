MotorolaMobilityLLC__system-core
commit 564dd32b17116382bd9b460aa7ace2aeca6bdf0c
Author:     mtk15713 <Yubing.Lin@mediatek.com>
AuthorDate: Wed Dec 20 15:26:41 2017 +0800
Commit:     xiest1 <xiest1@lenovo.com>
CommitDate: Thu Jan 4 15:10:50 2018 +0800

    [ALPS03650239] network:[Google Security Patch][CVE-2017-13208] RCE Vulnerability in Libnetutils
    
    [Detail]
    Check dhcp respose packet length
    
    [Solution]
    check validity of dhcp_size
    1) cannot be negative or zero
    2) src buffer contains enough bytes to copy
    3) cannot exceed destination buffer
    
    MTK-Commit-Id: 05998759eb13e7337cff81ad38f8a7074f360545
    
    Change-Id: Iab66e7d9b9ab789fc71d8900143009d1e74a2fcd
    Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>
    CR-Id: ALPS03650239
    Feature: NetD
    (cherry-pick from 8cb1468dda3ef6ca78b0e6f5d87caef941770eab)

diff --git a/libnetutils/packet.c b/libnetutils/packet.c
index e53a4c84f..9ecdd4f4e 100644
--- a/libnetutils/packet.c
+++ b/libnetutils/packet.c
@@ -218,6 +218,20 @@ int receive_packet(int s, struct dhcp_msg *msg)
      * to construct the pseudo header used in the checksum calculation.
      */
     dhcp_size = ntohs(packet.udp.len) - sizeof(packet.udp);
+    /*
+     * check validity of dhcp_size.
+     * 1) cannot be negative or zero.
+     * 2) src buffer contains enough bytes to copy
+     * 3) cannot exceed destination buffer
+     */
+    if ((dhcp_size <= 0) ||
+        ((int)(nread - sizeof(struct iphdr) - sizeof(struct udphdr)) < dhcp_size) ||
+        ((int)sizeof(struct dhcp_msg) < dhcp_size)) {
+#if VERBOSE
+        ALOGD("Malformed Packet");
+#endif
+        return -1;
+    }
     saddr = packet.ip.saddr;
     daddr = packet.ip.daddr;
     nread = ntohs(packet.ip.tot_len);
