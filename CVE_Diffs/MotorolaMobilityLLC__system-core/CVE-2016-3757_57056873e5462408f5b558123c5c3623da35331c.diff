MotorolaMobilityLLC__system-core
commit 57056873e5462408f5b558123c5c3623da35331c
Author:     yangqh5 <yangqh5@lenovo.com>
AuthorDate: Fri Aug 12 17:16:01 2016 +0800
Commit:     zhangly19 <zhangly19@lenovo.com>
CommitDate: Mon Aug 15 10:30:38 2016 +0800

    [MTK Patch](CR)For_mt6755_66_m_alps-mp-m0.mp7-V2.3_P104
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02854507
    Severity:
    
    Description:
      [Patch Request] [PMS] mt, Project: mt6755_66_M, SW Version: alps-mp-m0.mp7-V2.3N/A
    
    Associated Files:
      device/mt/mt6755_66_m/ProjectConfig.mk
      device/mt/mt6755_66c_m/ProjectConfig.mk
      device/mt/mt6755_66t_m/ProjectConfig.mk
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02759311
    Severity:
      Critical
    Description:
      [Google Security Patch][CVE-2016-3809]Information Disclosure Vulnerability in Networking Component (Device Specific)
      [[問題標題]]
      [Google Security P***h][CVE-2016-3809]I***o***ation Disclosure Vulnerability in Networking Component (Device Specific)
      [[問題現象]]
      [Google Security P***h][CVE-2016-3809]I***o***ation Disclosure Vulnerability in Networking Component (Device Specific)
      [[問題影響]]
      N/A
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      N/A
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-3809]I***o***ation Disclosure Vulnerability in Networking Component (Device Specific)
      [[Problem Description]]
      [Google Security P***h][CVE-2016-3809]I***o***ation Disclosure Vulnerability in Networking Component (Device Specific)
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      N/AN/A
    
    Associated Files:
      kernel-3.18/net/netfilter/xt_qtaguid.c
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02758875
    Severity:
      Critical
    Description:
      [Google Security Patch][CVE-2016-3757]Elevation of Privilege Vulnerability in lsof
      [[問題標題]]
      [Google Security P***h][CVE-2016-3757]Elevation of Privilege Vulnerability in lsof
      [[問題現象]]
      [Google Security P***h][CVE-2016-3757]Elevation of Privilege Vulnerability in lsof
      [[問題影響]]
      N/A
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      N/A
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-3757]Elevation of Privilege Vulnerability in lsof
      [[Problem Description]]
      [Google Security P***h][CVE-2016-3757]Elevation of Privilege Vulnerability in lsof
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      N/AN/A
    
    Associated Files:
      system/core/toolbox/lsof.c
    
    Change-Id: I1ab7e7cf254430218f93dd57d2c37091772c663e

diff --git a/toolbox/lsof.c b/toolbox/lsof.c
index 982f5aaf6..da78ddd71 100644
--- a/toolbox/lsof.c
+++ b/toolbox/lsof.c
@@ -100,10 +100,11 @@ out:
 static void print_maps(struct pid_info_t* info)
 {
     FILE *maps;
+
     size_t offset;
     char device[10];
     long int inode;
-    char file[PATH_MAX];
+    char file[1024];
 
     strlcat(info->path, "maps", sizeof(info->path));
 
@@ -111,8 +112,8 @@ static void print_maps(struct pid_info_t* info)
     if (!maps)
         goto out;
 
-    while (fscanf(maps, "%*x-%*x %*s %zx %s %ld %s\n", &offset, device, &inode,
-            file) == 4) {
+    while (fscanf(maps, "%*x-%*x %*s %zx %5s %ld %1023s\n",
+                  &offset, device, &inode, file) == 4) {
         // We don't care about non-file maps
         if (inode == 0 || !strcmp(device, "00:00"))
             continue;
