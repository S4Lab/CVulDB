MotorolaMobilityLLC__system-core
commit 6243cd7e1d256fb33ab0c4592f3792c9fb699953
Author:     Martijn Coenen <maco@google.com>
AuthorDate: Wed Dec 5 09:42:25 2018 +0100
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Mon Dec 2 09:57:16 2019 +0800

    Export maximum number of fds/ints in a native_handle.
    
    CVE-2019-2011 : (AOSP) EoP Vulnerability in System / libhwbinder
    A-120084106
    Mot-CRs-fixed: (CR)
    
    So we can deserialize it consisently and safely.
    
    Bug: 120084106
    Test: builds
    Change-Id: I0eafff70d3a7e4d732fe600a0052efb90108208d
    (cherry picked from commit 02debfa2df1589c2f8e35cc2db93dd131f43f2db)
    Reviewed-on: https://gerrit.mot.com/1306370
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/libcutils/include/cutils/native_handle.h b/libcutils/include/cutils/native_handle.h
index abe6dd614..c1c27f753 100644
--- a/libcutils/include/cutils/native_handle.h
+++ b/libcutils/include/cutils/native_handle.h
@@ -23,6 +23,9 @@
 extern "C" {
 #endif
 
+#define NATIVE_HANDLE_MAX_FDS 1024
+#define NATIVE_HANDLE_MAX_INTS 1024
+
 /* Declare a char array for use with native_handle_init */
 #define NATIVE_HANDLE_DECLARE_STORAGE(name, maxFds, maxInts) \
     alignas(native_handle_t) char name[                            \
diff --git a/libcutils/native_handle.c b/libcutils/native_handle.c
index 95bbc41c4..5cc1a9e6b 100644
--- a/libcutils/native_handle.c
+++ b/libcutils/native_handle.c
@@ -22,9 +22,6 @@
 #include <string.h>
 #include <unistd.h>
 
-static const int kMaxNativeFds = 1024;
-static const int kMaxNativeInts = 1024;
-
 native_handle_t* native_handle_init(char* storage, int numFds, int numInts) {
     if ((uintptr_t) storage % alignof(native_handle_t)) {
         errno = EINVAL;
@@ -39,7 +36,8 @@ native_handle_t* native_handle_init(char* storage, int numFds, int numInts) {
 }
 
 native_handle_t* native_handle_create(int numFds, int numInts) {
-    if (numFds < 0 || numInts < 0 || numFds > kMaxNativeFds || numInts > kMaxNativeInts) {
+    if (numFds < 0 || numInts < 0 || numFds > NATIVE_HANDLE_MAX_FDS ||
+        numInts > NATIVE_HANDLE_MAX_INTS) {
         errno = EINVAL;
         return NULL;
     }
