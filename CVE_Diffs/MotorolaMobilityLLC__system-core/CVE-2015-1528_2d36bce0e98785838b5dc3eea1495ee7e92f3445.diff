MotorolaMobilityLLC__system-core
commit 2d36bce0e98785838b5dc3eea1495ee7e92f3445
Author:     Adam Lesinski <adamlesinski@google.com>
AuthorDate: Mon Apr 27 12:13:33 2015 -0700
Commit:     Charles Barros <charlesb@motorola.com>
CommitDate: Thu Nov 19 17:21:09 2015 -0200

    ANDROIDB-19334482: CVE-2015-1528: Integer Overflow in libcutils
    
    Prevent integer overflow when allocating native_handle_t
    
    User specified values of numInts and numFds can overflow
    and cause malloc to allocate less than we expect, causing
    heap corruption in subsequent operations on the allocation.
    
    Bug: 19334482
    Change-Id: I43c75f536ea4c08f14ca12ca6288660fd2d1ec55
    
    Signed-off-by: Andy Seah <dntc46@motorola.com>
    Change-Id: Ic951835a55deb6779c80a55711a2bd544cddf478
    Reviewed-on: http://gerrit.mot.com/770649
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Christopher Fries <cfries@motorola.com>
    (cherry picked from commit 5d95a6b4878ead5c7459dd45c3b307dad1196df1)

diff --git a/libcutils/native_handle.c b/libcutils/native_handle.c
index 40899685e..61fa38ed4 100644
--- a/libcutils/native_handle.c
+++ b/libcutils/native_handle.c
@@ -25,14 +25,22 @@
 #include <cutils/log.h>
 #include <cutils/native_handle.h>
 
+static const int kMaxNativeFds = 1024;
+static const int kMaxNativeInts = 1024;
+
 native_handle_t* native_handle_create(int numFds, int numInts)
 {
-    native_handle_t* h = malloc(
-            sizeof(native_handle_t) + sizeof(int)*(numFds+numInts));
+    if (numFds < 0 || numInts < 0 || numFds > kMaxNativeFds || numInts > kMaxNativeInts) {
+        return NULL;
+    }
 
-    h->version = sizeof(native_handle_t);
-    h->numFds = numFds;
-    h->numInts = numInts;
+    size_t mallocSize = sizeof(native_handle_t) + (sizeof(int) * (numFds + numInts));
+    native_handle_t* h = malloc(mallocSize);
+    if (h) {
+        h->version = sizeof(native_handle_t);
+        h->numFds = numFds;
+        h->numInts = numInts;
+    }
     return h;
 }
 
