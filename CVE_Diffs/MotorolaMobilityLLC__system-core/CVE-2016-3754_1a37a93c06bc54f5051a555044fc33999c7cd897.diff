MotorolaMobilityLLC__system-core
commit 1a37a93c06bc54f5051a555044fc33999c7cd897
Author:     lulu2 <lulu2@lenovo.com>
AuthorDate: Fri Oct 28 15:38:46 2016 +0800
Commit:     谢苏婷 <xiest1@lenovo.com>
CommitDate: Fri Oct 28 19:57:21 2016 +0800

    [lulu2]ALPS02992989(For_mt6735m_65t_alps-mp-m0.mp1-V2.39.1_P74)
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02992989
    Severity:
    
    Description:
      [Patch Request] [PMS] LENOVO, Project: LENOVO6735M_65T, SW Version: alps-mp-m0.mp1-V2.39.1N/A
    
    Associated Files:
      device/mt/mt6735m_35t/ProjectConfig.mk
      device/mt/mt6735m_35u/ProjectConfig.mk
      device/mt/mt6735m_65t/ProjectConfig.mk
      device/mt/mt6735m_65u/ProjectConfig.mk
      vendor/mt/libs/mt6735m/AcdApiDaemon/AcdApiDaemon
      vendor/mt/libs/mt6735m/ami304d/ami304d
      vendor/mt/libs/mt6735m/ccci_fsd/ccci_fsd
      vendor/mt/libs/mt6735m/ccci_mdinit/ccci_mdinit
      vendor/mt/libs/mt6735m/libMtkOmxAdpcmEnc/libMtkOmxAdpcmEnc.so
      vendor/mt/libs/mt6735m/libMtkOmxAlacDec/libMtkOmxAlacDec.so
      vendor/mt/libs/mt6735m/libMtkOmxFlacDec/libMtkOmxFlacDec.so
      vendor/mt/libs/mt6735m/libMtkOmxG711Dec/libMtkOmxG711Dec.so
      vendor/mt/libs/mt6735m/libMtkOmxMp3Dec/libMtkOmxMp3Dec.so
      vendor/mt/libs/mt6735m/libamr_wrap/libamr_wrap.so
      vendor/mt/libs/mt6735m/libawb_wrap/libawb_wrap.so
      vendor/mt/libs/mt6735m/libfile_op/libfile_op.so
      vendor/mt/libs/mt6735m/libh264dec_hw/libh264dec_hw.a
      vendor/mt/libs/mt6735m/libhotknot_GT9XX/libhotknot_GT9XX.so
      vendor/mt/libs/mt6735m/libmemoryDumpEncoder/libmemoryDumpEncoder.so
      vendor/mt/libs/mt6735m/libmmprofile/libmmprofile.so
      vendor/mt/libs/mt6735m/libvc1dec_sw/libvc1dec_sw.a
      vendor/mt/libs/mt6735m/libvp8dec_sw/libvp8dec_sw.a
      vendor/mt/libs/mt6735m/libvp9dec_sw/libvp9dec_sw.a
      vendor/mt/libs/mt6735m/libvt_avsync/libvt_avsync.so
      vendor/mt/libs/mt6735m/libvt_socketbind/libvt_socketbind.so
      vendor/mt/libs/mt6735m/lsm303md/lsm303md
      vendor/mt/libs/mt6735m/mmp/mmp
      vendor/mt/libs/mt6735m/mtk-ril-prop-md1/mtk-ril-prop-md1.a
      vendor/mt/libs/mt6735m/mtk-ril-prop-md2/mtk-ril-prop-md2.a
      vendor/mt/libs/mt6735m/s62xd/s62xd
      vendor/mt/libs/mt6735m_64/AcdApiDaemon/AcdApiDaemon
      vendor/mt/libs/mt6735m_64/ami304d/ami304d
      vendor/mt/libs/mt6735m_64/ccci_fsd/ccci_fsd
      vendor/mt/libs/mt6735m_64/ccci_mdinit/ccci_mdinit
      vendor/mt/libs/mt6735m_64/libMtkOmxAdpcmEnc/arm/libMtkOmxAdpcmEnc.so
      vendor/mt/libs/mt6735m_64/libMtkOmxAlacDec/arm/libMtkOmxAlacDec.so
      vendor/mt/libs/mt6735m_64/libMtkOmxFlacDec/arm/libMtkOmxFlacDec.so
      vendor/mt/libs/mt6735m_64/libMtkOmxG711Dec/arm/libMtkOmxG711Dec.so
      vendor/mt/libs/mt6735m_64/libMtkOmxMp3Dec/arm/libMtkOmxMp3Dec.so
      vendor/mt/libs/mt6735m_64/libamr_wrap/arm/libamr_wrap.so
      vendor/mt/libs/mt6735m_64/libawb_wrap/arm/libawb_wrap.so
      vendor/mt/libs/mt6735m_64/libfile_op/arm/libfile_op.so
      vendor/mt/libs/mt6735m_64/libfile_op/libfile_op.so
      vendor/mt/libs/mt6735m_64/libh264dec_hw/arm/libh264dec_hw.a
      vendor/mt/libs/mt6735m_64/libhotknot_GT9XX/arm/libhotknot_GT9XX.so
      vendor/mt/libs/mt6735m_64/libmemoryDumpEncoder/arm/libmemoryDumpEncoder.so
      vendor/mt/libs/mt6735m_64/libmmprofile/arm/libmmprofile.so
      vendor/mt/libs/mt6735m_64/libvc1dec_sw/arm/libvc1dec_sw.a
      vendor/mt/libs/mt6735m_64/libvp8dec_sw/arm/libvp8dec_sw.a
      vendor/mt/libs/mt6735m_64/libvp9dec_sw/arm/libvp9dec_sw.a
      vendor/mt/libs/mt6735m_64/libvt_avsync/arm/libvt_avsync.so
      vendor/mt/libs/mt6735m_64/libvt_socketbind/arm/libvt_socketbind.so
      vendor/mt/libs/mt6735m_64/lsm303md/lsm303md
      vendor/mt/libs/mt6735m_64/mmp/mmp
      vendor/mt/libs/mt6735m_64/mtk-ril-prop-md1/arm/mtk-ril-prop-md1.a
      vendor/mt/libs/mt6735m_64/mtk-ril-prop-md1/mtk-ril-prop-md1.a
      vendor/mt/libs/mt6735m_64/mtk-ril-prop-md2/arm/mtk-ril-prop-md2.a
      vendor/mt/libs/mt6735m_64/mtk-ril-prop-md2/mtk-ril-prop-md2.a
      vendor/mt/libs/mt6735m_64/s62xd/s62xd
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02966594
    Severity:
      Critical
    Description:
      [Google Security P***h][CVE-2016-3911]Update: Elevation of privilege vulnerability in Zygote process
      [[問題標題]]
      [Google Security P***h][CVE-2016-3911]Update: Elevation of privilege vulnerability in Zygote process
      [[問題現象]]
      [Google Security P***h][CVE-2016-3911]Update: Elevation of privilege vulnerability in Zygote process
      [[問題影響]]
      N/A
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      合入此 Google Security P***h 之後，若有在 zygote 階段 open 非原生且自定義的 fd，有可能產生開機失敗的情況。建議務必驗證各模式下是否可以正常開機，若無法正常開機，請從 log 中搜尋 "Not wh***isted"，並在 kPathWh***ist 加入自定義的 fd。
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-3911]Update: Elevation of privilege vulnerability in Zygote process
      [[Problem Description]]
      [Google Security P***h][CVE-2016-3911]Update: Elevation of privilege vulnerability in Zygote process
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      When ***ng zygo***o open a non-AOSP native fd path, it's possible to cause bootup fail afte***erged this Google Security P***h. Please must verify whether can no***ally bootup under each mode; if bootup failed, please search "Not wh***isted" as keyword in log, and add your self-defined fd path to kPathWh***ist.N/A
    
    Associated Files:
      external/sepolicy/zygote.te
      frameworks/base/core/jni/com_android_internal_os_Zygote.cpp
      frameworks/base/core/jni/fd_utils-inl.h
      system/core/include/android/log.h
      system/core/liblog/logd_write.c
      system/core/liblog/logd_write_kern.c
      system/core/liblog/tests/liblog_test.cpp
      vendor/mt/libs/mt6735m/MATest/MATest
      vendor/mt/libs/mt6735m/akmd09911/akmd09911
      vendor/mt/libs/mt6735m/akmd8963/akmd8963
      vendor/mt/libs/mt6735m/bmm050d/bmm050d
      vendor/mt/libs/mt6735m/fsck_msdos_mtk/fsck_msdos_mtk
      vendor/mt/libs/mt6735m/libGLES_mali/libGLES_mali.so
      vendor/mt/libs/mt6735m/libJpgDecPipe/libJpgDecPipe.so
      vendor/mt/libs/mt6735m/libJpgEncPipe/libJpgEncPipe.so
      vendor/mt/libs/mt6735m/libMtkOmxAdpcmDec/libMtkOmxAdpcmDec.so
      vendor/mt/libs/mt6735m/libMtkOmxGsmDec/libMtkOmxGsmDec.so
      vendor/mt/libs/mt6735m/libMtkOmxRawDec/libMtkOmxRawDec.so
      vendor/mt/libs/mt6735m/libSwJpgCodec/libSwJpgCodec.so
      vendor/mt/libs/mt6735m/libc_malloc_debug_mtk/libc_malloc_debug_mtk.a
      vendor/mt/libs/mt6735m/libcamalgo/libcamalgo.so
      vendor/mt/libs/mt6735m/libged/libged.so
      vendor/mt/libs/mt6735m/libhotknot_GT1XX/libhotknot_GT1XX.so
      vendor/mt/libs/mt6735m/libhwm/libhwm.so
      vendor/mt/libs/mt6735m/libmhalImageCodec/libmhalImageCodec.so
      vendor/mt/libs/mt6735m/libmtk_vt_swip/libmtk_vt_swip.so
      vendor/mt/libs/mt6735m/libudf/libudf.so
      vendor/mt/libs/mt6735m/libvcodecdrv/libvcodecdrv.so
      vendor/mt/libs/mt6735m/libwvdrmengine/libwvdrmengine.so
      vendor/mt/libs/mt6735m/magd/magd
      vendor/mt/libs/mt6735m/mobile_log_d/mobile_log_d
      vendor/mt/libs/mt6735m/mtk_agpsd/mtk_agpsd
      vendor/mt/libs/mt6735m/program_binary_service/program_binary_service
      vendor/mt/libs/mt6735m/slpd/slpd
      vendor/mt/libs/mt6735m/volte_core/volte_core.a
      vendor/mt/libs/mt6735m/volte_stack/volte_stack
      vendor/mt/libs/mt6735m/vtservice/vtservice
      vendor/mt/libs/mt6735m_64/akmd09911/akmd09911
      vendor/mt/libs/mt6735m_64/akmd8963/akmd8963
      vendor/mt/libs/mt6735m_64/bmm050d/bmm050d
      vendor/mt/libs/mt6735m_64/fsck_msdos_mtk/fsck_msdos_mtk
      vendor/mt/libs/mt6735m_64/libGLES_mali/arm/libGLES_mali.so
      vendor/mt/libs/mt6735m_64/libGLES_mali/libGLES_mali.so
      vendor/mt/libs/mt6735m_64/libJpgDecPipe/arm/libJpgDecPipe.so
      vendor/mt/libs/mt6735m_64/libJpgEncPipe/arm/libJpgEncPipe.so
      vendor/mt/libs/mt6735m_64/libMtkOmxAdpcmDec/arm/libMtkOmxAdpcmDec.so
      vendor/mt/libs/mt6735m_64/libMtkOmxGsmDec/arm/libMtkOmxGsmDec.so
      vendor/mt/libs/mt6735m_64/libMtkOmxRawDec/arm/libMtkOmxRawDec.so
      vendor/mt/libs/mt6735m_64/libSwJpgCodec/arm/libSwJpgCodec.so
      vendor/mt/libs/mt6735m_64/libc_malloc_debug_mtk/arm/libc_malloc_debug_mtk.a
      vendor/mt/libs/mt6735m_64/libc_malloc_debug_mtk/libc_malloc_debug_mtk.a
      vendor/mt/libs/mt6735m_64/libcamalgo/arm/libcamalgo.so
      vendor/mt/libs/mt6735m_64/libged/arm/libged.so
      vendor/mt/libs/mt6735m_64/libhotknot_GT1XX/arm/libhotknot_GT1XX.so
      vendor/mt/libs/mt6735m_64/libhwm/arm/libhwm.so
      vendor/mt/libs/mt6735m_64/libhwm/libhwm.so
      vendor/mt/libs/mt6735m_64/libmhalImageCodec/arm/libmhalImageCodec.so
      vendor/mt/libs/mt6735m_64/libmtk_vt_swip/arm/libmtk_vt_swip.so
      vendor/mt/libs/mt6735m_64/libudf/arm/libudf.so
      vendor/mt/libs/mt6735m_64/libudf/libudf.so
      vendor/mt/libs/mt6735m_64/libvcodecdrv/arm/libvcodecdrv.so
      vendor/mt/libs/mt6735m_64/libwvdrmengine/arm/libwvdrmengine.so
      vendor/mt/libs/mt6735m_64/magd/magd
      vendor/mt/libs/mt6735m_64/mobile_log_d/mobile_log_d
      vendor/mt/libs/mt6735m_64/mtk_agpsd/mtk_agpsd
      vendor/mt/libs/mt6735m_64/slpd/slpd
      vendor/mt/libs/mt6735m_64/volte_core/arm/volte_core.a
      vendor/mt/libs/mt6735m_64/volte_stack/volte_stack
      vendor/mt/libs/mt6735m_64/vtservice/vtservice
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02966622
    Severity:
      Critical
    Description:
      [Google Security P***h][CVE-2016-6709]I***o***ation disclosure vulnerability in Conscrypt and BoringSSL
      [[問題標題]]
      [Google Security P***h][CVE-2016-6709]I***o***ation disclosure vulnerability in Conscrypt and BoringSSL
      [[問題現象]]
      [Google Security P***h][CVE-2016-6709]I***o***ation disclosure vulnerability in Conscrypt and BoringSSL
      [[問題影響]]
      造成信息泄露
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      访问tls网站
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-6709]I***o***ation disclosure vulnerability in Conscrypt and BoringSSL
      [[Problem Description]]
      [Google Security P***h][CVE-2016-6709]I***o***ation disclosure vulnerability in Conscrypt and BoringSSL
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      surf tls webpageN/A
    
    Associated Files:
      external/boringssl/src/crypto/cipher/cipher_test.cc
      external/boringssl/src/crypto/cipher/e_des.c
      external/boringssl/src/crypto/cipher/test/cipher_test.txt
      external/boringssl/src/include/openssl/cipher.h
      external/conscrypt/src/main/native/org_conscrypt_NativeCrypto.cpp
      vendor/mt/libs/mt6735m/libcdm_protos/libcdm_protos.a
      vendor/mt/libs/mt6735m/libwvdrmengine/libwvdrmengine.so
      vendor/mt/libs/mt6735m/slpd/slpd
      vendor/mt/libs/mt6735m_64/libcdm_protos/arm/libcdm_protos.a
      vendor/mt/libs/mt6735m_64/libwvdrmengine/arm/libwvdrmengine.so
      vendor/mt/libs/mt6735m_64/slpd/slpd
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02967064
    Severity:
      Critical
    Description:
      [Google Security P***h][CVE-2016-6710]I***o***ation disclosure vulnerability in download manager
      [[問題標題]]
      [Google Security P***h][CVE-2016-6710]I***o***ation disclosure vulnerability in download manager
      [[問題現象]]
      [Google Security P***h][CVE-2016-6710]I***o***ation disclosure vulnerability in download manager
      [[問題影響]]
      N/A
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      N/A
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-6710]I***o***ation disclosure vulnerability in download manager
      [[Problem Description]]
      [Google Security P***h][CVE-2016-6710]I***o***ation disclosure vulnerability in download manager
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      N/AN/A
    
    Associated Files:
      frameworks/base/core/java/android/app/DownloadManager.java
      packages/providers/DownloadProvider/src/com/android/providers/downloads/DownloadProvider.java
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02967067
    Severity:
      Critical
    Description:
      [Google Security P***h][CVE-2016-6711][CVE-2016-6712][CVE-2016-6713][CVE-2016-6714]Denial of service vulnerability in Mediaserver
      [[問題標題]]
      [Google Security P***h][CVE-2016-6711][CVE-2016-6712][CVE-2016-6713][CVE-2016-6714]Denial of service vulnerability in Mediaserver
      [[問題現象]]
      [Google Security P***h][CVE-2016-6711][CVE-2016-6712][CVE-2016-6713][CVE-2016-6714]Denial of service vulnerability in Mediaserver
      [[問題影響]]
      N/A
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      N/A
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-6711][CVE-2016-6712][CVE-2016-6713][CVE-2016-6714]Denial of service vulnerability in Mediaserver
      [[Problem Description]]
      [Google Security P***h][CVE-2016-6711][CVE-2016-6712][CVE-2016-6713][CVE-2016-6714]Denial of service vulnerability in Mediaserver
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      N/AN/A
    
    Associated Files:
      external/libavc/decoder/ih264d_api.c
      external/libavc/decoder/ih264d_inter_pred.c
      external/libavc/decoder/ih264d_parse_pslice.c
      external/libavc/decoder/ih264d_parse_slice.c
      external/libvpx/libvpx/vp8/vp8_dx_iface.c
      external/libvpx/libvpx/vp9/common/vp9_alloccommon.c
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02967069
    Severity:
      Critical
    Description:
      [Google Security P***h][CVE-2016-3754]Update: Denial of service vulnerability in MediaServer
      [[問題標題]]
      [Google Security P***h][CVE-2016-3754]Update: Denial of service vulnerability in MediaServer
      [[問題現象]]
      [Google Security P***h][CVE-2016-3754]Update: Denial of service vulnerability in MediaServer
      [[問題影響]]
      N/A
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      N/A
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-3754]Update: Denial of service vulnerability in MediaServer
      [[Problem Description]]
      [Google Security P***h][CVE-2016-3754]Update: Denial of service vulnerability in MediaServer
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      N/AN/A
    
    Associated Files:
      frameworks/av/media/libstagefright/MPEG4Extractor.cpp
    
    Patch Type:
      Customer Request
    CR ID:
      ALPS02967071
    Severity:
      Critical
    Description:
      [Google Security P***h][CVE-2016-6715]Elevation of privilege vulnerability i***ramework APIs
      [[問題標題]]
      [Google Security P***h][CVE-2016-6715]Elevation of privilege vulnerability i***ramework APIs
      [[問題現象]]
      [Google Security P***h][CVE-2016-6715]Elevation of privilege vulnerability i***ramework APIs
      [[問題影響]]
      N/A
      [[問題復現步驟]]
      N/A
      [[建議驗證模塊]]
      N/A
      [[Title for Customer]]
      [Google Security P***h][CVE-2016-6715]Elevation of privilege vulnerability i***ramework APIs
      [[Problem Description]]
      [Google Security P***h][CVE-2016-6715]Elevation of privilege vulnerability i***ramework APIs
      [[Impa***]]
      N/A
      [[Reproduced Steps]]
      N/A
      [[Modules to be verified after taking p***h]]
      N/AN/A
    
    Associated Files:
      frameworks/base/services/core/java/com/android/server/media/MediaSessionService.java
    
    Change-Id: I69d7830ec10193e1a379a62a935630a21dafd9fc
    (cherry picked from commit 4aa34413e4bc31018fad4699b5b161a379fc9cc3)

diff --git a/include/android/log.h b/include/android/log.h
index 1c171b7bf..391c826d5 100644
--- a/include/android/log.h
+++ b/include/android/log.h
@@ -88,6 +88,11 @@ typedef enum android_LogPriority {
     ANDROID_LOG_SILENT,     /* only for SetMinPriority(); must be last */
 } android_LogPriority;
 
+/*
+ * Release any logger resources (a new log write will immediately re-acquire)
+ */
+void __android_log_close();
+
 /*
  * Send a simple string to the log.
  */
diff --git a/liblog/logd_write.c b/liblog/logd_write.c
index 1fd029101..23049987e 100644
--- a/liblog/logd_write.c
+++ b/liblog/logd_write.c
@@ -336,6 +336,48 @@ const char *android_log_id_to_name(log_id_t log_id)
 }
 #endif
 
+/*
+ * Release any logger resources. A new log write will immediately re-acquire.
+ */
+void __android_log_close()
+{
+#if FAKE_LOG_DEVICE
+    int i;
+#endif
+
+#ifdef HAVE_PTHREADS
+    pthread_mutex_lock(&log_init_lock);
+#endif
+
+    write_to_log = __write_to_log_init;
+
+    /*
+     * Threads that are actively writing at this point are not held back
+     * by a lock and are at risk of dropping the messages with a return code
+     * -EBADF. Prefer to return error code than add the overhead of a lock to
+     * each log writing call to guarantee delivery. In addition, anyone
+     * calling this is doing so to release the logging resources and shut down,
+     * for them to do so with outstanding log requests in other threads is a
+     * disengenuous use of this function.
+     */
+#if FAKE_LOG_DEVICE
+    for (i = 0; i < LOG_ID_MAX; i++) {
+        fakeLogClose(log_fds[i]);
+        log_fds[i] = -1;
+    }
+#else
+    close(logd_fd);
+    logd_fd = -1;
+
+    close(pstore_fd);
+    pstore_fd = -1;
+#endif
+
+#ifdef HAVE_PTHREADS
+    pthread_mutex_unlock(&log_init_lock);
+#endif
+}
+
 static int __write_to_log_init(log_id_t log_id, struct iovec *vec, size_t nr)
 {
 #if !defined(_WIN32)
diff --git a/liblog/logd_write_kern.c b/liblog/logd_write_kern.c
index dbce284b6..49686c6da 100644
--- a/liblog/logd_write_kern.c
+++ b/liblog/logd_write_kern.c
@@ -112,6 +112,41 @@ static int __write_to_log_kernel(log_id_t log_id, struct iovec *vec, size_t nr)
     return ret;
 }
 
+/*
+ * Release any logger resources. A new log write will immediately re-acquire.
+ */
+void __android_log_close()
+{
+#ifdef HAVE_PTHREADS
+    pthread_mutex_lock(&log_init_lock);
+#endif
+
+    write_to_log = __write_to_log_init;
+
+    /*
+     * Threads that are actively writing at this point are not held back
+     * by a lock and are at risk of dropping the messages with a return code
+     * -EBADF. Prefer to return error code than add the overhead of a lock to
+     * each log writing call to guarantee delivery. In addition, anyone
+     * calling this is doing so to release the logging resources and shut down,
+     * for them to do so with outstanding log requests in other threads is a
+     * disengenuous use of this function.
+     */
+
+    log_close(log_fds[LOG_ID_MAIN]);
+    log_fds[LOG_ID_MAIN] = -1;
+    log_close(log_fds[LOG_ID_RADIO]);
+    log_fds[LOG_ID_RADIO] = -1;
+    log_close(log_fds[LOG_ID_EVENTS]);
+    log_fds[LOG_ID_EVENTS] = -1;
+    log_close(log_fds[LOG_ID_SYSTEM]);
+    log_fds[LOG_ID_SYSTEM] = -1;
+
+#ifdef HAVE_PTHREADS
+    pthread_mutex_unlock(&log_init_lock);
+#endif
+}
+
 static int __write_to_log_init(log_id_t log_id, struct iovec *vec, size_t nr)
 {
     pthread_mutex_lock(&log_init_lock);
diff --git a/liblog/tests/liblog_test.cpp b/liblog/tests/liblog_test.cpp
index abe023974..7838ef943 100644
--- a/liblog/tests/liblog_test.cpp
+++ b/liblog/tests/liblog_test.cpp
@@ -126,12 +126,17 @@ TEST(liblog, __android_log_btwrite__android_logger_list_read) {
     ASSERT_TRUE(NULL != (logger_list = android_logger_list_open(
         LOG_ID_EVENTS, ANDROID_LOG_RDONLY | ANDROID_LOG_NONBLOCK, 1000, pid)));
 
+    // Check that we can close and reopen the logger
     log_time ts(CLOCK_MONOTONIC);
-
     ASSERT_LT(0, __android_log_btwrite(0, EVENT_TYPE_LONG, &ts, sizeof(ts)));
+    __android_log_close();
+
+    log_time ts1(CLOCK_MONOTONIC);
+    ASSERT_LT(0, __android_log_btwrite(0, EVENT_TYPE_LONG, &ts1, sizeof(ts1)));
     usleep(1000000);
 
     int count = 0;
+    int second_count = 0;
 
     for (;;) {
         log_msg log_msg;
@@ -155,10 +160,13 @@ TEST(liblog, __android_log_btwrite__android_logger_list_read) {
         log_time tx(eventData + 4 + 1);
         if (ts == tx) {
             ++count;
+        } else if (ts1 == tx) {
+            ++second_count;
         }
     }
 
     EXPECT_EQ(1, count);
+    EXPECT_EQ(1, second_count);
 
     android_logger_list_close(logger_list);
 }
