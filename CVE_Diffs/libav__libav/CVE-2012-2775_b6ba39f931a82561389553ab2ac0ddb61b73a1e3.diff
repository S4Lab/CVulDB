libav__libav
commit b6ba39f931a82561389553ab2ac0ddb61b73a1e3
Author:     Michael Niedermayer <michaelni@gmx.at>
AuthorDate: Sat Mar 24 01:39:13 2012 +0100
Commit:     Anton Khirnov <anton@khirnov.net>
CommitDate: Sat Oct 6 09:40:46 2012 +0200

    alsdec: check opt_order.
    
    Fixes out of array write in quant_cof.
    Also make sure no invalid opt_order stays in the context.
    
    Fixes CVE-2012-2775
    
    Found-by: Mateusz "j00ru" Jurczyk and Gynvael Coldwind
    Signed-off-by: Michael Niedermayer <michaelni@gmx.at>
    Signed-off-by: Justin Ruggles <justin.ruggles@gmail.com>
    (cherry picked from commit 9853e41aa0a6cfff629ff7009685eb8bf8d64e7f)
    
    Signed-off-by: Anton Khirnov <anton@khirnov.net>
    (cherry picked from commit a1b127515bb79c715933d0d4201e4ef3152b3dcb)
    
    Signed-off-by: Anton Khirnov <anton@khirnov.net>

diff --git a/libavcodec/alsdec.c b/libavcodec/alsdec.c
index f2944c603..cdf2a7c0f 100644
--- a/libavcodec/alsdec.c
+++ b/libavcodec/alsdec.c
@@ -662,6 +662,11 @@ static int read_var_block_data(ALSDecContext *ctx, ALSBlockData *bd)
             int opt_order_length = av_ceil_log2(av_clip((bd->block_length >> 3) - 1,
                                                 2, sconf->max_order + 1));
             *bd->opt_order       = get_bits(gb, opt_order_length);
+            if (*bd->opt_order > sconf->max_order) {
+                *bd->opt_order = sconf->max_order;
+                av_log(avctx, AV_LOG_ERROR, "Predictor order too large!\n");
+                return AVERROR_INVALIDDATA;
+            }
         } else {
             *bd->opt_order = sconf->max_order;
         }
