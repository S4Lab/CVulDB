xelerance__Openswan
commit 54ba60662bd34153358eccb1eb41f82ad8d2cd4b
Author:     Michael Richardson <mcr@credil.org>
AuthorDate: Mon May 27 16:38:55 2013 -0400
Commit:     Patrick Naubert <patrickn@xelerance.com>
CommitDate: Mon Jan 27 10:55:08 2014 -0500

    applied Andreas Steffan fix from CVE-2013-2054

diff --git a/lib/libopenswan/id.c b/lib/libopenswan/id.c
index d7a74e0ad..8e69df7f9 100644
--- a/lib/libopenswan/id.c
+++ b/lib/libopenswan/id.c
@@ -1,5 +1,7 @@
 /* identity representation, as in IKE ID Payloads (RFC 2407 DOI 4.6.2.1)
  * Copyright (C) 1999-2001  D. Hugh Redelmeier
+ * Copyright (C) 2013  Michael C Richardson <mcr@xelerance.com>
+ * Copyright (C) 2013  Andreas Steffen
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License as published by the
@@ -119,7 +121,7 @@ atoid(char *src, struct id *id, bool myid_ok)
 	/* we interpret this as an ASCII X.501 ID_DER_ASN1_DN */
 	id->kind = ID_DER_ASN1_DN;
 	id->name.ptr = temporary_cyclic_buffer(); /* assign temporary buffer */
-	id->name.len = 0;
+	id->name.len = IDTOA_BUF;
 	/* convert from LDAP style or openssl x509 -subject style to ASN.1 DN
 	 * discard optional @ character in front of DN
 	 */
diff --git a/lib/libopenswan/x509dn.c b/lib/libopenswan/x509dn.c
index 9918b7673..1349d2e82 100644
--- a/lib/libopenswan/x509dn.c
+++ b/lib/libopenswan/x509dn.c
@@ -2,8 +2,8 @@
  * Copyright (C) 2000 Andreas Hess, Patric Lichtsteiner, Roger Wegmann
  * Copyright (C) 2001 Marco Bertossa, Andreas Schleiss
  * Copyright (C) 2002 Mario Strasser
- * Copyright (C) 2000-2004 Andreas Steffen, Zuercher Hochschule Winterthur
- * Copyright (C) 2003-2008 Michael C Richardson <mcr@xelerance.com>
+ * Copyright (C) 2000-2013 Andreas Steffen, Zuercher Hochschule Winterthur
+ * Copyright (C) 2003-2013 Michael C Richardson <mcr@xelerance.com>
  * Copyright (C) 2008 Antony Antony <antony@xelerance.com>
  * Copyright (C) 2003-2010 Paul Wouters <paul@xelerance.com>
  * Copyright (C) 2009 Avesh Agarwal <avagarwa@redhat.com>
@@ -763,13 +763,14 @@ atodn(char *src, chunk_t *dn)
     int whitespace  = 0;
     int rdn_seq_len = 0;
     int rdn_set_len = 0;
+    int rdn_len     = 0;
     int dn_seq_len  = 0;
     int pos         = 0;
 
     err_t ugh = NULL;
 
     u_char *dn_ptr = dn->ptr + 4;
-
+    size_t max_len = dn->len - 4;
     state_t state = SEARCH_OID;
 
     do
@@ -840,6 +841,16 @@ atodn(char *src, chunk_t *dn)
 		rdn_set_len = 1 + asn1_rdn_seq_len.len + rdn_seq_len;
 		code_asn1_length(rdn_set_len, &asn1_rdn_set_len);
 
+		/* compute the length of the relative distinguished name */
+		rdn_len = 1 + asn1_rdn_set_len.len + rdn_set_len;
+
+		/* do we have sufficient buffer_space */
+		if (dn_seq_len + rdn_len > max_len)
+		{
+		    ugh = "insufficient buffer space for atodn()";
+		    break;
+		}
+
 		/* encode the relative distinguished name */
 		*dn_ptr++ = ASN1_SET;
 		chunkcpy(dn_ptr, asn1_rdn_set_len);
@@ -856,6 +867,7 @@ atodn(char *src, chunk_t *dn)
 
 		/* accumulate the length of the distinguished name sequence */
 		dn_seq_len += 1 + asn1_rdn_set_len.len + rdn_set_len;
+		dn_seq_len += rdn_len;
 
 		/* reset name and change state */
 		name = empty_chunk;
@@ -865,7 +877,7 @@ atodn(char *src, chunk_t *dn)
 	case UNKNOWN_OID:
 	    break;
 	}
-    } while (*src++ != '\0');
+    } while (*src++ != '\0' && ugh == NULL);
 
     /* complete the distinguished name sequence*/
     code_asn1_length(dn_seq_len, &asn1_dn_seq_len);
@@ -874,6 +886,7 @@ atodn(char *src, chunk_t *dn)
     dn_ptr = dn->ptr;
     *dn_ptr++ = ASN1_SEQUENCE;
     chunkcpy(dn_ptr, asn1_dn_seq_len);
+
     return ugh;
 }
 
diff --git a/programs/pluto/connections.c b/programs/pluto/connections.c
index 58909c95e..6682dc934 100644
--- a/programs/pluto/connections.c
+++ b/programs/pluto/connections.c
@@ -910,6 +910,7 @@ extract_end(struct end *dst, const struct whack_end *src, const char *which)
 	    err_t ugh;
 
 	    dst->ca.ptr = temporary_cyclic_buffer();
+	    dst->ca.len = IDTOA_BUF;
 	    ugh = atodn(src->ca, &dst->ca);
 	    if (ugh != NULL)
 	    {
