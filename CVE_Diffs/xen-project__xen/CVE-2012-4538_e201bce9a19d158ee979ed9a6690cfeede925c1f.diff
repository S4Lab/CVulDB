xen-project__xen
commit e201bce9a19d158ee979ed9a6690cfeede925c1f
Author:     Ian Jackson <Ian.Jackson@eu.citrix.com>
AuthorDate: Wed Nov 14 11:44:46 2012 +0000
Commit:     Ian Jackson <Ian.Jackson@eu.citrix.com>
CommitDate: Wed Nov 14 11:44:46 2012 +0000

    xen/mm/shadow: check toplevel pagetables are present before unhooking them.
    
    If the guest has not fully populated its top-level PAE entries when it calls
    HVMOP_pagetable_dying, the shadow code could try to unhook entries from
    MFN 0.  Add a check to avoid that case.
    
    This issue was introduced by c/s 21239:b9d2db109cf5.
    
    This is a security problem, XSA-23 / CVE-2012-4538.
    
    Signed-off-by: Tim Deegan <tim@xen.org>
    Tested-by: Andrew Cooper <andrew.cooper3@citrix.com>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
    Committed-by: Ian Jackson <ian.jackson@eu.citrix.com>
    
    xen-4.1-testing changeset: 23409:61eb3d030f52
    Backport-requested-by: security@xen.org
    Committed-by: Ian Jackson <ian.jackson@eu.citrix.com>

diff --git a/xen/arch/x86/mm/shadow/multi.c b/xen/arch/x86/mm/shadow/multi.c
index ca7635b416..243b9f4d44 100644
--- a/xen/arch/x86/mm/shadow/multi.c
+++ b/xen/arch/x86/mm/shadow/multi.c
@@ -4698,8 +4698,12 @@ static void sh_pagetable_dying(struct vcpu *v, paddr_t gpa)
     }
     for ( i = 0; i < 4; i++ )
     {
-        if ( fast_path )
-            smfn = _mfn(pagetable_get_pfn(v->arch.shadow_table[i]));
+        if ( fast_path ) {
+            if ( pagetable_is_null(v->arch.shadow_table[i]) )
+                smfn = _mfn(INVALID_MFN);
+            else
+                smfn = _mfn(pagetable_get_pfn(v->arch.shadow_table[i]));
+        }
         else
         {
             /* retrieving the l2s */
