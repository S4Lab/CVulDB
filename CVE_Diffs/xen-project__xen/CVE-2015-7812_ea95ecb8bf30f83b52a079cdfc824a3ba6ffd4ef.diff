xen-project__xen
commit ea95ecb8bf30f83b52a079cdfc824a3ba6ffd4ef
Author:     Julien Grall <julien.grall@citrix.com>
AuthorDate: Thu Oct 29 13:46:45 2015 +0100
Commit:     Jan Beulich <jbeulich@suse.com>
CommitDate: Thu Oct 29 13:46:45 2015 +0100

    arm: Support hypercall_create_continuation for multicall
    
    Multicall for ARM has been supported since commit f0dbdc6 "xen: arm: fully
    implement multicall interface.". Although, if an hypercall in multicall
    requires preemption, it will crash the host:
    
    (XEN) Xen BUG at domain.c:347
    (XEN) ----[ Xen-4.7-unstable  arm64  debug=y  Tainted:    C ]----
    [...]
    (XEN) Xen call trace:
    (XEN)    [<00000000002420cc>] hypercall_create_continuation+0x64/0x380 (PC)
    (XEN)    [<0000000000217274>] do_memory_op+0x1b00/0x2334 (LR)
    (XEN)    [<0000000000250d2c>] do_multicall_call+0x114/0x124
    (XEN)    [<0000000000217ff0>] do_multicall+0x17c/0x23c
    (XEN)    [<000000000024f97c>] do_trap_hypercall+0x90/0x12c
    (XEN)    [<0000000000251ca8>] do_trap_hypervisor+0xd2c/0x1ba4
    (XEN)    [<00000000002582cc>] guest_sync+0x88/0xb8
    (XEN)
    (XEN)
    (XEN) ****************************************
    (XEN) Panic on CPU 5:
    (XEN) Xen BUG at domain.c:347
    (XEN) ****************************************
    (XEN)
    (XEN) Manual reset required ('noreboot' specified)
    
    Looking to the code, the support of multicall looks valid to me, as we only
    need to fill call.args[...]. So drop the BUG();
    
    This is CVE-2015-7812 / XSA-145.
    
    Signed-off-by: Julien Grall <julien.grall@citrix.com>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
    master commit: 29bcf64ce8bc0b1b7aacd00c8668f255c4f0686c
    master date: 2015-10-29 13:31:10 +0100

diff --git a/xen/arch/arm/domain.c b/xen/arch/arm/domain.c
index b2bfc7d293..b9a422656e 100644
--- a/xen/arch/arm/domain.c
+++ b/xen/arch/arm/domain.c
@@ -344,8 +344,6 @@ unsigned long hypercall_create_continuation(
 
     if ( test_bit(_MCSF_in_multicall, &mcs->flags) )
     {
-        BUG(); /* XXX multicalls not implemented yet. */
-
         __set_bit(_MCSF_call_preempted, &mcs->flags);
 
         for ( i = 0; *p != '\0'; i++ )
