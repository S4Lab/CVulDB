aosp-mirror__platform_external_qemu
commit 3ba4a75dc5394f1ecd33e1884c95f63cee5caedb
Author:     Erwin Jansen <jansene@google.com>
AuthorDate: Mon Apr 24 11:05:52 2017 -0700
Commit:     Erwin Jansen <jansene@google.com>
CommitDate: Mon Apr 24 11:05:52 2017 -0700

    Backport of check to validate current
    
    This fixes a security vulnerability:
    
    [CVE-2016-1714]      QEMU : Security vulnerabilities in the device
    emulation.
    bug: https://buganizer.corp.google.com/issues/35443564
    
    Change-Id: I6ce86e0c47f0f7aba80512b95b39d0955f3e69ec

diff --git a/android/qemu1/hw/nvram/fw_cfg.c b/android/qemu1/hw/nvram/fw_cfg.c
index 3fe29ad390..246ead3b42 100644
--- a/android/qemu1/hw/nvram/fw_cfg.c
+++ b/android/qemu1/hw/nvram/fw_cfg.c
@@ -55,11 +55,15 @@ struct FWCfgState {
 static void fw_cfg_write(FWCfgState *s, uint8_t value)
 {
     int arch = !!(s->cur_entry & FW_CFG_ARCH_LOCAL);
-    FWCfgEntry *e = &s->entries[arch][s->cur_entry & FW_CFG_ENTRY_MASK];
+    FWCfgEntry *e = (s->cur_entry == FW_CFG_INVALID) ? NULL :
+        &s->entries[arch][s->cur_entry & FW_CFG_ENTRY_MASK];
 
     FW_CFG_DPRINTF("write %d\n", value);
 
-    if (s->cur_entry & FW_CFG_WRITE_CHANNEL && s->cur_offset < e->len) {
+    if (s->cur_entry & FW_CFG_WRITE_CHANNEL
+        && e != NULL
+        && e->callback
+        && s->cur_offset < e->len) {
         e->data[s->cur_offset++] = value;
         if (s->cur_offset == e->len) {
             e->callback(e->callback_opaque, e->data);
@@ -89,7 +93,8 @@ static int fw_cfg_select(FWCfgState *s, uint16_t key)
 static uint8_t fw_cfg_read(FWCfgState *s)
 {
     int arch = !!(s->cur_entry & FW_CFG_ARCH_LOCAL);
-    FWCfgEntry *e = &s->entries[arch][s->cur_entry & FW_CFG_ENTRY_MASK];
+    FWCfgEntry *e = (s->cur_entry == FW_CFG_INVALID) ? NULL :
+                     &s->entries[arch][s->cur_entry & FW_CFG_ENTRY_MASK];
     uint8_t ret;
 
     if (s->cur_entry == FW_CFG_INVALID || !e->data || s->cur_offset >= e->len)
