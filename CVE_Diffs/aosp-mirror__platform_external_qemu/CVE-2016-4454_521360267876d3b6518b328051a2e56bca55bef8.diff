aosp-mirror__platform_external_qemu
commit 521360267876d3b6518b328051a2e56bca55bef8
Author:     Gerd Hoffmann <kraxel@redhat.com>
AuthorDate: Mon May 30 09:09:18 2016 +0200
Commit:     Gerd Hoffmann <kraxel@redhat.com>
CommitDate: Mon Jun 6 09:03:51 2016 +0200

    vmsvga: move fifo sanity checks to vmsvga_fifo_length
    
    Sanity checks are applied when the fifo is enabled by the guest
    (SVGA_REG_CONFIG_DONE write).  Which doesn't help much if the guest
    changes the fifo registers afterwards.  Move the checks to
    vmsvga_fifo_length so they are done each time qemu is about to read
    from the fifo.
    
    Fixes: CVE-2016-4454
    Cc: qemu-stable@nongnu.org
    Cc: P J P <ppandit@redhat.com>
    Reported-by: 李强 <liqiang6-s@360.cn>
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Message-id: 1464592161-18348-2-git-send-email-kraxel@redhat.com

diff --git a/hw/display/vmware_vga.c b/hw/display/vmware_vga.c
index 0c63fa8513..63a7c05512 100644
--- a/hw/display/vmware_vga.c
+++ b/hw/display/vmware_vga.c
@@ -555,6 +555,21 @@ static inline int vmsvga_fifo_length(struct vmsvga_state_s *s)
     if (!s->config || !s->enable) {
         return 0;
     }
+
+    /* Check range and alignment.  */
+    if ((CMD(min) | CMD(max) | CMD(next_cmd) | CMD(stop)) & 3) {
+        return 0;
+    }
+    if (CMD(min) < (uint8_t *) s->cmd->fifo - (uint8_t *) s->fifo) {
+        return 0;
+    }
+    if (CMD(max) > SVGA_FIFO_SIZE) {
+        return 0;
+    }
+    if (CMD(max) < CMD(min) + 10 * 1024) {
+        return 0;
+    }
+
     num = CMD(next_cmd) - CMD(stop);
     if (num < 0) {
         num += CMD(max) - CMD(min);
@@ -1005,19 +1020,6 @@ static void vmsvga_value_write(void *opaque, uint32_t address, uint32_t value)
     case SVGA_REG_CONFIG_DONE:
         if (value) {
             s->fifo = (uint32_t *) s->fifo_ptr;
-            /* Check range and alignment.  */
-            if ((CMD(min) | CMD(max) | CMD(next_cmd) | CMD(stop)) & 3) {
-                break;
-            }
-            if (CMD(min) < (uint8_t *) s->cmd->fifo - (uint8_t *) s->fifo) {
-                break;
-            }
-            if (CMD(max) > SVGA_FIFO_SIZE) {
-                break;
-            }
-            if (CMD(max) < CMD(min) + 10 * 1024) {
-                break;
-            }
             vga_dirty_log_stop(&s->vga);
         }
         s->config = !!value;
