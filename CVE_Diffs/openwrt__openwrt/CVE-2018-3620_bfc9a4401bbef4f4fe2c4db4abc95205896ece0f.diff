openwrt__openwrt
commit bfc9a4401bbef4f4fe2c4db4abc95205896ece0f
Author:     Hauke Mehrtens <hauke@hauke-m.de>
AuthorDate: Wed Aug 15 22:40:58 2018 +0200
Commit:     Hauke Mehrtens <hauke@hauke-m.de>
CommitDate: Wed Aug 15 22:40:58 2018 +0200

    kernel: bump kernel 4.14 to version 4.14.63
    
    The following patches were integrated upstream:
     * target/linux/ipq40xx/patches-4.14/050-0006-mtd-nand-qcom-Add-a-NULL-check-for-devm_kasprintf.patch
     * target/linux/mediatek/patches-4.14/0177-phy-phy-mtk-tphy-use-auto-instead-of-force-to-bypass.patch
    
    This fixes tries to work around the following security problems:
     * CVE-2018-3620 L1 Terminal Fault OS, SMM related aspects
     * CVE-2018-3646 L1 Terminal Fault Virtualization related aspects
    
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>

diff --git a/include/kernel-version.mk b/include/kernel-version.mk
index da750cdfe1..1e7c33a375 100644
--- a/include/kernel-version.mk
+++ b/include/kernel-version.mk
@@ -3,10 +3,10 @@
 LINUX_RELEASE?=1
 
 LINUX_VERSION-4.9 = .119
-LINUX_VERSION-4.14 = .62
+LINUX_VERSION-4.14 = .63
 
 LINUX_KERNEL_HASH-4.9.119 = 49e17f01a1a607b4b1ab28dc7177e103943151866c3956fd83edc8a4aae60b35
-LINUX_KERNEL_HASH-4.14.62 = 51ca4d7e8ee156dc0f19bc7768915cfae41dbb0b4f251e4fa8b178c5674c22ab
+LINUX_KERNEL_HASH-4.14.63 = cd2e52f0e7ba861afa91cf487b2f45e5174115870f256a1d65996647b7bcc6d3
 
 remove_uri_prefix=$(subst git://,,$(subst http://,,$(subst https://,,$(1))))
 sanitize_uri=$(call qstrip,$(subst @,_,$(subst :,_,$(subst .,_,$(subst -,_,$(subst /,_,$(1)))))))
diff --git a/target/linux/ipq40xx/patches-4.14/050-0003-mtd-nand-qcom-support-for-command-descriptor-formati.patch b/target/linux/ipq40xx/patches-4.14/050-0003-mtd-nand-qcom-support-for-command-descriptor-formati.patch
index 8dd209b919..62bac3762a 100644
--- a/target/linux/ipq40xx/patches-4.14/050-0003-mtd-nand-qcom-support-for-command-descriptor-formati.patch
+++ b/target/linux/ipq40xx/patches-4.14/050-0003-mtd-nand-qcom-support-for-command-descriptor-formati.patch
@@ -191,7 +191,7 @@ Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
  			if (r)
  				return r;
  		}
-@@ -2722,6 +2797,7 @@ static int qcom_nandc_probe(struct platf
+@@ -2725,6 +2800,7 @@ static int qcom_nandc_probe(struct platf
  	if (IS_ERR(nandc->base))
  		return PTR_ERR(nandc->base);
  
diff --git a/target/linux/ipq40xx/patches-4.14/050-0006-mtd-nand-qcom-Add-a-NULL-check-for-devm_kasprintf.patch b/target/linux/ipq40xx/patches-4.14/050-0006-mtd-nand-qcom-Add-a-NULL-check-for-devm_kasprintf.patch
deleted file mode 100644
index 4ddc0148ad..0000000000
--- a/target/linux/ipq40xx/patches-4.14/050-0006-mtd-nand-qcom-Add-a-NULL-check-for-devm_kasprintf.patch
+++ /dev/null
@@ -1,26 +0,0 @@
-From 069f05346d01e7298939f16533953cdf52370be3 Mon Sep 17 00:00:00 2001
-From: Fabio Estevam <fabio.estevam@nxp.com>
-Date: Fri, 5 Jan 2018 18:02:55 -0200
-Subject: [PATCH 6/7] mtd: nand: qcom: Add a NULL check for devm_kasprintf()
-
-devm_kasprintf() may fail, so we should better add a NULL check
-and propagate an error on failure.
-
-Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
-Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
----
- drivers/mtd/nand/qcom_nandc.c | 3 +++
- 1 file changed, 3 insertions(+)
-
---- a/drivers/mtd/nand/qcom_nandc.c
-+++ b/drivers/mtd/nand/qcom_nandc.c
-@@ -2639,6 +2639,9 @@ static int qcom_nand_host_init(struct qc
- 
- 	nand_set_flash_node(chip, dn);
- 	mtd->name = devm_kasprintf(dev, GFP_KERNEL, "qcom_nand.%d", host->cs);
-+	if (!mtd->name)
-+		return -ENOMEM;
-+
- 	mtd->owner = THIS_MODULE;
- 	mtd->dev.parent = dev;
- 
diff --git a/target/linux/mediatek/patches-4.14/0125-phy-phy-mtk-tphy-add-set_mode-callback.patch b/target/linux/mediatek/patches-4.14/0125-phy-phy-mtk-tphy-add-set_mode-callback.patch
index a9481f3d6f..9b651925c9 100644
--- a/target/linux/mediatek/patches-4.14/0125-phy-phy-mtk-tphy-add-set_mode-callback.patch
+++ b/target/linux/mediatek/patches-4.14/0125-phy-phy-mtk-tphy-add-set_mode-callback.patch
@@ -26,7 +26,7 @@ Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
  
  #define U3P_U3_CHIP_GPIO_CTLD		0x0c
  #define P3C_REG_IP_SW_RST		BIT(31)
-@@ -585,6 +587,31 @@ static void u2_phy_instance_exit(struct
+@@ -580,6 +582,31 @@ static void u2_phy_instance_exit(struct
  	}
  }
  
@@ -58,7 +58,7 @@ Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
  static void pcie_phy_instance_init(struct mtk_tphy *tphy,
  	struct mtk_phy_instance *instance)
  {
-@@ -881,6 +908,17 @@ static int mtk_phy_exit(struct phy *phy)
+@@ -876,6 +903,17 @@ static int mtk_phy_exit(struct phy *phy)
  	return 0;
  }
  
@@ -76,7 +76,7 @@ Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
  static struct phy *mtk_phy_xlate(struct device *dev,
  					struct of_phandle_args *args)
  {
-@@ -931,6 +969,7 @@ static const struct phy_ops mtk_tphy_ops
+@@ -926,6 +964,7 @@ static const struct phy_ops mtk_tphy_ops
  	.exit		= mtk_phy_exit,
  	.power_on	= mtk_phy_power_on,
  	.power_off	= mtk_phy_power_off,
diff --git a/target/linux/mediatek/patches-4.14/0177-phy-phy-mtk-tphy-use-auto-instead-of-force-to-bypass.patch b/target/linux/mediatek/patches-4.14/0177-phy-phy-mtk-tphy-use-auto-instead-of-force-to-bypass.patch
deleted file mode 100644
index fc993c3266..0000000000
--- a/target/linux/mediatek/patches-4.14/0177-phy-phy-mtk-tphy-use-auto-instead-of-force-to-bypass.patch
+++ /dev/null
@@ -1,75 +0,0 @@
-From dacdae142ffd909ed6718adb05af74ff800da668 Mon Sep 17 00:00:00 2001
-From: Chunfeng Yun <chunfeng.yun@mediatek.com>
-Date: Thu, 7 Dec 2017 19:53:34 +0800
-Subject: [PATCH 177/224] phy: phy-mtk-tphy: use auto instead of force to
- bypass utmi signals
-
-When system is running, if usb2 phy is forced to bypass utmi signals,
-all PLL will be turned off, and it can't detect device connection
-anymore, so replace force mode with auto mode which can bypass utmi
-signals automatically if no device attached for normal flow.
-But keep the force mode to fix RX sensitivity degradation issue.
-
-Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
-Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
----
- drivers/phy/mediatek/phy-mtk-tphy.c | 19 +++++++------------
- 1 file changed, 7 insertions(+), 12 deletions(-)
-
---- a/drivers/phy/mediatek/phy-mtk-tphy.c
-+++ b/drivers/phy/mediatek/phy-mtk-tphy.c
-@@ -440,9 +440,9 @@ static void u2_phy_instance_init(struct
- 	u32 index = instance->index;
- 	u32 tmp;
- 
--	/* switch to USB function. (system register, force ip into usb mode) */
-+	/* switch to USB function, and enable usb pll */
- 	tmp = readl(com + U3P_U2PHYDTM0);
--	tmp &= ~P2C_FORCE_UART_EN;
-+	tmp &= ~(P2C_FORCE_UART_EN | P2C_FORCE_SUSPENDM);
- 	tmp |= P2C_RG_XCVRSEL_VAL(1) | P2C_RG_DATAIN_VAL(0);
- 	writel(tmp, com + U3P_U2PHYDTM0);
- 
-@@ -502,10 +502,8 @@ static void u2_phy_instance_power_on(str
- 	u32 index = instance->index;
- 	u32 tmp;
- 
--	/* (force_suspendm=0) (let suspendm=1, enable usb 480MHz pll) */
- 	tmp = readl(com + U3P_U2PHYDTM0);
--	tmp &= ~(P2C_FORCE_SUSPENDM | P2C_RG_XCVRSEL);
--	tmp &= ~(P2C_RG_DATAIN | P2C_DTM0_PART_MASK);
-+	tmp &= ~(P2C_RG_XCVRSEL | P2C_RG_DATAIN | P2C_DTM0_PART_MASK);
- 	writel(tmp, com + U3P_U2PHYDTM0);
- 
- 	/* OTG Enable */
-@@ -540,7 +538,6 @@ static void u2_phy_instance_power_off(st
- 
- 	tmp = readl(com + U3P_U2PHYDTM0);
- 	tmp &= ~(P2C_RG_XCVRSEL | P2C_RG_DATAIN);
--	tmp |= P2C_FORCE_SUSPENDM;
- 	writel(tmp, com + U3P_U2PHYDTM0);
- 
- 	/* OTG Disable */
-@@ -548,18 +545,16 @@ static void u2_phy_instance_power_off(st
- 	tmp &= ~PA6_RG_U2_OTG_VBUSCMP_EN;
- 	writel(tmp, com + U3P_USBPHYACR6);
- 
--	/* let suspendm=0, set utmi into analog power down */
--	tmp = readl(com + U3P_U2PHYDTM0);
--	tmp &= ~P2C_RG_SUSPENDM;
--	writel(tmp, com + U3P_U2PHYDTM0);
--	udelay(1);
--
- 	tmp = readl(com + U3P_U2PHYDTM1);
- 	tmp &= ~(P2C_RG_VBUSVALID | P2C_RG_AVALID);
- 	tmp |= P2C_RG_SESSEND;
- 	writel(tmp, com + U3P_U2PHYDTM1);
- 
- 	if (tphy->pdata->avoid_rx_sen_degradation && index) {
-+		tmp = readl(com + U3P_U2PHYDTM0);
-+		tmp &= ~(P2C_RG_SUSPENDM | P2C_FORCE_SUSPENDM);
-+		writel(tmp, com + U3P_U2PHYDTM0);
-+
- 		tmp = readl(com + U3D_U2PHYDCR0);
- 		tmp &= ~P2C_RG_SIF_U2PLL_FORCE_ON;
- 		writel(tmp, com + U3D_U2PHYDCR0);
