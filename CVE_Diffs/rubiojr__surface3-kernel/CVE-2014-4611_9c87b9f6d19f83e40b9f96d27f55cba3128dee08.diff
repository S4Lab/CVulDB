rubiojr__surface3-kernel
commit 9c87b9f6d19f83e40b9f96d27f55cba3128dee08
Author:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>
AuthorDate: Fri Jun 27 09:56:45 2014 -0700
Commit:     Luis Henriques <luis.henriques@canonical.com>
CommitDate: Tue Jul 1 15:05:27 2014 +0100

    lz4: ensure length does not wrap
    
    Given some pathologically compressed data, lz4 could possibly decide to
    wrap a few internal variables, causing unknown things to happen.  Catch
    this before the wrapping happens and abort the decompression.
    
    Reported-by: "Don A. Bailey" <donb@securitymouse.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    (cherry picked from commit 206204a1162b995e2185275167b22468c00d6b36)
    CVE-2014-4611
    BugLink: http://bugs.launchpad.net/bugs/1335314
    Signed-off-by: Brad Figg <brad.figg@canonical.com>
    Acked-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

diff --git a/lib/lz4/lz4_decompress.c b/lib/lz4/lz4_decompress.c
index df6839e3ce0..99a03acb7d4 100644
--- a/lib/lz4/lz4_decompress.c
+++ b/lib/lz4/lz4_decompress.c
@@ -72,6 +72,8 @@ static int lz4_uncompress(const char *source, char *dest, int osize)
 			len = *ip++;
 			for (; len == 255; length += 255)
 				len = *ip++;
+			if (unlikely(length > (size_t)(length + len)))
+				goto _output_error;
 			length += len;
 		}
 
