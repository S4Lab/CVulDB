vyos__vyatta-quagga
commit 7132eaf1b59660ac3a7fe72fdad704429d74eeeb
Author:     Susheela Vaidya <susheela@debiansv.vyatta.com>
AuthorDate: Mon Jun 18 17:36:01 2012 -0700
Commit:     Susheela Vaidya <susheela@debiansv.vyatta.com>
CommitDate: Mon Jun 18 17:36:01 2012 -0700

    Bug 8150 - fix for CVE-2012-0255

diff --git a/bgpd/bgp_open.c b/bgpd/bgp_open.c
index fa670d08..c175e531 100644
--- a/bgpd/bgp_open.c
+++ b/bgpd/bgp_open.c
@@ -411,13 +411,20 @@ bgp_capability_restart (struct peer *peer, struct capability_header *caphdr)
 static as_t
 bgp_capability_as4 (struct peer *peer, struct capability_header *hdr)
 {
+  SET_FLAG (peer->cap, PEER_CAP_AS4_RCV);
+
+  if (hdr->length != CAPABILITY_CODE_AS4_LEN)
+    {
+      zlog_err ("%s AS4 capability has incorrect data length %d",
+                peer->host, hdr->length);
+      return 0;
+    }
+
   as_t as4 = stream_getl (BGP_INPUT(peer));
-  
+
   if (BGP_DEBUG (as4, AS4))
     zlog_debug ("%s [AS4] about to set cap PEER_CAP_AS4_RCV, got as4 %u",
                 peer->host, as4);
-  SET_FLAG (peer->cap, PEER_CAP_AS4_RCV);
-  
   return as4;
 }
 
@@ -679,9 +686,6 @@ peek_for_as4_capability (struct peer *peer, u_char length)
 
 	      if (hdr.code == CAPABILITY_CODE_AS4)
 	        {
-	          if (hdr.length != CAPABILITY_CODE_AS4_LEN)
-	            goto end;
-                  
 	          if (BGP_DEBUG (as4, AS4))
 	            zlog_info ("[AS4] found AS4 capability, about to parse");
 	          as4 = bgp_capability_as4 (peer, &hdr);
diff --git a/bgpd/bgp_packet.c b/bgpd/bgp_packet.c
index bc14073f..c5d1b336 100644
--- a/bgpd/bgp_packet.c
+++ b/bgpd/bgp_packet.c
@@ -1445,9 +1445,14 @@ bgp_open_receive (struct peer *peer, bgp_size_t size)
   /* Open option part parse. */
   if (optlen != 0) 
     {
-      ret = bgp_open_option_parse (peer, optlen, &capability);
-      if (ret < 0)
-	return ret;
+      if ((ret = bgp_open_option_parse (peer, optlen, &capability)) < 0)
+        {
+          bgp_notify_send (peer,
+                 BGP_NOTIFY_OPEN_ERR,
+                 BGP_NOTIFY_OPEN_UNACEP_HOLDTIME);
+          return ret;
+        }
+    
     }
   else
     {
