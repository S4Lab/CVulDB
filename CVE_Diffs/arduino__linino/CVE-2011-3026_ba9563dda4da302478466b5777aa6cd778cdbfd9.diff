arduino__linino
commit ba9563dda4da302478466b5777aa6cd778cdbfd9
Author:     juhosg <juhosg@3c298f89-4303-0410-b956-a3cf2f4a3e73>
AuthorDate: Mon Feb 25 21:04:07 2013 +0000
Commit:     juhosg <juhosg@3c298f89-4303-0410-b956-a3cf2f4a3e73>
CommitDate: Mon Feb 25 21:04:07 2013 +0000

    libpng: version bump to 1.2.50
    
    Version bump libpng to 1.2.50 and switch to the .tar.xz packaging.
    Drop patch 200-CVE-2011-3026.patch as it's integrated.
    
    Signed-off-by: Ian Leonard <antonlacon@gmail.com>
    Signed-off-by: Gabor Juhos <juhosg@openwrt.org>
    
    git-svn-id: svn://svn.openwrt.org/openwrt@35794 3c298f89-4303-0410-b956-a3cf2f4a3e73

diff --git a/packages/libs/libpng/Makefile b/packages/libs/libpng/Makefile
index 8eb92ba055..fc795738ae 100644
--- a/packages/libs/libpng/Makefile
+++ b/packages/libs/libpng/Makefile
@@ -1,5 +1,5 @@
 #
-# Copyright (C) 2006-2012 OpenWrt.org
+# Copyright (C) 2006-2013 OpenWrt.org
 #
 # This is free software, licensed under the GNU General Public License v2.
 # See /LICENSE for more information.
@@ -8,12 +8,12 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=libpng
-PKG_VERSION:=1.2.46
-PKG_RELEASE:=2
+PKG_VERSION:=1.2.50
+PKG_RELEASE:=1
 
-PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.xz
 PKG_SOURCE_URL:=@SF/libpng
-PKG_MD5SUM:=e8b43dc78ef95b3949af7f961d76874b
+PKG_MD5SUM:=a3e00fccbfe356174ab515b5c00641c7
 
 PKG_LICENSE:=LIBPNG GPLv2
 PKC_LICENSE_FILES:=LICENSE contrib/gregbook/COPYING contrib/gregbook/LICENSE
diff --git a/packages/libs/libpng/patches/200-CVE-2011-3026.patch b/packages/libs/libpng/patches/200-CVE-2011-3026.patch
index beb0d60d52..e69de29bb2 100644
--- a/packages/libs/libpng/patches/200-CVE-2011-3026.patch
+++ b/packages/libs/libpng/patches/200-CVE-2011-3026.patch
@@ -1,40 +0,0 @@
---- a/pngrutil.c
-+++ b/pngrutil.c
-@@ -339,15 +339,18 @@ png_decompress_chunk(png_structp png_ptr
-       /* Now check the limits on this chunk - if the limit fails the
-        * compressed data will be removed, the prefix will remain.
-        */
-+      if (prefix_size >= (~(png_size_t)0) - 1 ||
-+         expanded_size >= (~(png_size_t)0) - 1 - prefix_size
- #ifdef PNG_SET_CHUNK_MALLOC_LIMIT_SUPPORTED
--      if (png_ptr->user_chunk_malloc_max &&
-+         || (png_ptr->user_chunk_malloc_max &&
-           (prefix_size + expanded_size >= png_ptr->user_chunk_malloc_max - 1))
- #else
- #  ifdef PNG_USER_CHUNK_MALLOC_MAX
--      if ((PNG_USER_CHUNK_MALLOC_MAX > 0) &&
-+         || ((PNG_USER_CHUNK_MALLOC_MAX > 0) &&
-           prefix_size + expanded_size >= PNG_USER_CHUNK_MALLOC_MAX - 1)
- #  endif
- #endif
-+          )
-          png_warning(png_ptr, "Exceeded size limit while expanding chunk");
- 
-       /* If the size is zero either there was an error and a message
-@@ -355,14 +358,11 @@ png_decompress_chunk(png_structp png_ptr
-        * and we have nothing to do - the code will exit through the
-        * error case below.
-        */
--#if defined(PNG_SET_CHUNK_MALLOC_LIMIT_SUPPORTED) || \
--    defined(PNG_USER_CHUNK_MALLOC_MAX)
--      else
--#endif
--      if (expanded_size > 0)
-+      else if (expanded_size > 0)
-       {
-          /* Success (maybe) - really uncompress the chunk. */
-          png_size_t new_size = 0;
-+
-          png_charp text = png_malloc_warn(png_ptr,
-                         prefix_size + expanded_size + 1);
- 
