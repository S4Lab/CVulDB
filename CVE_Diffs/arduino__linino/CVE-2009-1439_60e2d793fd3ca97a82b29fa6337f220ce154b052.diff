arduino__linino
commit 60e2d793fd3ca97a82b29fa6337f220ce154b052
Author:     nico <nico@3c298f89-4303-0410-b956-a3cf2f4a3e73>
AuthorDate: Sun May 3 01:01:44 2009 +0000
Commit:     nico <nico@3c298f89-4303-0410-b956-a3cf2f4a3e73>
CommitDate: Sun May 3 01:01:44 2009 +0000

    [8.09] [CVE-2009-1439] fix Linux kernel buffer overflow in CIFS
    
    
    git-svn-id: svn://svn.openwrt.org/openwrt@15568 3c298f89-4303-0410-b956-a3cf2f4a3e73

diff --git a/branches/8.09/target/linux/generic-2.6/patches-2.6.24/994-cve-2009-1439.patch b/branches/8.09/target/linux/generic-2.6/patches-2.6.24/994-cve-2009-1439.patch
new file mode 100644
index 0000000000..6031efa24f
--- /dev/null
+++ b/branches/8.09/target/linux/generic-2.6/patches-2.6.24/994-cve-2009-1439.patch
@@ -0,0 +1,23 @@
+http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1439
+
+--- a/fs/cifs/connect.c
++++ b/fs/cifs/connect.c
+@@ -3421,16 +3421,13 @@ CIFSTCon(unsigned int xid, struct cifsSe
+ 			    BCC(smb_buffer_response)) {
+ 				kfree(tcon->nativeFileSystem);
+ 				tcon->nativeFileSystem =
+-				    kzalloc(length + 2, GFP_KERNEL);
++				    kzalloc((4 * length) + 2, GFP_KERNEL);
+ 				if (tcon->nativeFileSystem)
+ 					cifs_strfromUCS_le(
+ 						tcon->nativeFileSystem,
+ 						(__le16 *) bcc_ptr,
+ 						length, nls_codepage);
+-				bcc_ptr += 2 * length;
+-				bcc_ptr[0] = 0;	/* null terminate the string */
+-				bcc_ptr[1] = 0;
+-				bcc_ptr += 2;
++				bcc_ptr += (2 * length) + 2;
+ 			}
+ 			/* else do not bother copying these information fields*/
+ 		} else {
diff --git a/branches/8.09/target/linux/generic-2.6/patches-2.6.25/994-cve-2009-1439.patch b/branches/8.09/target/linux/generic-2.6/patches-2.6.25/994-cve-2009-1439.patch
new file mode 100644
index 0000000000..0e9a94eee7
--- /dev/null
+++ b/branches/8.09/target/linux/generic-2.6/patches-2.6.25/994-cve-2009-1439.patch
@@ -0,0 +1,23 @@
+http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1439
+
+--- a/fs/cifs/connect.c
++++ b/fs/cifs/connect.c
+@@ -3467,16 +3467,13 @@ CIFSTCon(unsigned int xid, struct cifsSe
+ 			    BCC(smb_buffer_response)) {
+ 				kfree(tcon->nativeFileSystem);
+ 				tcon->nativeFileSystem =
+-				    kzalloc(length + 2, GFP_KERNEL);
++				    kzalloc((4 * length) + 2, GFP_KERNEL);
+ 				if (tcon->nativeFileSystem)
+ 					cifs_strfromUCS_le(
+ 						tcon->nativeFileSystem,
+ 						(__le16 *) bcc_ptr,
+ 						length, nls_codepage);
+-				bcc_ptr += 2 * length;
+-				bcc_ptr[0] = 0;	/* null terminate the string */
+-				bcc_ptr[1] = 0;
+-				bcc_ptr += 2;
++				bcc_ptr += (2 * length) + 2;
+ 			}
+ 			/* else do not bother copying these information fields*/
+ 		} else {
diff --git a/branches/8.09/target/linux/generic-2.6/patches-2.6.26/994-cve-2009-1439.patch b/branches/8.09/target/linux/generic-2.6/patches-2.6.26/994-cve-2009-1439.patch
new file mode 100644
index 0000000000..044100f932
--- /dev/null
+++ b/branches/8.09/target/linux/generic-2.6/patches-2.6.26/994-cve-2009-1439.patch
@@ -0,0 +1,23 @@
+http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1439
+
+--- a/fs/cifs/connect.c
++++ b/fs/cifs/connect.c
+@@ -3466,16 +3466,13 @@ CIFSTCon(unsigned int xid, struct cifsSe
+ 			    BCC(smb_buffer_response)) {
+ 				kfree(tcon->nativeFileSystem);
+ 				tcon->nativeFileSystem =
+-				    kzalloc(length + 2, GFP_KERNEL);
++				    kzalloc((4 * length) + 2, GFP_KERNEL);
+ 				if (tcon->nativeFileSystem)
+ 					cifs_strfromUCS_le(
+ 						tcon->nativeFileSystem,
+ 						(__le16 *) bcc_ptr,
+ 						length, nls_codepage);
+-				bcc_ptr += 2 * length;
+-				bcc_ptr[0] = 0;	/* null terminate the string */
+-				bcc_ptr[1] = 0;
+-				bcc_ptr += 2;
++				bcc_ptr += (2 * length) + 2;
+ 			}
+ 			/* else do not bother copying these information fields*/
+ 		} else {
