MotorolaMobilityLLC__kernel-msm
commit 67ac3b3834e8374aabb2bf932c024ff6f9faae28
Author:     Ard Biesheuvel <ard.biesheuvel@linaro.org>
AuthorDate: Mon Apr 18 17:09:44 2016 +0200
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Mon Jun 18 11:57:28 2018 -0500

    UPSTREAM: arm64: introduce mov_q macro to move a constant into a 64-bit register
    
    Implement a macro mov_q that can be used to move an immediate constant
    into a 64-bit register, using between 2 and 4 movz/movk instructions
    (depending on the operand)
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-5754
    Bug: 69856074
    
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    (cherry picked from commit 30b5ba5cf333cc650e474eaf2cc1ae91bc7cf89f)
    
    Change-Id: I3f1b4ce25ced9bb678429d538272a85006ed0e16
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Reviewed-on: https://gerrit.mot.com/1132546
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    Reviewed-by: Vijayakumar Gn <vijaygn@motorola.com>

diff --git a/arch/arm64/include/asm/assembler.h b/arch/arm64/include/asm/assembler.h
index c66a176f4ee8..34381f380943 100644
--- a/arch/arm64/include/asm/assembler.h
+++ b/arch/arm64/include/asm/assembler.h
@@ -321,4 +321,24 @@ lr	.req	x30		// link register
 	mrs	\rd, sp_el0
 	.endm
 
+	/*
+	 * mov_q - move an immediate constant into a 64-bit register using
+	 *         between 2 and 4 movz/movk instructions (depending on the
+	 *         magnitude and sign of the operand)
+	 */
+	.macro	mov_q, reg, val
+	.if (((\val) >> 31) == 0 || ((\val) >> 31) == 0x1ffffffff)
+	movz	\reg, :abs_g1_s:\val
+	.else
+	.if (((\val) >> 47) == 0 || ((\val) >> 47) == 0x1ffff)
+	movz	\reg, :abs_g2_s:\val
+	.else
+	movz	\reg, :abs_g3:\val
+	movk	\reg, :abs_g2_nc:\val
+	.endif
+	movk	\reg, :abs_g1_nc:\val
+	.endif
+	movk	\reg, :abs_g0_nc:\val
+	.endm
+
 #endif	/* __ASM_ASSEMBLER_H */
