MotorolaMobilityLLC__kernel-msm
commit 5e611da08b99e27bd1e30c1f9635b8ff482df3cc
Author:     Willem de Bruijn <willemb@google.com>
AuthorDate: Fri Feb 9 19:24:46 2018 +0530
Commit:     Amarendra Reddy <amarenr@motorola.com>
CommitDate: Mon Feb 19 05:49:20 2018 -0600

    packet: in packet_do_bind, test fanout with bind_lock held
    
    Once a socket has po->fanout set, it remains a member of the group
    until it is destroyed. The prot_hook must be constant and identical
    across sockets in the group.
    
    If fanout_add races with packet_do_bind between the test of po->fanout
    and taking the lock, the bind call may make type or dev inconsistent
    with that of the fanout group.
    
    Hold po->bind_lock when testing po->fanout to avoid this race.
    
    I had to introduce artificial delay (local_bh_enable) to actually
    observe the race.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-15649
    BUG: 69160446
    
    Change-Id: I79efccf678611cb4eb2ae7b0745dafff1d5152a1
    Fixes: dc99f600698d ("packet: Add fanout support.")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1135382
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index 679260e29b9d..533adcdc8008 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -2683,13 +2683,15 @@ static int packet_do_bind(struct sock *sk, const char *name, int ifindex,
 	int ret = 0;
 	bool unlisted = false;
 
-	if (po->fanout)
-		return -EINVAL;
-
 	lock_sock(sk);
 	spin_lock(&po->bind_lock);
 	rcu_read_lock();
 
+	if (po->fanout) {
+		ret = -EINVAL;
+		goto out_unlock;
+	}
+
 	if (name) {
 		dev = dev_get_by_name_rcu(sock_net(sk), name);
 		if (!dev) {
