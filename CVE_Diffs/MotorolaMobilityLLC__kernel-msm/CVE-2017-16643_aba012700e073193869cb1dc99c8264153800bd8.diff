MotorolaMobilityLLC__kernel-msm
commit aba012700e073193869cb1dc99c8264153800bd8
Author:     Dmitry Torokhov <dmitry.torokhov@gmail.com>
AuthorDate: Tue Oct 24 09:39:43 2017 -0700
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Wed Jun 27 03:27:25 2018 -0500

    Input: gtco - fix potential out-of-bound access
    
    parse_hid_report_descriptor() has a while (i < length) loop, which
    only guarantees that there's at least 1 byte in the buffer, but the
    loop body can read multiple bytes which causes out-of-bounds access.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-16643
    Bug: 69916367
    
    Change-Id: I87202a0741eeeaf49f71aafed090f45771832f9e
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Reviewed-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Reviewed-on: https://gerrit.mot.com/1165450
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit 7119305783f750b06429fad6412a344d16e1076f)
    (cherry picked from commit b3fe5dbc65c1d63f4a19285f793c8fc5c0f8def0)

diff --git a/drivers/input/tablet/gtco.c b/drivers/input/tablet/gtco.c
index a51de543a0b2..c1181cb0dcfe 100644
--- a/drivers/input/tablet/gtco.c
+++ b/drivers/input/tablet/gtco.c
@@ -231,13 +231,17 @@ static void parse_hid_report_descriptor(struct gtco *device, char * report,
 
 	/* Walk  this report and pull out the info we need */
 	while (i < length) {
-		prefix = report[i];
-
-		/* Skip over prefix */
-		i++;
+		prefix = report[i++];
 
 		/* Determine data size and save the data in the proper variable */
-		size = PREF_SIZE(prefix);
+		size = (1U << PREF_SIZE(prefix)) >> 1;
+		if (size && i + size >= length) {
+			dev_err(ddev,
+				"Not enough data (need %d, have %d)\n",
+				i + size, length);
+			break;
+		}
+
 		switch (size) {
 		case 1:
 			data = report[i];
@@ -245,8 +249,7 @@ static void parse_hid_report_descriptor(struct gtco *device, char * report,
 		case 2:
 			data16 = get_unaligned_le16(&report[i]);
 			break;
-		case 3:
-			size = 4;
+		case 4:
 			data32 = get_unaligned_le32(&report[i]);
 			break;
 		}
