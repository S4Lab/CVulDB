MotorolaMobilityLLC__kernel-msm
commit 5624381e3dfb3478bf49a03e26a59b305e566dd1
Author:     Varun Shrivastava <varunshrivastava@motorola.com>
AuthorDate: Tue Jul 11 12:37:11 2017 +0530
Commit:     Sumanth K <sumanthk@motorola.com>
CommitDate: Thu Aug 10 07:32:18 2017 -0500

    qcdev: Check the digest length during the SHA operations
    
    Check the digest length to avoid buffer overflow while
    doing the SHA operations.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-0751
    
    Signed-off-by: Varun Shrivastava <varunshrivastava@motorola.com>
    Change-Id: I744708ece058b50e10113c7704cab55fc8f547a6
    Reviewed-on: https://gerrit.mot.com/1024805
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit 29a476dd2d137bfbe9aab569ccc89ac1e9ac353f)
    Reviewed-on: https://gerrit.mot.com/1039235
    Reviewed-by: Sindhu C <a12924@motorola.com>
    SLTApproved: Sindhu C <a12924@motorola.com>

diff --git a/drivers/crypto/msm/qcedev.c b/drivers/crypto/msm/qcedev.c
index 1bfbe7c1fa3d..f508a088eecf 100644
--- a/drivers/crypto/msm/qcedev.c
+++ b/drivers/crypto/msm/qcedev.c
@@ -1736,6 +1736,12 @@ long qcedev_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 		err = qcedev_hash_final(&qcedev_areq, handle);
 		if (err)
 			return err;
+
+		if (handle->sha_ctxt.diglen > QCEDEV_MAX_SHA_DIGEST) {
+			pr_err("Invalid sha_ctxt.diglen %d\n",
+					handle->sha_ctxt.diglen);
+			return -EINVAL;
+		}
 		qcedev_areq.sha_op_req.diglen = handle->sha_ctxt.diglen;
 		memcpy(&qcedev_areq.sha_op_req.digest[0],
 				&handle->sha_ctxt.digest[0],
@@ -1764,6 +1770,12 @@ long qcedev_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 		err = qcedev_hash_final(&qcedev_areq, handle);
 		if (err)
 			return err;
+
+		if (handle->sha_ctxt.diglen > QCEDEV_MAX_SHA_DIGEST) {
+			pr_err("Invalid sha_ctxt.diglen %d\n",
+					handle->sha_ctxt.diglen);
+			return -EINVAL;
+		}
 		qcedev_areq.sha_op_req.diglen =	handle->sha_ctxt.diglen;
 		memcpy(&qcedev_areq.sha_op_req.digest[0],
 				&handle->sha_ctxt.digest[0],
