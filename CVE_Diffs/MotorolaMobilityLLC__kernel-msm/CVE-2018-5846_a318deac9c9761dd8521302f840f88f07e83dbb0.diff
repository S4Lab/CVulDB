MotorolaMobilityLLC__kernel-msm
commit a318deac9c9761dd8521302f840f88f07e83dbb0
Author:     Mohammed Javid <mjavid@codeaurora.org>
AuthorDate: Tue Oct 3 13:10:05 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Fri Jun 15 06:05:19 2018 -0500

    msm: ipa: Fix use after free issue
    
    Added code changes to avoid use after free
    by having local copy and
    cache it upon successful return.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2018-5846
    CRs-Fixed: 2120063
    Bug: 71501683
    
    Change-Id: I2e35f0f27c1792b14d04de8d13966333966a4286
    Acked-by: Pooja Kumari <kumarip@qti.qualcomm.com>
    Signed-off-by: Mohammed Javid <mjavid@codeaurora.org>
    Reviewed-on: https://gerrit.mot.com/1165419
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/platform/msm/ipa/ipa_v2/ipa.c b/drivers/platform/msm/ipa/ipa_v2/ipa.c
index b25d18018f84..b6a8c41a7704 100644
--- a/drivers/platform/msm/ipa/ipa_v2/ipa.c
+++ b/drivers/platform/msm/ipa/ipa_v2/ipa.c
@@ -543,6 +543,7 @@ static int ipa_send_wan_msg(unsigned long usr_param, uint8_t msg_type)
 	int retval;
 	struct ipa_wan_msg *wan_msg;
 	struct ipa_msg_meta msg_meta;
+	struct ipa_wan_msg cache_wan_msg;
 
 	wan_msg = kzalloc(sizeof(struct ipa_wan_msg), GFP_KERNEL);
 	if (!wan_msg) {
@@ -556,6 +557,8 @@ static int ipa_send_wan_msg(unsigned long usr_param, uint8_t msg_type)
 		return -EFAULT;
 	}
 
+	memcpy(&cache_wan_msg, wan_msg, sizeof(cache_wan_msg));
+
 	memset(&msg_meta, 0, sizeof(struct ipa_msg_meta));
 	msg_meta.msg_type = msg_type;
 	msg_meta.msg_len = sizeof(struct ipa_wan_msg);
diff --git a/drivers/platform/msm/ipa/ipa_v3/ipa.c b/drivers/platform/msm/ipa/ipa_v3/ipa.c
index 35d5db7647e8..a0e5a370349e 100644
--- a/drivers/platform/msm/ipa/ipa_v3/ipa.c
+++ b/drivers/platform/msm/ipa/ipa_v3/ipa.c
@@ -609,6 +609,7 @@ static int ipa3_send_wan_msg(unsigned long usr_param, uint8_t msg_type)
 	int retval;
 	struct ipa_wan_msg *wan_msg;
 	struct ipa_msg_meta msg_meta;
+	struct ipa_wan_msg cache_wan_msg;
 
 	wan_msg = kzalloc(sizeof(struct ipa_wan_msg), GFP_KERNEL);
 	if (!wan_msg) {
@@ -622,6 +623,8 @@ static int ipa3_send_wan_msg(unsigned long usr_param, uint8_t msg_type)
 		return -EFAULT;
 	}
 
+	memcpy(&cache_wan_msg, wan_msg, sizeof(cache_wan_msg));
+
 	memset(&msg_meta, 0, sizeof(struct ipa_msg_meta));
 	msg_meta.msg_type = msg_type;
 	msg_meta.msg_len = sizeof(struct ipa_wan_msg);
