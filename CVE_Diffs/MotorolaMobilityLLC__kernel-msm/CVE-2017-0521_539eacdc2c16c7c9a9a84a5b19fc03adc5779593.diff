MotorolaMobilityLLC__kernel-msm
commit 539eacdc2c16c7c9a9a84a5b19fc03adc5779593
Author:     Kumar Behera <mohanb@codeaurora.org>
AuthorDate: Fri Dec 9 09:55:00 2016 -0800
Commit:     a7301c <a7301c@motorola.com>
CommitDate: Fri Sep 21 11:22:43 2018 -0500

    msm: cpp: Fix for integer overflow in cpp
    
    Due to integer overflow ,the bound check in config frame function
    may pass and this may allow user to access invalid buffer. This
    fix takes care of proper bound and don't allow integer overflow.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-0521
    CRs-Fxied: 1097709
    
    Change-Id: I16f9543735bac8266e211eee1a609b4ab4f6359d
    Signed-off-by: Kumar Behera <mohanb@codeaurora.org>
    Signed-off-by: Srikanth A R <arsrikan@motorola.com>
    Reviewed-on: https://gerrit.mot.com/950698
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c b/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c
index 736fd42e17a7..bae99da9d030 100644
--- a/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c
+++ b/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c
@@ -2245,7 +2245,7 @@ static int msm_cpp_cfg_frame(struct cpp_device *cpp_dev,
 	struct msm_buf_mngr_info buff_mgr_info, dup_buff_mgr_info;
 	int32_t in_fd;
 	int32_t num_output_bufs = 1;
-	int32_t stripe_base = 0;
+	uint32_t stripe_base = 0;
 	uint32_t stripe_size;
 	uint8_t tnr_enabled;
 	enum msm_camera_buf_mngr_buf_type buf_type =
@@ -2280,6 +2280,13 @@ static int msm_cpp_cfg_frame(struct cpp_device *cpp_dev,
 		return -EINVAL;
 	}
 
+	if (stripe_base == UINT_MAX || new_frame->num_strips >
+		(UINT_MAX - 1 - stripe_base) / stripe_size) {
+		pr_err("Invalid frame message,num_strips %d is large\n",
+			new_frame->num_strips);
+		return -EINVAL;
+	}
+
 	if ((stripe_base + new_frame->num_strips * stripe_size + 1) !=
 		new_frame->msg_len) {
 		pr_err("Invalid frame message,len=%d,expected=%d\n",
