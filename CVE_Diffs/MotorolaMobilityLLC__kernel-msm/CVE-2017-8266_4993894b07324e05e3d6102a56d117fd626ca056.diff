MotorolaMobilityLLC__kernel-msm
commit 4993894b07324e05e3d6102a56d117fd626ca056
Author:     Harsh Sahu <hsahu@codeaurora.org>
AuthorDate: Thu Apr 13 15:38:46 2017 -0700
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Wed Aug 2 05:24:43 2017 -0500

    msm: mdss: fix race condition during mdp debugfs release
    
    Fix race condition in the release of the mdp debugfs functions
    panel_debug_base_release and mdss_debug_base_release by adding
    the lock for unpreempted freeing of the buffer so that multiple
    concurrent processes cannot affect the release which can possibly
    lead to use-after-free operation on the buffer.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-8266
    
    Change-Id: I9586081b65ae2eb0e7f6e30c606ee748ae9ef7e8
    Signed-off-by: Harsh Sahu <hsahu@codeaurora.org>
    Signed-off-by: Ashwin Pathmudi <jfxr63@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1015174
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Bang Nguyen <bangnguyen@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/video/msm/mdss/mdss_debug.c b/drivers/video/msm/mdss/mdss_debug.c
index 18ef2d8fafdb..452acbf390c8 100644
--- a/drivers/video/msm/mdss/mdss_debug.c
+++ b/drivers/video/msm/mdss/mdss_debug.c
@@ -55,11 +55,13 @@ static int panel_debug_base_open(struct inode *inode, struct file *file)
 static int panel_debug_base_release(struct inode *inode, struct file *file)
 {
 	struct mdss_debug_base *dbg = file->private_data;
+	mutex_lock(&mdss_debug_lock);
 	if (dbg && dbg->buf) {
 		kfree(dbg->buf);
 		dbg->buf_len = 0;
 		dbg->buf = NULL;
 	}
+	mutex_unlock(&mdss_debug_lock);
 	return 0;
 }
 
@@ -378,11 +380,13 @@ static int mdss_debug_base_open(struct inode *inode, struct file *file)
 static int mdss_debug_base_release(struct inode *inode, struct file *file)
 {
 	struct mdss_debug_base *dbg = file->private_data;
+	mutex_lock(&mdss_debug_lock);
 	if (dbg && dbg->buf) {
 		kfree(dbg->buf);
 		dbg->buf_len = 0;
 		dbg->buf = NULL;
 	}
+	mutex_unlock(&mdss_debug_lock);
 	return 0;
 }
 
