MotorolaMobilityLLC__kernel-msm
commit b77e22e946bab9e48f0ffa08c8efbe1137328bb3
Author:     Willem de Bruijn <willemb@google.com>
AuthorDate: Mon Feb 12 11:18:52 2018 +0530
Commit:     a7301c <a7301c@motorola.com>
CommitDate: Sun Apr 15 23:23:39 2018 -0500

    [net] packet: fix tp_reserve race in packet_set_ring
    
    Updates to tp_reserve can race with reads of the field in
    packet_set_ring. Avoid this by holding the socket lock during
    updates in setsockopt PACKET_RESERVE.
    
    This bug was discovered by syzkaller.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-1000111
    BUG: 68806121
    
    Change-Id: Iff450c618e7fdd9235545d68f7a1a6e92bb3b22e
    Fixes: 8913336a7e8d ("packet: add PACKET_RESERVE sockopt")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1135415
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index e72b4655c97c..74746c3e041d 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -3173,14 +3173,19 @@ packet_setsockopt(struct socket *sock, int level, int optname, char __user *optv
 
 		if (optlen != sizeof(val))
 			return -EINVAL;
-		if (po->rx_ring.pg_vec || po->tx_ring.pg_vec)
-			return -EBUSY;
 		if (copy_from_user(&val, optval, sizeof(val)))
 			return -EFAULT;
 		if (val > INT_MAX)
 			return -EINVAL;
-		po->tp_reserve = val;
-		return 0;
+		lock_sock(sk);
+		if (po->rx_ring.pg_vec || po->tx_ring.pg_vec) {
+			ret = -EBUSY;
+		} else {
+			po->tp_reserve = val;
+			ret = 0;
+		}
+		release_sock(sk);
+		return ret;
 	}
 	case PACKET_LOSS:
 	{
