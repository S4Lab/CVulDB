MotorolaMobilityLLC__kernel-msm
commit e3e3a8afe9fb924724088e9cc28c69776c9790ab
Author:     Martijn Coenen <maco@android.com>
AuthorDate: Tue Jul 9 13:09:23 2019 +0200
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Thu Nov 14 02:05:50 2019 -0600

    BACKPORT: binder: Set end of SG buffer area properly.
    
    In case the target node requests a security context, the
    extra_buffers_size is increased with the size of the security context.
    But, that size is not available for use by regular scatter-gather
    buffers; make sure the ending of that buffer is marked correctly.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2019-2214
    Bug: 136210786
    
    Acked-by: Todd Kjos <tkjos@google.com>
    Fixes: ec74136ded79 ("binder: create node flag to request sender's security context")
    Signed-off-by: Martijn Coenen <maco@android.com>
    Cc: stable@vger.kernel.org # 5.1+
    Link: https://lore.kernel.org/r/20190709110923.220736-1-maco@android.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    (cherry picked from commit a56587065094fd96eb4c2b5ad65571daad32156d)
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    
    Change-Id: I3900e81c137255157c24f7a4ae12ac92854c99e0
    Reviewed-on: https://gerrit.mot.com/1434251
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Ling Jin <lingjin@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/staging/android/binder.c b/drivers/staging/android/binder.c
index e87c1bb9d9f5..7c54c3947f08 100644
--- a/drivers/staging/android/binder.c
+++ b/drivers/staging/android/binder.c
@@ -3221,7 +3221,8 @@ static void binder_transaction(struct binder_proc *proc,
 	}
 	off_end = (void *)off_start + tr->offsets_size;
 	sg_bufp = (u8 *)(PTR_ALIGN(off_end, sizeof(void *)));
-	sg_buf_end = sg_bufp + extra_buffers_size;
+	sg_buf_end = sg_bufp + extra_buffers_size -
+		ALIGN(secctx_sz, sizeof(u64));
 	off_min = 0;
 	for (; offp < off_end; offp++) {
 		struct binder_object_header *hdr;
