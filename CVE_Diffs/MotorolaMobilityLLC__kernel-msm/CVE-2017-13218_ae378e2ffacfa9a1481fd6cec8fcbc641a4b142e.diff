MotorolaMobilityLLC__kernel-msm
commit ae378e2ffacfa9a1481fd6cec8fcbc641a4b142e
Author:     Marc Zyngier <marc.zyng...@arm.com>
AuthorDate: Thu Dec 28 13:10:23 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Sat Feb 3 02:35:46 2018 -0600

    ARM: Handle trapping of CNTVCT from userspace
    
    As we're about to enable trapping of some of the userspace-visible
    timer registers, let's add a handler for CNTVCT.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-13218
    Bug: 68266545
    
    Change-Id: I7032d6a98b5d71df13fd7bf5968b2887fe39416f
    Signed-off-by: Marc Zyngier <marc.zyng...@arm.com>
    Signed-off-by: amarenr <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1110767
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm/kernel/traps.c b/arch/arm/kernel/traps.c
index 80465bcc0444..a0609213dc53 100644
--- a/arch/arm/kernel/traps.c
+++ b/arch/arm/kernel/traps.c
@@ -800,6 +800,34 @@ void __bad_xchg(volatile void *ptr, int size)
 }
 EXPORT_SYMBOL(__bad_xchg);
 
+#ifdef CONFIG_ARM_ARCH_TIMER
+static int read_cntvct_trap(struct pt_regs *regs, unsigned int instr)
+{
+	int rt  = (instr >> 12) & 15;
+	int rt2 = (instr >> 16) & 15;
+	u64 val = arch_counter_get_cntvct_cp15();
+
+	regs->uregs[rt]  = lower_32_bits(val);
+	regs->uregs[rt2] = upper_32_bits(val);
+	regs->ARM_pc += 4;
+	return 0;
+}
+
+static struct undef_hook cntvct_hook = {
+	.instr_mask     = 0x0ff00fff,
+	.instr_val      = 0x0c500f1e,
+	.fn             = read_cntvct_trap,
+};
+
+static int __init arch_timer_hook_init(void)
+{
+	register_undef_hook(&cntvct_hook);
+	return 0;
+}
+
+late_initcall(arch_timer_hook_init);
+#endif
+
 /*
  * A data abort trap was taken, but we did not handle the instruction.
  * Try to abort the user program, or panic if it was the kernel.
