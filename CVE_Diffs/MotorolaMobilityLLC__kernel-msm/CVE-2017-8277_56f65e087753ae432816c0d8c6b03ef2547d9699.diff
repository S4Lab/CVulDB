MotorolaMobilityLLC__kernel-msm
commit 56f65e087753ae432816c0d8c6b03ef2547d9699
Author:     Sandeep Panda <spanda@codeaurora.org>
AuthorDate: Fri May 12 10:56:32 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Tue Oct 31 00:45:31 2017 -0500

    msm: mdss: remove client from device list if failed to register
    
    If there is any failure while registering a DBA client with MDSS
    driver, then remove the client from device client list first and
    then free the client. Otherwise driver might crash when
    traversing the device client list in later stage, because of an
    uninitialized entry in the list.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-8277
    
    Change-Id: I60666f4c3dea5c7ea7b7c77bcb14b080ee25b54d
    Signed-off-by: Sandeep Panda <spanda@codeaurora.org>
    Signed-off-by: Ashwin Pathmudi <jfxr63@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1044671
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit d07618db514f6ec59ef86f6b650e23ae1fa5d140)

diff --git a/drivers/video/msm/msm_dba/msm_dba.c b/drivers/video/msm/msm_dba/msm_dba.c
index d10100927be1..c99ede954406 100644
--- a/drivers/video/msm/msm_dba/msm_dba.c
+++ b/drivers/video/msm/msm_dba/msm_dba.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2015, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2015,2017, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -81,6 +81,11 @@ void *msm_dba_register_client(struct msm_dba_reg_info *info,
 		if (rc) {
 			pr_err("%s: Client register failed (%s, %d)\n",
 			       __func__, info->chip_name, info->instance_id);
+			/* remove the client from list before freeing */
+			mutex_lock_nested(&device->dev_mutex,
+						SINGLE_DEPTH_NESTING);
+			list_del(&client->list);
+			mutex_unlock(&device->dev_mutex);
 			kfree(client);
 			mutex_unlock(&register_mutex);
 			return ERR_PTR(rc);
