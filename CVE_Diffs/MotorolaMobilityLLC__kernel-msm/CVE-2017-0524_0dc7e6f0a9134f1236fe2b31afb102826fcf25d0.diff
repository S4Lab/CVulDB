MotorolaMobilityLLC__kernel-msm
commit 0dc7e6f0a9134f1236fe2b31afb102826fcf25d0
Author:     Ashwin Pathmudi <jfxr63@motorola.com>
AuthorDate: Wed Feb 15 17:08:39 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Tue May 2 05:50:47 2017 -0500

    input: synaptics_dsx: Place file offset validity checks under mutex
    
    Mot-CRs-fixed: (CR), (CR)
    CVE-Fixed: CVE-2017-0524, CVE-2017-0536
    BUG: 33555878
    BUG: 33002026
    
    Change-Id: Iea4f6ca33eeb1135ccc2ac6b69aee5a94d599cca
    Signed-off-by: Ashwin Pathmudi <jfxr63@motorola.com>
    Reviewed-on: https://gerrit.mot.com/951708
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    Reviewed-by: Konstantin Makariev <kmakariev@motorola.com>

diff --git a/drivers/input/touchscreen/synaptics_dsx_rmi_dev.c b/drivers/input/touchscreen/synaptics_dsx_rmi_dev.c
index 1868d12edf07..a6ec93082a80 100644
--- a/drivers/input/touchscreen/synaptics_dsx_rmi_dev.c
+++ b/drivers/input/touchscreen/synaptics_dsx_rmi_dev.c
@@ -363,16 +363,26 @@ static ssize_t rmidev_read(struct file *filp, char __user *buf,
 		return -EBADF;
 	}
 
-	if (count == 0)
-		return 0;
+	mutex_lock(&(dev_data->file_mutex));
 
 	if (count > (REG_ADDR_LIMIT - *f_pos))
 		count = REG_ADDR_LIMIT - *f_pos;
 
-	mutex_lock(&(dev_data->file_mutex));
 
-	if (dev_data->tmpbuf_size < count && alloc_tmpbuf(filp, count) != 0)
-		return -ENOMEM;
+	if (count == 0) {
+		retval = 0;
+		goto clean_up;
+	}
+
+	if (*f_pos > REG_ADDR_LIMIT) {
+		retval = -EFAULT;
+		goto clean_up;
+	}
+
+	if (dev_data->tmpbuf_size < count && alloc_tmpbuf(filp, count) != 0) {
+		retval = -ENOMEM;
+		goto clean_up;
+	}
 
 	retval = rmidev->fn_ptr->read(rmidev->rmi4_data,
 			*f_pos,
@@ -410,13 +420,20 @@ static ssize_t rmidev_write(struct file *filp, const char __user *buf,
 		return -EBADF;
 	}
 
-	if (count == 0)
-		return 0;
+	mutex_lock(&(dev_data->file_mutex));
 
 	if (count > (REG_ADDR_LIMIT - *f_pos))
 		count = REG_ADDR_LIMIT - *f_pos;
 
-	mutex_lock(&(dev_data->file_mutex));
+	if (count == 0) {
+		retval = 0;
+		goto clean_up;
+	}
+
+	if (*f_pos > REG_ADDR_LIMIT) {
+		retval = -EFAULT;
+		goto clean_up;
+	}
 
 	if (dev_data->tmpbuf_size < count && alloc_tmpbuf(filp, count) != 0) {
 		retval = -ENOMEM;
