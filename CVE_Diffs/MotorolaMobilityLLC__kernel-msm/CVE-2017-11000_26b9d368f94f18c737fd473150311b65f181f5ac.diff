MotorolaMobilityLLC__kernel-msm
commit 26b9d368f94f18c737fd473150311b65f181f5ac
Author:     Gaoxiang Chen <gaochen@codeaurora.org>
AuthorDate: Wed May 17 15:14:36 2017 +0800
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Mon Mar 12 16:31:50 2018 +0800

    msm: camera: fix off-by-one overflow in msm_isp_get_bufq
    
    In msm_isp_get_bufq, if bufq_index equals buf_mgr->num_buf_q,
    it will pass the check, leading to off-by-one overflow
    (exceed the length of array by one element).
    
    CRs-Fixed: 2031677
    Bug: 36136563
    CVE-fixed: CVE-2017-11000
    Mot-CRs-fixed: (CR)
    
    Change-Id: I7ea465897e2c37de6ca0155c3e225f1444b3cf13
    Signed-off-by: Gaoxiang Chen <gaochen@codeaurora.org>
    Signed-off-by: Srikanth A R <arsrikan@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1043224
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/media/platform/msm/camera_v2/isp/msm_buf_mgr.c b/drivers/media/platform/msm/camera_v2/isp/msm_buf_mgr.c
index 0951acc5b88c..657cb08c2fcc 100644
--- a/drivers/media/platform/msm/camera_v2/isp/msm_buf_mgr.c
+++ b/drivers/media/platform/msm/camera_v2/isp/msm_buf_mgr.c
@@ -87,7 +87,7 @@ struct msm_isp_bufq *msm_isp_get_bufq(
 	/* bufq_handle cannot be 0 */
 	if ((bufq_handle == 0) ||
 		bufq_index >= BUF_MGR_NUM_BUF_Q ||
-		(bufq_index > buf_mgr->num_buf_q))
+		(bufq_index >= buf_mgr->num_buf_q))
 		return NULL;
 
 	bufq = &buf_mgr->bufq[bufq_index];
diff --git a/drivers/media/platform/msm/camera_v2_2016/isp/msm_buf_mgr.c b/drivers/media/platform/msm/camera_v2_2016/isp/msm_buf_mgr.c
index cbeb0f8b64df..795b9322570e 100644
--- a/drivers/media/platform/msm/camera_v2_2016/isp/msm_buf_mgr.c
+++ b/drivers/media/platform/msm/camera_v2_2016/isp/msm_buf_mgr.c
@@ -87,7 +87,7 @@ struct msm_isp_bufq *msm_isp_get_bufq(
 	/* bufq_handle cannot be 0 */
 	if ((bufq_handle == 0) ||
 		bufq_index >= BUF_MGR_NUM_BUF_Q ||
-		(bufq_index > buf_mgr->num_buf_q))
+		(bufq_index >= buf_mgr->num_buf_q))
 		return NULL;
 
 	bufq = &buf_mgr->bufq[bufq_index];
