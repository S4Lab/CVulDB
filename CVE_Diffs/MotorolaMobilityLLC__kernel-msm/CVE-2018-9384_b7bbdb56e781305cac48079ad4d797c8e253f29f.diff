MotorolaMobilityLLC__kernel-msm
commit b7bbdb56e781305cac48079ad4d797c8e253f29f
Author:     Mark Rutland <mark.rutland@arm.com>
AuthorDate: Thu Nov 3 20:23:09 2016 +0000
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Fri Dec 6 15:30:25 2019 +0800

    BACKPORT: arm64: move sp_el0 and tpidr_el1 into cpu_suspend_ctx
    
    When returning from idle, we rely on the fact that thread_info lives at
    the end of the kernel stack, and restore this by masking the saved stack
    pointer. Subsequent patches will sever the relationship between the
    stack and thread_info, and to cater for this we must save/restore sp_el0
    explicitly, storing it in cpu_suspend_ctx.
    
    As cpu_suspend_ctx must be doubleword aligned, this leaves us with an
    extra slot in cpu_suspend_ctx. We can use this to save/restore tpidr_el1
    in the same way, which simplifies the code, avoiding pointer chasing on
    the restore path (as we no longer need to load thread_info::cpu followed
    by the relevant slot in __per_cpu_offset based on this).
    
    This patch stashes both registers in cpu_suspend_ctx.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2018-9384
    Bug: 74356909
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    
    This is a modification of Mark Rutland's oriGinal patch. The differences
    from the oriGinal patch are as follows :-
            - NR_CTX_REGS is set to 13 instead of 12
            - x13 and x14 are used as temporary registers to hold sp_el0 and
              tpidr_el1 instead of x11 and x12.
            - The values are temporarily stashed at offset 88 and 96 of
              cpu_suspend_ctx instead of 80 and 88.
    
    The oriGinal patch would not apply cleanly and these changes were made
    to resolve this.
    
    Bug: 66351489
    Change-Id: Ib0046d786da366113f3a87090516ba52fa6a22b0
    (cherry picked from commit 623b476fc815464a0241ea7483da7b3580b7d8ac)
    Signed-off-by: Zubin Mithra <zsm@google.com>
    Reviewed-on: https://gerrit.mot.com/1181658
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm64/include/asm/suspend.h b/arch/arm64/include/asm/suspend.h
index 456d67c1f0fa..7bf8fadcfdb6 100644
--- a/arch/arm64/include/asm/suspend.h
+++ b/arch/arm64/include/asm/suspend.h
@@ -1,7 +1,7 @@
 #ifndef __ASM_SUSPEND_H
 #define __ASM_SUSPEND_H
 
-#define NR_CTX_REGS 11
+#define NR_CTX_REGS 13
 
 /*
  * struct cpu_suspend_ctx must be 16-byte aligned since it is allocated on
diff --git a/arch/arm64/mm/proc.S b/arch/arm64/mm/proc.S
index 3cbf35a95821..899f4a9477fa 100644
--- a/arch/arm64/mm/proc.S
+++ b/arch/arm64/mm/proc.S
@@ -67,12 +67,15 @@ ENTRY(cpu_do_suspend)
 	mrs	x10, mdscr_el1
 	mrs	x11, oslsr_el1
 	mrs	x12, sctlr_el1
+	mrs	x13, tpidr_el1
+	mrs	x14, sp_el0
 	stp	x2, x3, [x0]
 	stp	x4, x5, [x0, #16]
 	stp	x6, x7, [x0, #32]
 	stp	x8, x9, [x0, #48]
 	stp	x10, x11, [x0, #64]
-	str	x12, [x0, #80]
+	stp	x12, x13, [x0, #80]
+	str	x14, [x0, #96]
 	ret
 ENDPROC(cpu_do_suspend)
 
@@ -95,7 +98,8 @@ ENTRY(cpu_do_resume)
 	ldp	x6, x7, [x0, #32]
 	ldp	x8, x9, [x0, #48]
 	ldp	x10, x11, [x0, #64]
-	ldr	x12, [x0, #80]
+	ldp	x12, x13, [x0, #80]
+	ldr	x14, [x0, #96]
 	msr	tpidr_el0, x2
 	msr	tpidrro_el0, x3
 	msr	contextidr_el1, x4
@@ -107,6 +111,8 @@ ENTRY(cpu_do_resume)
 	msr	tcr_el1, x8
 	msr	vbar_el1, x9
 	msr	mdscr_el1, x10
+	msr	tpidr_el1, x13
+	msr	sp_el0, x14
 	/*
 	 * Restore oslsr_el1 by writing oslar_el1
 	 */
