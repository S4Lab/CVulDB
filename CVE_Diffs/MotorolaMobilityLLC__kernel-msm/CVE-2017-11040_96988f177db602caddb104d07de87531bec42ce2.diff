MotorolaMobilityLLC__kernel-msm
commit 96988f177db602caddb104d07de87531bec42ce2
Author:     Ashish Garg <ashigarg@codeaurora.org>
AuthorDate: Thu May 25 16:47:43 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Wed Oct 4 06:20:26 2017 -0500

    msm: mdss: validate number of cea blocks before reading from edid_buf
    
    Number of cea blocks are read from edid buffer which comes from the
    user. If the number of cea blocks are more than the supported blocks
    kernel information leak is possible by reading more data than is
    present in edid_buf.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-11040
    
    Change-Id: I03b8456ff1e1a7b15d711f06908bd5c83f83cc02
    Signed-off-by: Ashish Garg <ashigarg@codeaurora.org>
    Signed-off-by: Ashwin Pathmudi <jfxr63@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1044673
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/video/msm/mdss/mdss_hdmi_tx.c b/drivers/video/msm/mdss/mdss_hdmi_tx.c
index 25854a6c3c48..99f4680c880f 100644
--- a/drivers/video/msm/mdss/mdss_hdmi_tx.c
+++ b/drivers/video/msm/mdss/mdss_hdmi_tx.c
@@ -605,6 +605,11 @@ static ssize_t hdmi_tx_sysfs_rda_edid(struct device *dev,
 
 	mutex_lock(&hdmi_ctrl->tx_lock);
 	cea_blks = hdmi_ctrl->edid_buf[EDID_BLOCK_SIZE - 2];
+	if (cea_blks >= MAX_EDID_BLOCKS) {
+		DEV_ERR("%s: invalid cea blocks\n", __func__);
+		mutex_unlock(&hdmi_ctrl->tx_lock);
+		return -EINVAL;
+	}
 	size = (cea_blks + 1) * EDID_BLOCK_SIZE;
 	size = min_t(u32, size, PAGE_SIZE);
 
