MotorolaMobilityLLC__kernel-msm
commit 2152d892c247c4f9fd4cb5c90e3017eddf9c47c6
Author:     Rainer Weikusat <rweikusat@mobileactivedefense.com>
AuthorDate: Thu Oct 6 14:28:53 2016 +0530
Commit:     a7301c <a7301c@motorola.com>
CommitDate: Wed Nov 2 14:34:03 2016 -0500

    af_unix: Guard against other == sk in unix_dgram_sendmsg
    
    The unix_dgram_sendmsg routine use the following test
    
    if (unlikely(unix_peer(other) != sk && unix_recvq_full(other))) {
    
    to determine if sk and other are in an n:1 association (either
    established via connect or by using sendto to send messages to an
    unrelated socket identified by address). This isn't correct as the
    specified address could have been bound to the sending socket itself or
    because this socket could have been connected to itself by the time of
    the unix_peer_get but disconnected before the unix_state_lock(other). In
    both cases, the if-block would be entered despite other == sk which
    might either block the sender unintentionally or lead to trying to unlock
    the same spin lock twice for a non-blocking send. Add a other != sk
    check to guard against this.
    
    Mot-CRs-fixed: IKSECURITY-1619
    CVE-Fixed:CVE-2013-7446
    
    Fixes: 7d267278a9ec ("unix: avoid use-after-free in ep_remove_wait_queue")
    Reported-By: Philipp Hahn <pmhahn@pmhahn.de>
    Signed-off-by: Rainer Weikusat <rweikusat@mobileactivedefense.com>
    Tested-by: Philipp Hahn <pmhahn@pmhahn.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    
    Change-Id: Id684e215f4777af7c0ea7962f0d6de8953e73b26
    Reviewed-on: https://gerrit.mot.com/906544
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Vijayakumar Gn <vijaygn@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit d4ca81e80f8220f755f96e65c8e96beb7557fc09)
    Reviewed-on: https://gerrit.mot.com/908985

diff --git a/net/unix/af_unix.c b/net/unix/af_unix.c
index 67dc2175ff39..3e2eec6437d5 100644
--- a/net/unix/af_unix.c
+++ b/net/unix/af_unix.c
@@ -1724,7 +1724,12 @@ restart_locked:
 			goto out_unlock;
 	}
 
-	if (unlikely(unix_peer(other) != sk && unix_recvq_full(other))) {
+	/* other == sk && unix_peer(other) != sk if
+	 * - unix_peer(sk) == NULL, destination address bound to sk
+	 * - unix_peer(sk) == sk by time of get but disconnected before lock
+	 */
+	if (other != sk &&
+	    unlikely(unix_peer(other) != sk && unix_recvq_full(other))) {
 		if (timeo) {
 			timeo = unix_wait_for_peer(other, timeo);
 
