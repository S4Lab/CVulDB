MotorolaMobilityLLC__kernel-msm
commit 65431dc5a24c51eddf8ea6a75f8d483d557be48d
Author:     Divya Ponnusamy <pdivya@codeaurora.org>
AuthorDate: Wed Aug 24 17:06:54 2016 +0530
Commit:     Carlos Pinho <cpinho@motorola.com>
CommitDate: Thu Mar 16 14:52:25 2017 -0500

    msm: kgsl: Change %p to %pK in debug messages
    
    The format specifier %p can leak kernel addresses
    while not valuing the kptr_restrict system settings.
    Use %pK instead of %p, which evaluates whether
    kptr_restrict is set.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2016-6749
    
    Change-Id: I0778e43e0a03852ca2944377256a7b401586a747
    Signed-off-by: Divya Ponnusamy <pdivya@codeaurora.org>
    Reviewed-on: https://gerrit.mot.com/909141
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit 33bbbb8a07c82de7184e3f830b8b7cb286be3fde)
    Reviewed-on: https://gerrit.mot.com/911219
    Reviewed-by: Patrick Auchter <auchter@motorola.com>

diff --git a/drivers/gpu/msm/kgsl.c b/drivers/gpu/msm/kgsl.c
old mode 100755
new mode 100644
index b8968537f529..95a919fea326
--- a/drivers/gpu/msm/kgsl.c
+++ b/drivers/gpu/msm/kgsl.c
@@ -4675,7 +4675,7 @@ int kgsl_device_platform_probe(struct kgsl_device *device)
 	disable_irq(device->pwrctrl.interrupt_num);
 
 	KGSL_DRV_INFO(device,
-		"dev_id %d regs phys 0x%08lx size 0x%08x\n",
+		"dev_id %d regs phys 0x%08lx size 0x%08x \n",
 		device->id, device->reg_phys, device->reg_len);
 
 	rwlock_init(&device->context_lock);
diff --git a/drivers/gpu/msm/kgsl_iommu.c b/drivers/gpu/msm/kgsl_iommu.c
index 123edf426aad..d2726ea5c6aa 100644
--- a/drivers/gpu/msm/kgsl_iommu.c
+++ b/drivers/gpu/msm/kgsl_iommu.c
@@ -1695,8 +1695,8 @@ kgsl_iommu_unmap(struct kgsl_pagetable *pt,
 	} else
 		ret = iommu_unmap_range(iommu_pt->domain, gpuaddr, range);
 	if (ret) {
-		KGSL_CORE_ERR("iommu_unmap_range(%pK, %x, %d) failed "
-			"with err: %d\n", iommu_pt->domain, gpuaddr,
+		KGSL_CORE_ERR("iommu_unmap_range(%x, %d) failed "
+			"with err: %d\n", gpuaddr,
 			range, ret);
 		return ret;
 	}
@@ -1807,9 +1807,9 @@ kgsl_iommu_map(struct kgsl_pagetable *pt,
 				sg_temp ? sg_temp : memdesc->sg,
 				size, protflags);
 	if (ret) {
-		KGSL_CORE_ERR("iommu_map_range(%pK, %x, %pK, %zd, %x) err: %d\n",
-			iommu_pt->domain, iommu_virt_addr,
-			sg_temp ? sg_temp : memdesc->sg, size,
+		KGSL_CORE_ERR("iommu_map_range(%x, %zd, %x) err: %d\n",
+			iommu_virt_addr,
+			size,
 			protflags, ret);
 		kgsl_free(sg_temp);
 		return ret;
@@ -1820,8 +1820,8 @@ kgsl_iommu_map(struct kgsl_pagetable *pt,
 				page_to_phys(kgsl_guard_page), PAGE_SIZE,
 				protflags & ~IOMMU_WRITE);
 		if (ret) {
-			KGSL_CORE_ERR("iommu_map(%pK, %zx, guard, %x) err: %d\n",
-				iommu_pt->domain, iommu_virt_addr + size,
+			KGSL_CORE_ERR("iommu_map(%zx, guard, %x) err: %d\n",
+				iommu_virt_addr + size,
 				protflags & ~IOMMU_WRITE,
 				ret);
 			/* cleanup the partial mapping */
diff --git a/drivers/gpu/msm/kgsl_pwrctrl.c b/drivers/gpu/msm/kgsl_pwrctrl.c
index 2018eedd68be..56b18d0a109a 100644
--- a/drivers/gpu/msm/kgsl_pwrctrl.c
+++ b/drivers/gpu/msm/kgsl_pwrctrl.c
@@ -1358,7 +1358,7 @@ int kgsl_pwrctrl_init(struct kgsl_device *device)
 	if (!pwr->pcl) {
 		KGSL_PWR_ERR(device,
 				"msm_bus_scale_register_client failed: "
-				"id %d table %pK %pK", device->id,
+				"id %d table %pK %pk", device->id,
 				pdata->bus_scale_table,
 				ocmem_scale_table);
 		result = -EINVAL;
