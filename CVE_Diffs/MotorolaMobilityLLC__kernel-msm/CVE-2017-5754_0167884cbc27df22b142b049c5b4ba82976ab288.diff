MotorolaMobilityLLC__kernel-msm
commit 0167884cbc27df22b142b049c5b4ba82976ab288
Author:     Will Deacon <will.deacon@arm.com>
AuthorDate: Tue Nov 14 16:15:59 2017 +0000
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Fri Dec 6 15:30:25 2019 +0800

    arm64: use RET instruction for exiting the trampoline
    
    Speculation attacks against the entry trampoline can potentially resteer
    the speculative instruction stream through the indirect branch and into
    arbitrary gadgets within the kernel.
    
    This patch Defenderends against these attacks by forcing a misprediction
    through the return stack: a dummy BL instruction loads an entry into
    the stack, so that the predicted program flow of the subsequent RET
    instruction is to a branch-to-self instruction which is finally resolved
    as a branch to the kernel griffins with speculation suppressed.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-5754
    Bug: 69856074
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I7aec9bf46ec27b394b8d565d5d4e763060e297d6
    Reviewed-on: https://gerrit.mot.com/1132541
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm64/kernel/entry.S b/arch/arm64/kernel/entry.S
index 9a78650f64b2..6c28b1e8608c 100644
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@ -935,6 +935,9 @@ __ni_sys_trace:
 	.if	\regsize == 64
 	msr	tpidrro_el0, x30	// Restored in kernel_ventry
 	.endif
+	bl	2f
+	b	.
+2:
 	tramp_map_kernel	x30
 #ifdef CONFIG_RANDOMIZE_BASE
 	adr	x30, tramp_vectors + PAGE_SIZE
@@ -949,7 +952,7 @@ __ni_sys_trace:
 	msr	vbar_el1, x30
 	add	x30, x30, #(1b - tramp_vectors)
 	isb
-	br	x30
+	ret
 	.endm
 
 	.macro tramp_exit, regsize = 64
