MotorolaMobilityLLC__kernel-msm
commit 47d1354dd2597e8d1aef49c0cbbdbd4c0447a9bd
Author:     Karthikeyan Mani <kmani@codeaurora.org>
AuthorDate: Tue Mar 6 11:04:49 2018 -0800
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Mon Jul 16 03:47:26 2018 -0500

    ASoC: msm: qdsp6v2: check for buffer size before read
    
    Check for debugfs ops buf size passed before reading
    to eliminate the possibility of reading out of bounds.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2018-5858
    CRs-fixed: 2174725
    Bug: 77528653
    
    Change-Id: I28fd60ce93256b6b0bad62b449092a891cc15463
    Signed-off-by: Karthikeyan Mani <kmani@codeaurora.org>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1192776
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit 2b1438f21fa7510d55be0e18ce9efa4d79046324)

diff --git a/sound/soc/msm/qdsp6v2/q6asm.c b/sound/soc/msm/qdsp6v2/q6asm.c
index 1b38a1672261..05a00db2fd77 100644
--- a/sound/soc/msm/qdsp6v2/q6asm.c
+++ b/sound/soc/msm/qdsp6v2/q6asm.c
@@ -286,6 +286,11 @@ static ssize_t audio_output_latency_dbgfs_read(struct file *file,
 		pr_err("%s: out_buffer is null\n", __func__);
 		return 0;
 	}
+	if (count < OUT_BUFFER_SIZE) {
+		pr_err("%s: read size %d exceeds buf size %zd\n", __func__,
+						OUT_BUFFER_SIZE, count);
+		return 0;
+	}
 	snprintf(out_buffer, OUT_BUFFER_SIZE, "%ld,%ld,%ld,%ld,%ld,%ld,",\
 		out_cold_tv.tv_sec, out_cold_tv.tv_usec, out_warm_tv.tv_sec,\
 		out_warm_tv.tv_usec, out_cont_tv.tv_sec, out_cont_tv.tv_usec);
@@ -339,6 +344,11 @@ static ssize_t audio_input_latency_dbgfs_read(struct file *file,
 		pr_err("%s: in_buffer is null\n", __func__);
 		return 0;
 	}
+	if (count < IN_BUFFER_SIZE) {
+		pr_err("%s: read size %d exceeds buf size %zd\n", __func__,
+						IN_BUFFER_SIZE, count);
+		return 0;
+	}
 	snprintf(in_buffer, IN_BUFFER_SIZE, "%ld,%ld,",\
 				in_cont_tv.tv_sec, in_cont_tv.tv_usec);
 	return  simple_read_from_buffer(buf, IN_BUFFER_SIZE, ppos,
