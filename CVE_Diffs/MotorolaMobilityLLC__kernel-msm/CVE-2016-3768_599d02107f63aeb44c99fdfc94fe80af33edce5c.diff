MotorolaMobilityLLC__kernel-msm
commit 599d02107f63aeb44c99fdfc94fe80af33edce5c
Author:     Arun KS <arunks@codeaurora.org>
AuthorDate: Wed May 11 10:11:36 2016 +0530
Commit:     Chenjie Luo <cjluo@google.com>
CommitDate: Thu Jul 7 17:21:33 2016 +0000

    msm: perf: Do not allocate new hw_event if event is duplicate.
    
    During a perf_event_enable, kernel/events/core.c calls pmu->add() which
    is platform implementation(arch/arm/kernel/perf_event.c). Due to the
    duplicate constraints, arch/arm/mach-msm/perf_event_msm_krait_l2.c
    drivers marks the event as OFF but returns TRUE to perf_event.c which
    goes ahead and allocates the hw_event and enables it.
    
    Since event is marked OFF, kernel events core will try to enable this event
    again during next perf_event_enable. Which results in same event enabled
    on multiple hw_events. But during the perf_release, event struct is freed
    and only one hw_event is released. This results in dereferencing the
    invalid pointer and hence the crash.
    
    Fix this by returning error in case of constraint event duplicate. Hence
    avoiding the same event programmed on multiple hw event counters.
    
    CVE:CVE-2016-3768 Bug:ANDROID-28172137
    
    Change-Id: Ia3360be027dfe87ac753191ffe7e0bc947e72455
    Signed-off-by: Arun KS <arunks@codeaurora.org>
    Signed-off-by: Chetan Ravindranath <cravin@codeaurora.org>

diff --git a/arch/arm/kernel/perf_event.c b/arch/arm/kernel/perf_event.c
index 1da80ec37fea..fdf8f6bae219 100644
--- a/arch/arm/kernel/perf_event.c
+++ b/arch/arm/kernel/perf_event.c
@@ -240,6 +240,7 @@ armpmu_add(struct perf_event *event, int flags)
 			pr_err("Event: %llx failed constraint check.\n",
 					event->attr.config);
 			event->state = PERF_EVENT_STATE_OFF;
+			err = -EPERM;
 			goto out;
 		}
 
diff --git a/arch/arm/mach-msm/perf_event_msm_krait_l2.c b/arch/arm/mach-msm/perf_event_msm_krait_l2.c
index a048a71d1be7..5e4fb24ffa7d 100644
--- a/arch/arm/mach-msm/perf_event_msm_krait_l2.c
+++ b/arch/arm/mach-msm/perf_event_msm_krait_l2.c
@@ -474,6 +474,7 @@ static int msm_l2_test_set_ev_constraint(struct perf_event *event)
 			if (!(event->cpu < 0)) {
 				event->state = PERF_EVENT_STATE_OFF;
 				event->attr.constraint_duplicate = 1;
+				err = -EPERM;
 			}
 	}
 out:
