MotorolaMobilityLLC__kernel-msm
commit f8a339c97593ca98532f3a639fad3debbf721c33
Author:     Kees Cook <keescook@chromium.org>
AuthorDate: Wed Mar 13 14:59:33 2013 -0700
Commit:     Choon Lee Seah <dntc46@motorola.com>
CommitDate: Mon May 13 14:40:27 2013 -0500

    IKJB42MAIN-11751: signal: always clear sa_restorer on execv
    
    When the new signal handlers are set up, the location of sa_restorer is
    not cleared, leaking a parent process's address space location to
    children.  This allows for a potential bypass of the parent's ASLR by
    examining the sa_restorer value returned when calling sigaction().
    
    Based on what should be considered "secret" about addresses, it only
    matters across the exec not the fork (since the VMAs haven't changed
    until the exec).  But since exec sets SIG_DFL and keeps sa_restorer,
    this is where it should be fixed.
    
    Given the few uses of sa_restorer, a "set" function was not written
    since this would be the only use.  Instead, we use
    __ARCH_HAS_SA_RESTORER, as already done in other places.
    
    Example of the leak before applying this patch:
    
      $ cat /proc/$$/maps
      ...
      7fb9f3083000-7fb9f3238000 r-xp 00000000 fd:01 404469 .../libc-2.15.so
      ...
      $ ./leak
      ...
      7f278bc74000-7f278be29000 r-xp 00000000 fd:01 404469 .../libc-2.15.so
      ...
      1 0 (nil) 0x7fb9f30b94a0
      2 4000000 (nil) 0x7f278bcaa4a0
      3 4000000 (nil) 0x7f278bcaa4a0
      4 0 (nil) 0x7fb9f30b94a0
      ...
    
    Bulletin: CVE-2013-0914 Potential ASLR bypass in Linux kernel < 3.8.4
    
    [akpm@linux-foundation.org: use SA_RESTORER for backportability]
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reported-by: Emese Revfy <re.emese@gmail.com>
    Cc: Emese Revfy <re.emese@gmail.com>
    Cc: PaX Team <pageexec@freemail.hu>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Serge Hallyn <serge.hallyn@canonical.com>
    Cc: Julien Tinnes <jln@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Andy Seah <dntc46@motorola.com>
    
    Change-Id: I6d7464345b869274d74f91c6514dfcb35a004bc7
    Reviewed-on: http://gerrit.pcs.mot.com/537930
    Submit-Approved: Jira Key <jirakey@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    SLT-Approved: Slta Waiver <sltawvr@motorola.com>
    Reviewed-by: Klocwork kwcheck <klocwork-kwcheck@sourceforge.mot.com>
    Reviewed-by: Check Patch <CHEKPACH@motorola.com>
    Reviewed-by: Dmitry Sokolov <ads047@motorola.com>
    Reviewed-by: Joel Voss <wljv10@motorola.com>
    Reviewed-by: Jeffrey Carlyle <jeff.carlyle@motorola.com>
    Reviewed-by: Choon Lee Seah <dntc46@motorola.com>

diff --git a/kernel/signal.c b/kernel/signal.c
index 17afcaf582d0..7a06651e04bc 100644
--- a/kernel/signal.c
+++ b/kernel/signal.c
@@ -482,6 +482,9 @@ flush_signal_handlers(struct task_struct *t, int force_default)
 		if (force_default || ka->sa.sa_handler != SIG_IGN)
 			ka->sa.sa_handler = SIG_DFL;
 		ka->sa.sa_flags = 0;
+#ifdef SA_RESTORER
+		ka->sa.sa_restorer = NULL;
+#endif
 		sigemptyset(&ka->sa.sa_mask);
 		ka++;
 	}
