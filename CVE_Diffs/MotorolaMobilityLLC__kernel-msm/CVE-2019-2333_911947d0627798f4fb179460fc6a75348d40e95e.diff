MotorolaMobilityLLC__kernel-msm
commit 911947d0627798f4fb179460fc6a75348d40e95e
Author:     Praveen Kurapati <pkurapat@codeaurora.org>
AuthorDate: Tue Feb 12 16:54:24 2019 +0530
Commit:     zhangxu21 <zhangx21@motorola.com>
CommitDate: Tue Oct 8 14:23:02 2019 +0800

    msm: ipa3: Fix to validate the buffer size
    
    Adding code changes to validate buffer size.
    While calling ipa_read verifying the kernel buffer
    size in range or not.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2019-2333
    CRs-Fixed: 2381014
    
    Ported from "(CR)"
    
    Change-Id: I5c9a908b0500a5f0148ec7764425897570bdd713
    Signed-off-by: Praveen Kurapati <pkurapat@codeaurora.org>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1353064
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Ling Jin <lingjin@motorola.com>
    Submit-Approved: Jira Key
    Reviewed-on: https://gerrit.mot.com/1422636

diff --git a/drivers/platform/msm/ipa/ipa_v3/ipa_intf.c b/drivers/platform/msm/ipa/ipa_v3/ipa_intf.c
index 2d728d652f5b..b71cede1625e 100644
--- a/drivers/platform/msm/ipa/ipa_v3/ipa_intf.c
+++ b/drivers/platform/msm/ipa/ipa_v3/ipa_intf.c
@@ -728,6 +728,12 @@ ssize_t ipa3_read(struct file *filp, char __user *buf, size_t count,
 		if (msg) {
 			locked = 0;
 			mutex_unlock(&ipa3_ctx->msg_lock);
+			if (count < sizeof(struct ipa_msg_meta)) {
+				kfree(msg);
+				msg = NULL;
+				ret = -EFAULT;
+				break;
+			}
 			if (copy_to_user(buf, &msg->meta,
 					  sizeof(struct ipa_msg_meta))) {
 				ret = -EFAULT;
@@ -738,8 +744,15 @@ ssize_t ipa3_read(struct file *filp, char __user *buf, size_t count,
 			buf += sizeof(struct ipa_msg_meta);
 			count -= sizeof(struct ipa_msg_meta);
 			if (msg->buff) {
-				if (copy_to_user(buf, msg->buff,
-						  msg->meta.msg_len)) {
+				if (count >= msg->meta.msg_len) {
+					if (copy_to_user(buf, msg->buff,
+							msg->meta.msg_len)) {
+						ret = -EFAULT;
+						kfree(msg);
+						msg = NULL;
+						break;
+					}
+				} else {
 					ret = -EFAULT;
 					kfree(msg);
 					msg = NULL;
