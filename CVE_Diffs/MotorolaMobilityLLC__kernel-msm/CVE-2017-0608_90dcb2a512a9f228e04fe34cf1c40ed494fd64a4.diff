MotorolaMobilityLLC__kernel-msm
commit 90dcb2a512a9f228e04fe34cf1c40ed494fd64a4
Author:     Xiaoyu Ye <benyxy@codeaurora.org>
AuthorDate: Mon Dec 19 18:38:53 2016 -0800
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Wed May 31 08:43:42 2017 -0500

    ASoC: msm: qdsp6v2: Add range checking in msm_dai_q6_set_channel_map
    
    Range checking is added to prevent buffer overflow that due to inputs
    can be set by user space.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-0608
    CRs-Fixed: 1098363
    Change-Id: I057261291806240ee6d7b8106a5e83a7665e013d
    Signed-off-by: Xiaoyu Ye <benyxy@codeaurora.org>
    (cherry picked from commit e6a07e1bf0f904708d1694c8dd416f560f2ef31f)
    Signed-off-by: Varun Shrivastava <varunshrivastava@motorola.com>
    Reviewed-on: https://gerrit.mot.com/953704
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/sound/soc/msm/qdsp6v2/msm-dai-q6-v2.c b/sound/soc/msm/qdsp6v2/msm-dai-q6-v2.c
index cf8c5fbe952e..84bdcce1b1b1 100644
--- a/sound/soc/msm/qdsp6v2/msm-dai-q6-v2.c
+++ b/sound/soc/msm/qdsp6v2/msm-dai-q6-v2.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2012-2016, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2012-2017, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -1277,6 +1277,11 @@ static int msm_dai_q6_set_channel_map(struct snd_soc_dai *dai,
 			pr_err("%s: rx slot not found\n", __func__);
 			return -EINVAL;
 		}
+		if (rx_num > AFE_PORT_MAX_AUDIO_CHAN_CNT) {
+			pr_err("%s: invalid rx num %d\n", __func__, rx_num);
+			return -EINVAL;
+		}
+
 		for (i = 0; i < rx_num; i++) {
 			dai_data->port_config.slim_sch.shared_ch_mapping[i] =
 			    rx_slot[i];
@@ -1307,6 +1312,11 @@ static int msm_dai_q6_set_channel_map(struct snd_soc_dai *dai,
 			pr_err("%s: tx slot not found\n", __func__);
 			return -EINVAL;
 		}
+		if (tx_num > AFE_PORT_MAX_AUDIO_CHAN_CNT) {
+			pr_err("%s: invalid tx num %d\n", __func__, tx_num);
+			return -EINVAL;
+		}
+
 		for (i = 0; i < tx_num; i++) {
 			dai_data->port_config.slim_sch.shared_ch_mapping[i] =
 			    tx_slot[i];
