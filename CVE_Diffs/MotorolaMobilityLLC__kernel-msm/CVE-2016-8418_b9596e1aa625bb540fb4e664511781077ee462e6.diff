MotorolaMobilityLLC__kernel-msm
commit b9596e1aa625bb540fb4e664511781077ee462e6
Author:     Zhen Kong <zkong@codeaurora.org>
AuthorDate: Tue Jan 10 15:21:24 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Mon Feb 27 00:36:43 2017 -0600

    msm: crypto: Fix integer over flow check in qce driver
    
    Integer overflow check is invalid when ULONG_MAX is used,
    as ULONG_MAX has typeof 'unsigned long', while areq->assoclen,
    q_req->crytlen, and qreq.ivsize are 'unsigned int'. Make change
    to use UINT_MAX instead of ULONG_MAX.
    
    Mot-CRs-fixed:IKSIMP-1074
    CVE-Fixed:CVE-2016-8418
    
    Change-Id: If1370a355334ae0f99fc46e099884eece8e9602d
    Signed-off-by: Zhen Kong <zkong@codeaurora.org>
    Signed-off-by: amarenr <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/939296
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit 81ccb4ff1762d91eac62834da642a69f2aeae606)

diff --git a/drivers/crypto/msm/qce.c b/drivers/crypto/msm/qce.c
index d11a8315e660..3c657c8becde 100644
--- a/drivers/crypto/msm/qce.c
+++ b/drivers/crypto/msm/qce.c
@@ -1,6 +1,6 @@
 /* Qualcomm Crypto Engine driver.
  *
- * Copyright (c) 2010-2014, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2010-2016, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -1952,8 +1952,8 @@ int qce_aead_req(void *handle, struct qce_req *q_req)
 	else
 		q_req->cryptlen = areq->cryptlen - authsize;
 
-	if ((q_req->cryptlen > ULONG_MAX - ivsize) ||
-		(q_req->cryptlen + ivsize > ULONG_MAX - areq->assoclen)) {
+	if ((q_req->cryptlen > UINT_MAX - ivsize) ||
+		(q_req->cryptlen + ivsize > UINT_MAX - areq->assoclen)) {
 		pr_err("Integer overflow on total aead req length.\n");
 		return -EINVAL;
 	}
