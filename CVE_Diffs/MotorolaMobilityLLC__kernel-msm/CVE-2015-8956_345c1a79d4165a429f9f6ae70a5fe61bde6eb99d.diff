MotorolaMobilityLLC__kernel-msm
commit 345c1a79d4165a429f9f6ae70a5fe61bde6eb99d
Author:     Mark Reed <mreed1@motorola.com>
AuthorDate: Mon Oct 24 16:13:09 2016 -0500
Commit:     Mark Reed <mreed@motorola.com>
CommitDate: Wed Oct 26 09:07:13 2016 -0500

    - Information disclosure vulnerability CVE-2015-8956
    
    Signed-off-by: Mark Reed <mreed@motorola.com>
    Change-Id: If483b8b531c31a44b49bfe6c583f38725bf54c70
    
    Conflicts:
            net/bluetooth/rfcomm/sock.c
    Change-Id: Icf57a212de92f026049e6ed22d2f4faba4f9b075
    Reviewed-on: https://gerrit.mot.com/912757
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Jason Knopsnyder <jasonk@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index 1e1e44be2c1e..08964520e333 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -329,15 +329,19 @@ static int rfcomm_sock_create(struct net *net, struct socket *sock,
 
 static int rfcomm_sock_bind(struct socket *sock, struct sockaddr *addr, int addr_len)
 {
-	struct sockaddr_rc *sa = (struct sockaddr_rc *) addr;
+	struct sockaddr_rc sa;
 	struct sock *sk = sock->sk;
-	int err = 0;
-
-	BT_DBG("sk %pK %pMR", sk, &sa->rc_bdaddr);
+	int len, err = 0;
 
 	if (!addr || addr->sa_family != AF_BLUETOOTH)
 		return -EINVAL;
 
+	memset(&sa, 0, sizeof(sa));
+	len = min_t(unsigned int, sizeof(sa), addr_len);
+	memcpy(&sa, addr, len);
+
+	BT_DBG("sk %pK %pMR", sk, &sa.rc_bdaddr);
+
 	lock_sock(sk);
 
 	if (sk->sk_state != BT_OPEN) {
@@ -352,12 +356,12 @@ static int rfcomm_sock_bind(struct socket *sock, struct sockaddr *addr, int addr
 
 	write_lock(&rfcomm_sk_list.lock);
 
-	if (sa->rc_channel && __rfcomm_get_sock_by_addr(sa->rc_channel, &sa->rc_bdaddr)) {
+	if (sa.rc_channel && __rfcomm_get_sock_by_addr(sa.rc_channel, &sa.rc_bdaddr)) {
 		err = -EADDRINUSE;
 	} else {
 		/* Save source address */
-		bacpy(&bt_sk(sk)->src, &sa->rc_bdaddr);
-		rfcomm_pi(sk)->channel = sa->rc_channel;
+		bacpy(&bt_sk(sk)->src, &sa.rc_bdaddr);
+		rfcomm_pi(sk)->channel = sa.rc_channel;
 		sk->sk_state = BT_BOUND;
 	}
 
