MotorolaMobilityLLC__kernel-msm
commit f96fc651a7c84de84eaa82555fc80f92aae1101e
Author:     Aditya Bavanari <abavanar@codeaurora.org>
AuthorDate: Fri Apr 6 18:15:43 2018 +0530
Commit:     Jignesh Patel <jignesh@motorola.com>
CommitDate: Wed Jul 18 22:54:52 2018 -0500

    voice_svc: Avoid double free in voice_svc driver
    
    voice_svc_dev is allocated as a device managed resource
    and need not be freed since it is freed automatically.
    Remove the logic to free voice_svc_dev in probe failure
    and remove functions to avoid double free.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2018-11273
    CRs-fixed: 2204285
    
    Change-Id: If4f9ca840b00448b987f5ce443f66b0923b01969
    Signed-off-by: Aditya Bavanari <abavanar@codeaurora.org>
    Reviewed-on: https://gerrit.mot.com/1198210
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Ling Jin <lingjin@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/soc/qcom/qdsp6v2/voice_svc.c b/drivers/soc/qcom/qdsp6v2/voice_svc.c
index e05230255d6f..ddd0802b7d0b 100644
--- a/drivers/soc/qcom/qdsp6v2/voice_svc.c
+++ b/drivers/soc/qcom/qdsp6v2/voice_svc.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2014-2017, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2014-2018, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -773,7 +773,7 @@ static int voice_svc_probe(struct platform_device *pdev)
 	if (ret) {
 		pr_err("%s: Failed to alloc chrdev\n", __func__);
 		ret = -ENODEV;
-		goto chrdev_err;
+		goto done;
 	}
 
 	voice_svc_dev->major = MAJOR(device_num);
@@ -820,8 +820,6 @@ dev_err:
 	class_destroy(voice_svc_class);
 class_err:
 	unregister_chrdev_region(0, MINOR_NUMBER);
-chrdev_err:
-	kfree(voice_svc_dev);
 done:
 	return ret;
 }
@@ -835,7 +833,6 @@ static int voice_svc_remove(struct platform_device *pdev)
 	device_destroy(voice_svc_class, device_num);
 	class_destroy(voice_svc_class);
 	unregister_chrdev_region(0, MINOR_NUMBER);
-	kfree(voice_svc_dev);
 
 	return 0;
 }
