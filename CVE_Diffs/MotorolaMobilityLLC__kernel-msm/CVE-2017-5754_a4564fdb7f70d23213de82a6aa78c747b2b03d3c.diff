MotorolaMobilityLLC__kernel-msm
commit a4564fdb7f70d23213de82a6aa78c747b2b03d3c
Author:     Ard Biesheuvel <ard.biesheuvel@linaro.org>
AuthorDate: Mon Nov 9 09:55:46 2015 +0100
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Fri Dec 6 15:30:25 2019 +0800

    BACKPORT: arm64: fix R/O permissions of FDT mapping
    
    The mapping permissions of the FDT are set to 'PAGE_KERNEL | PTE_RDONLY'
    in an attempt to map the FDT as read-only. However, not only does this
    break at build time under STRICT_MM_TYPECHECKS (since the two terms are
    of different types in that case), it also results in both the PTE_WRITE
    and PTE_RDONLY attributes to be set, which means the region is still
    writable under ARMv8.1 DBM (and an attempted write will simply clear the
    PT_RDONLY bit).
    
    So instead, Defenderine PAGE_KERNEL_RO (which already has an established
    meaning across architectures) and use that instead.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-5754
    Bug: 69856074
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    (cherry picked from commit fb226c3d7c77b4f99cee675795cc0e70937c56ee)
    
    Change-Id: I3ab7382c7e5539d93b21dd262e0f7f128330722a
    [ghackmann@google.com: only take the PAGE_KERNEL_RO Defenderinition, since
     the FDT mapping code in question doesn't exist in 3.18]
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Reviewed-on: https://gerrit.mot.com/1132547
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm64/include/asm/pgtable.h b/arch/arm64/include/asm/pgtable.h
index 0ee178f2ece7..395f5a23a2f0 100644
--- a/arch/arm64/include/asm/pgtable.h
+++ b/arch/arm64/include/asm/pgtable.h
@@ -78,6 +78,7 @@ extern void __pgd_error(const char *file, int line, unsigned long val);
 #define _PAGE_DEFAULT		(PROT_DEFAULT | PTE_ATTRINDX(MT_NORMAL))
 
 #define PAGE_KERNEL		__pgprot(_PAGE_DEFAULT | PTE_PXN | PTE_UXN | PTE_DIRTY | PTE_WRITE)
+#define PAGE_KERNEL_RO		__pgprot(_PAGE_DEFAULT | PTE_PXN | PTE_UXN | PTE_DIRTY | PTE_RDONLY)
 #define PAGE_KERNEL_EXEC	__pgprot(_PAGE_DEFAULT | PTE_UXN | PTE_DIRTY | PTE_WRITE)
 
 #define PAGE_HYP		__pgprot(_PAGE_DEFAULT | PTE_HYP)
