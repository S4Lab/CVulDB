MotorolaMobilityLLC__kernel-msm
commit 4f0a20dc799aa13576c32542f13a7c8ca7ac753c
Author:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>
AuthorDate: Thu May 10 14:32:02 2018 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Wed Jul 4 04:55:49 2018 -0500

    USB: core: only clean up what we allocated
    
    When cleaning up the configurations, make sure we only free the number
    of configurations and interfaces that we could have allocated.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-17558
    BUG: 71751622
    
    Change-Id: I1601a5759b570e22f61fbbdfef400278a09c6fbf
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1173684
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Ravikumar Vembu <raviv@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/usb/core/config.c b/drivers/usb/core/config.c
index 9a6cbaa0e7af..177079ae5941 100644
--- a/drivers/usb/core/config.c
+++ b/drivers/usb/core/config.c
@@ -641,18 +641,21 @@ void usb_destroy_configuration(struct usb_device *dev)
 		return;
 
 	if (dev->rawdescriptors) {
-		for (i = 0; i < dev->descriptor.bNumConfigurations; i++)
+		for (i = 0; i < dev->descriptor.bNumConfigurations &&
+				i < USB_MAXCONFIG; i++)
 			kfree(dev->rawdescriptors[i]);
 
 		kfree(dev->rawdescriptors);
 		dev->rawdescriptors = NULL;
 	}
 
-	for (c = 0; c < dev->descriptor.bNumConfigurations; c++) {
+	for (c = 0; c < dev->descriptor.bNumConfigurations &&
+			c < USB_MAXCONFIG; c++) {
 		struct usb_host_config *cf = &dev->config[c];
 
 		kfree(cf->string);
-		for (i = 0; i < cf->desc.bNumInterfaces; i++) {
+		for (i = 0; i < cf->desc.bNumInterfaces &&
+				i < USB_MAXINTERFACES; i++) {
 			if (cf->intf_cache[i])
 				kref_put(&cf->intf_cache[i]->ref,
 					  usb_release_interface_cache);
