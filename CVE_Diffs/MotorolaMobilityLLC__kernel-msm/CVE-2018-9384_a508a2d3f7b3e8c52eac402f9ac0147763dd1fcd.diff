MotorolaMobilityLLC__kernel-msm
commit a508a2d3f7b3e8c52eac402f9ac0147763dd1fcd
Author:     Mark Rutland <mark.rutland@arm.com>
AuthorDate: Thu Nov 3 20:23:12 2016 +0000
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Fri Jun 15 07:20:35 2018 -0500

    UPSTREAM: arm64: assembler: introduce ldr_this_cpu
    
    Shortly we will want to load a percpu variable in the return from
    userspace path. We can save an instruction by folding the addition of
    the percpu offset into the load instruction, and this patch adds a new
    helper to do so.
    
    At the same time, we clean up this_cpu_ptr for consistency. As with
    {adr,ldr,str}_l, we change the template to take the destination register
    first, and name this dst. Secondly, we rename the macro to adr_this_cpu,
    following the scheme of adr_l, and matching the newly added
    ldr_this_cpu.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2018-9384
    Bug: 74356909
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: James Morse <james.morse@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    
    Bug: 66351489
    Change-Id: I68ece866fea0a4c3f540505f52676546e920aeff
    (cherry picked from commit 1b7e2296a822dfd2349960addc42a139360ce769)
    Signed-off-by: Zubin Mithra <zsm@google.com>
    Reviewed-on: https://gerrit.mot.com/1181662
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm64/include/asm/assembler.h b/arch/arm64/include/asm/assembler.h
index 34381f380943..af8bfd0b041d 100644
--- a/arch/arm64/include/asm/assembler.h
+++ b/arch/arm64/include/asm/assembler.h
@@ -225,6 +225,28 @@ lr	.req	x30		// link register
 	str	\src, [\tmp, :lo12:\sym]
 	.endm
 
+	/*
+	 * @dst: Result of per_cpu(sym, smp_processor_id())
+	 * @sym: The name of the per-cpu variable
+	 * @tmp: scratch register
+	 */
+	.macro adr_this_cpu, dst, sym, tmp
+	adr_l	\dst, \sym
+	mrs	\tmp, tpidr_el1
+	add	\dst, \dst, \tmp
+	.endm
+
+	/*
+	 * @dst: Result of READ_ONCE(per_cpu(sym, smp_processor_id()))
+	 * @sym: The name of the per-cpu variable
+	 * @tmp: scratch register
+	 */
+	.macro ldr_this_cpu dst, sym, tmp
+	adr_l	\dst, \sym
+	mrs	\tmp, tpidr_el1
+	ldr	\dst, [\dst, \tmp]
+	.endm
+
 /*
  * vma_vm_mm - get mm pointer from vma pointer (vma->vm_mm)
  */
