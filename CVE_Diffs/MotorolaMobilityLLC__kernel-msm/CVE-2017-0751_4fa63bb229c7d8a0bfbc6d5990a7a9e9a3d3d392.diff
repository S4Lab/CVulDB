MotorolaMobilityLLC__kernel-msm
commit 4fa63bb229c7d8a0bfbc6d5990a7a9e9a3d3d392
Author:     Varun Shrivastava <varunshrivastava@motorola.com>
AuthorDate: Tue Jul 11 12:27:03 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Thu Aug 31 02:43:24 2017 -0500

    qcdev: Check the digest length during the SHA operations
    
    Check the digest length to avoid buffer overflow while
    doing the SHA operations.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-0751
    
    Change-Id: I4d3fb20723f59e905a672edaf84ee5d0865905b1
    Signed-off-by: Brahmaji K <bkomma@codeaurora.org>
    
    Signed-off-by: Varun Shrivastava <varunshrivastava@motorola.com>
    Change-Id: I33d350b51a40b18de3cef9de46042d86c618890a
    Reviewed-on: https://gerrit.mot.com/1024793
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/crypto/msm/qcedev.c b/drivers/crypto/msm/qcedev.c
index 5eaf0c53ce09..4297d05da8b3 100644
--- a/drivers/crypto/msm/qcedev.c
+++ b/drivers/crypto/msm/qcedev.c
@@ -1746,6 +1746,12 @@ long qcedev_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 			mutex_unlock(&hash_access_lock);
 			return err;
 		}
+		if (handle->sha_ctxt.diglen > QCEDEV_MAX_SHA_DIGEST) {
+			pr_err("Invalid sha_ctxt.diglen %d\n",
+					handle->sha_ctxt.diglen);
+			mutex_unlock(&hash_access_lock);
+			return -EINVAL;
+		}
 		qcedev_areq.sha_op_req.diglen = handle->sha_ctxt.diglen;
 		memcpy(&qcedev_areq.sha_op_req.digest[0],
 				&handle->sha_ctxt.digest[0],
@@ -1782,6 +1788,12 @@ long qcedev_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 			mutex_unlock(&hash_access_lock);
 			return err;
 		}
+		if (handle->sha_ctxt.diglen > QCEDEV_MAX_SHA_DIGEST) {
+			pr_err("Invalid sha_ctxt.diglen %d\n",
+					handle->sha_ctxt.diglen);
+			mutex_unlock(&hash_access_lock);
+			return -EINVAL;
+		}
 		qcedev_areq.sha_op_req.diglen =	handle->sha_ctxt.diglen;
 		memcpy(&qcedev_areq.sha_op_req.digest[0],
 				&handle->sha_ctxt.digest[0],
