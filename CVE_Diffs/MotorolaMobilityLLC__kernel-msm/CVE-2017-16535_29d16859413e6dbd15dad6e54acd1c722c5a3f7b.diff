MotorolaMobilityLLC__kernel-msm
commit 29d16859413e6dbd15dad6e54acd1c722c5a3f7b
Author:     Alan Stern <stern@rowland.harvard.edu>
AuthorDate: Tue Feb 13 14:53:32 2018 +0530
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Wed Aug 22 10:02:59 2018 +0800

    USB: core: fix out-of-bounds access bug in usb_get_bos_descriptor()
    
    Andrey used the syzkaller fuzzer to find an out-of-bounds memory
    access in usb_get_bos_descriptor().  The code wasn't checking that the
    next usb_dev_cap_header structure could fit into the remaining buffer
    space.
    
    This patch fixes the error and also reduces the bNumDeviceCaps field
    in the header to match the actual number of capabilities found, in
    cases where there are fewer than expected.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-16535
    BUG: 69052675
    
    Change-Id: I302551646a04f7f5991b18e46db0720613d0df5a
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-on: https://gerrit.mot.com/1138010
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit ca6d18ff7fdbbe4456908e760b7c8a91d75ae7be)

diff --git a/drivers/usb/core/config.c b/drivers/usb/core/config.c
index b2a540b43f97..1840089b4ffe 100644
--- a/drivers/usb/core/config.c
+++ b/drivers/usb/core/config.c
@@ -829,10 +829,12 @@ int usb_get_bos_descriptor(struct usb_device *dev)
 	for (i = 0; i < num; i++) {
 		buffer += length;
 		cap = (struct usb_dev_cap_header *)buffer;
-		length = cap->bLength;
 
-		if (total_len < length)
+		if (total_len < sizeof(*cap) || total_len < cap->bLength) {
+			dev->bos->desc->bNumDeviceCaps = i;
 			break;
+		}
+		length = cap->bLength;
 		total_len -= length;
 
 		if (cap->bDescriptorType != USB_DT_DEVICE_CAPABILITY) {
