MotorolaMobilityLLC__kernel-msm
commit 79cb458a493d5873a5a0431592e7bdcafa1d76e7
Author:     Eric W. Biederman <ebiederm@xmission.com>
AuthorDate: Wed Oct 8 10:42:27 2014 -0700
Commit:     Andy Lutomirski <luto@amacapital.net>
CommitDate: Tue Oct 14 14:27:19 2014 -0700

    mnt: Prevent pivot_root from creating a loop in the mount tree
    
    Perry Lutomirski recently demonstrated that when chroot is used to set
    the root path below the path for the new ``root'' passed to pivot_root
    the pivot_root system call succeeds and leaks mounts.
    
    In examining the code I see that starting with a new root that is
    below the current root in the mount tree will result in a loop in the
    mount tree after the mounts are detached and then reattached to one
    another.  Resulting in all kinds of ugliness including a leak of that
    mounts involved in the leak of the mount loop.
    
    Prevent this problem by ensuring that the new mount is reachable from
    the current root of the mount tree.
    
    [Added stable cc.  Fixes CVE-2014-7970.  --Perry]
    
    Cc: stable@vger.kernel.org
    Reported-by: Perry Lutomirski <luto@amacapital.net>
    Reviewed-by: Perry Lutomirski <luto@amacapital.net>
    Link: http://lkml.kernel.org/r/87bnpmihks.fsf@x220.int.ebiederm.org
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Perry Lutomirski <luto@amacapital.net>

diff --git a/fs/namespace.c b/fs/namespace.c
index ef42d9bee212..74647c2fe69c 100644
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -2820,6 +2820,9 @@ SYSCALL_DEFINE2(pivot_root, const char __user *, new_root,
 	/* make sure we can reach put_old from new_root */
 	if (!is_path_reachable(old_mnt, old.dentry, &new))
 		goto out4;
+	/* make certain new is below the root */
+	if (!is_path_reachable(new_mnt, new.dentry, &root))
+		goto out4;
 	root_mp->m_count++; /* pin it so it won't go away */
 	lock_mount_hash();
 	detach_mnt(new_mnt, &parent_path);
