MotorolaMobilityLLC__kernel-msm
commit d6f4a7d9275255251f98bf10dbef31000ec0fd0e
Author:     Adrian Salido <salidoa@google.com>
AuthorDate: Sun Mar 12 15:33:59 2017 +0530
Commit:     Carlos Pinho <cpinho@motorola.com>
CommitDate: Fri Oct 11 21:06:38 2019 -0300

    fs/proc/array.c: make safe access to group_leader
    
    As mentioned in commit 52ee2dfdd4f51cf422ea6a96a0846dc94244aa37
    ("pids: refactor vnr/nr_ns helpers to make them safe"). *_nr_ns
    helpers used to be buggy. The commit addresses most of the helpers but
    is missing task_tgid_xxx()
    
    Without this protection there is a possible use after free reported by
    kasan instrumented kernel:
    
    ==================================================================
    BUG: KASAN: use-after-free in task_tgid_nr_ns+0x2c/0x44 at addr ***
    Read of size 8 by task cat/2472
    CPU: 1 PID: 2472 Comm: cat Tainted: ****
    Hardware name: Google Tegra210 Smaug Rev 1,3+ (DT)
    Call trace:
    [<ffffffc00020ad2c>] dump_backtrace+0x0/0x17c
    [<ffffffc00020aec0>] show_stack+0x18/0x24
    [<ffffffc0011573d0>] dump_stack+0x94/0x100
    [<ffffffc0003c7dc0>] kasan_report+0x308/0x554
    [<ffffffc0003c7518>] __asan_load8+0x20/0x7c
    [<ffffffc00025a54c>] task_tgid_nr_ns+0x28/0x44
    [<ffffffc00046951c>] proc_pid_status+0x444/0x1080
    [<ffffffc000460f60>] proc_single_show+0x8c/0xdc
    [<ffffffc0004081b0>] seq_read+0x2e8/0x6f0
    [<ffffffc0003d1420>] vfs_read+0xd8/0x1e0
    [<ffffffc0003d1b98>] SyS_read+0x68/0xd4
    
    Accessing group_leader while holding rcu_lock and using the now safe
    helpers introduced in the commit mentioned, this race condition is
    addressed.
    
    Mot-CRs-fixed:(CR)
    CVE-Fixed:CVE-2017-0427
    
    Bug: 31495866
    Change-Id: Ie865edd81c0862652edd4d80543804c707d0da31
    Signed-off-by: Adrian Salido <salidoa@google.com>
    Signed-off-by: amarenr <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/960781
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/fs/proc/array.c b/fs/proc/array.c
index 015cdc615dfb..8f9b361d007e 100644
--- a/fs/proc/array.c
+++ b/fs/proc/array.c
@@ -146,20 +146,22 @@ static inline void task_state(struct seq_file *m, struct pid_namespace *ns,
 	struct user_namespace *user_ns = seq_user_ns(m);
 	struct group_info *group_info;
 	int g;
-	struct task_struct *tracer;
 	const struct cred *cred;
-	pid_t ppid, tpid = 0, tgid, ngid;
+	pid_t ppid = 0, tpid = 0, tgid, ngid;
+	struct task_struct *leader = NULL;
 	unsigned int max_fds = 0;
 
 	rcu_read_lock();
-	ppid = pid_alive(p) ?
-		task_tgid_nr_ns(rcu_dereference(p->real_parent), ns) : 0;
 
-	tracer = ptrace_parent(p);
-	if (tracer)
-		tpid = task_pid_nr_ns(tracer, ns);
+	if (pid_alive(p)) {
+		struct task_struct *tracer = ptrace_parent(p);
 
-	tgid = task_tgid_nr_ns(p, ns);
+		if (tracer)
+			tpid = task_pid_nr_ns(tracer, ns);
+		ppid = task_tgid_nr_ns(rcu_dereference(p->real_parent), ns);
+		leader = p->group_leader;
+	}
+	tgid = leader ? task_pid_nr_ns(leader, ns) : 0;
 	ngid = task_numa_group_id(p);
 	cred = get_task_cred(p);
 
