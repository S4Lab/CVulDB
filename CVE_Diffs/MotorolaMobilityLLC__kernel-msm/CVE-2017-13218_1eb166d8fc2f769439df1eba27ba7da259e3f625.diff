MotorolaMobilityLLC__kernel-msm
commit 1eb166d8fc2f769439df1eba27ba7da259e3f625
Author:     Marc Zyngier <marc.zyng...@arm.com>
AuthorDate: Thu Dec 28 15:57:25 2017 +0530
Commit:     Amarendra Reddy <amarenr@motorola.com>
CommitDate: Thu Jan 4 02:33:06 2018 -0600

    ARM: Handle trapping of CNTFRQ from userspace
    
    As we're about to enable trapping of some of the userspace-visible
    timer registers, let's add a handler for CNTFRQ.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-13218
    Bug: 68266545
    
    Change-Id: I66684c03076c51bdb7525299a17c2ec399115de4
    Signed-off-by: Marc Zyngier <marc.zyng...@arm.com>
    Signed-off-by: amarenr <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1110766
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm/kernel/traps.c b/arch/arm/kernel/traps.c
index e769a228b9a4..6397b74f2291 100644
--- a/arch/arm/kernel/traps.c
+++ b/arch/arm/kernel/traps.c
@@ -801,6 +801,22 @@ void __bad_xchg(volatile void *ptr, int size)
 EXPORT_SYMBOL(__bad_xchg);
 
 #ifdef CONFIG_ARM_ARCH_TIMER
+static int read_cntfrq_trap(struct pt_regs *regs, unsigned int instr)
+{
+	int reg = (instr >> 12) & 15;
+	if (reg == 15)
+		return 1;
+	regs->uregs[reg] = arch_timer_get_rate();
+	regs->ARM_pc += 4;
+	return 0;
+}
+
+static struct undef_hook cntfrq_hook = {
+	.instr_mask     = 0x0fff0fff,
+	.instr_val      = 0x0e1e0f10,
+	.fn             = read_cntfrq_trap,
+};
+
 static int read_cntvct_trap(struct pt_regs *regs, unsigned int instr)
 {
 	int rt  = (instr >> 12) & 15;
@@ -822,6 +838,7 @@ static struct undef_hook cntvct_hook = {
 static int __init arch_timer_hook_init(void)
 {
 	register_undef_hook(&cntvct_hook);
+	register_undef_hook(&cntfrq_hook);
 	return 0;
 }
 
