MotorolaMobilityLLC__kernel-msm
commit c335eef24c40bfbb4c02ca537e7a131987095d1d
Author:     Thomas Gleixner <tglx@linutronix.de>
AuthorDate: Tue Jun 3 12:27:06 2014 +0000
Commit:     Gerrit - the friendly Code Review server <code-review@localhost>
CommitDate: Mon Dec 8 15:04:33 2014 -0800

    futex-prevent-requeue-pi-on-same-futex.patch futex: Forbid uaddr == uaddr2 in futex_requeue(..., requeue_pi=1)
    
    If uaddr == uaddr2, then we have broken the rule of only requeueing from
    a non-pi futex to a pi futex with this call.  If we attempt this, then
    dangling pointers may be left for rt_waiter resulting in an exploitable
    condition.
    
    This change brings futex_requeue() in line with futex_wait_requeue_pi()
    which performs the same check as per commit 6f7b0a2a5c0f ("futex: Forbid
    uaddr == uaddr2 in futex_wait_requeue_pi()")
    
    [ tglx: Compare the resulting keys as well, as uaddrs might be
            different depending on the mapping ]
    
    Fixes CVE-2014-3153.
    
    Reported-by: Pinkie Pie
    Signed-off-by: Will Drewry <wad@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Change-Id: I9ee5c8a87cc43c7b1e1dc2796949e7c20c74ddf4
    Git-commit: e9c243a5a6de0be8e584c604d353412584b592f8
    Git-repo: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
    Signed-off-by: Divya Sharma <c_shard@codeaurora.org>

diff --git a/kernel/futex.c b/kernel/futex.c
index f0239de5f4e4..1d552e471ab7 100644
--- a/kernel/futex.c
+++ b/kernel/futex.c
@@ -2453,6 +2453,15 @@ static int futex_wait_requeue_pi(u32 __user *uaddr, unsigned int flags,
 		goto out_put_keys;
 	}
 
+	/*
+	 * The check above which compares uaddrs is not sufficient for
+	 * shared futexes. We need to compare the keys:
+	 */
+	if (match_futex(&q.key, &key2)) {
+		ret = -EINVAL;
+		goto out_put_keys;
+	}
+
 	/* Queue the futex_q, drop the hb lock, wait for wakeup. */
 	futex_wait_queue_me(hb, &q, to);
 
