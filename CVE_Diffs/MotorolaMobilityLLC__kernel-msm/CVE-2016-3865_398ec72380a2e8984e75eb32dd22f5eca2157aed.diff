MotorolaMobilityLLC__kernel-msm
commit 398ec72380a2e8984e75eb32dd22f5eca2157aed
Author:     Konstantin Makariev <kmakariev@motorola.com>
AuthorDate: Mon Sep 12 11:53:49 2016 -0500
Commit:     chenll4 <chenll4@motorola.com>
CommitDate: Wed Oct 19 16:46:27 2016 +0800

    input: synaptics_rmi4: security fixes
    
    Apply stack overflow and elevation of privelege vulnerabilities
    patches to Synaptics drivers other than MMI:
    
     * CVE-2016-3865/A-28799389
     * CVE-2016-3940/A-30141991
     * CVE-2016-6672/A-30537088
    
    This code has not been tested.
    
    Change-Id: Id039bc8ed9c085c82d7707f2c23b8048d6d51dbb
    Signed-off-by: Konstantin Makariev <kmakariev@motorola.com>
    Reviewed-on: https://gerrit.mot.com/898976
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Alexander Filonenko <alexf@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/drivers/input/touchscreen/synaptics_i2c_rmi4.c b/drivers/input/touchscreen/synaptics_i2c_rmi4.c
index 3b0e9b18f389..410fee6fca36 100644
--- a/drivers/input/touchscreen/synaptics_i2c_rmi4.c
+++ b/drivers/input/touchscreen/synaptics_i2c_rmi4.c
@@ -1064,15 +1064,12 @@ static int synaptics_rmi4_i2c_write(struct synaptics_rmi4_data *rmi4_data,
 {
 	int retval;
 	unsigned char retry;
-	unsigned char buf[length + 1];
-	struct i2c_msg msg[] = {
-		{
-			.addr = rmi4_data->i2c_client->addr,
-			.flags = 0,
-			.len = length + 1,
-			.buf = buf,
-		}
-	};
+	unsigned char *buf;
+	struct i2c_msg msg[1];
+
+	buf = kzalloc(length + 1, GPF_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
 	mutex_lock(&(rmi4_data->rmi4_io_ctrl_mutex));
 
@@ -1080,6 +1077,11 @@ static int synaptics_rmi4_i2c_write(struct synaptics_rmi4_data *rmi4_data,
 	if (retval != PAGE_SELECT_LEN)
 		goto exit;
 
+	msg[0].addr = rmi4_data->i2c_client->addr;
+	msg[0].flags = 0;
+	msg[0].len = length + 1;
+	msg[0].buf = buf;
+
 	buf[0] = addr & MASK_8BIT;
 	memcpy(&buf[1], &data[0], length);
 
@@ -1103,7 +1105,7 @@ static int synaptics_rmi4_i2c_write(struct synaptics_rmi4_data *rmi4_data,
 
 exit:
 	mutex_unlock(&(rmi4_data->rmi4_io_ctrl_mutex));
-
+	kfree(buf);
 	return retval;
 }
 
