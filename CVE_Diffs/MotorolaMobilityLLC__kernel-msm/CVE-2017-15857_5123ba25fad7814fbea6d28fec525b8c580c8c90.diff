MotorolaMobilityLLC__kernel-msm
commit 5123ba25fad7814fbea6d28fec525b8c580c8c90
Author:     Haibin Liu <haibinl@codeaurora.org>
AuthorDate: Thu Dec 28 20:42:37 2017 +0800
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Tue May 29 07:03:06 2018 -0500

    msm: sensor: actuator: fix out of bound read for region params
    
    Issue:
    the region index is not validated against the region size.
    this cause out-of-bound read on the KASAN kernel.
    
    Fix:
    Add restriction that region index smaller than region size.
    
    Bug-id: A-65122765
    CRs-Fixed: 2153841
    CVE-fixed: CVE-2017-15857
    Mot-CRs-fixed: (CR)
    
    Change-Id: I141bba45662769f0661c947fb642c2671578f32e
    Signed-off-by: Haibin Liu <haibinl@codeaurora.org>
    (cherry picked from commit f0a86d246d4a4403aec00567ed99d1b47d857ec4)
    Reviewed-on: https://gerrit.mot.com/1168559
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    Reviewed-on: https://gerrit.mot.com/1170751
    Reviewed-by: Varun Shrivastava <varunshrivastava@motorola.com>
    Reviewed-by: Anandappan Chakravarthy <pjwt34@motorola.com>
    (cherry picked from commit 516eb244b221e37089934e5c061efb6f4814b9b9)

diff --git a/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c b/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c
index bbaaab2c215e..6ddc924b19d2 100644
--- a/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c
+++ b/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2011-2016, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2011-2018, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -649,6 +649,8 @@ static int32_t msm_actuator_move_focus(
 		a_ctrl->curr_step_pos, dest_step_pos, curr_lens_pos);
 
 	while (a_ctrl->curr_step_pos != dest_step_pos) {
+		if (a_ctrl->curr_region_index >= a_ctrl->region_size)
+			break;
 		step_boundary =
 			a_ctrl->region_params[a_ctrl->curr_region_index].
 			step_bound[dir];
@@ -769,6 +771,8 @@ static int32_t msm_actuator_bivcm_move_focus(
 		a_ctrl->curr_step_pos, dest_step_pos, curr_lens_pos);
 
 	while (a_ctrl->curr_step_pos != dest_step_pos) {
+		if (a_ctrl->curr_region_index >= a_ctrl->region_size)
+			break;
 		step_boundary =
 			a_ctrl->region_params[a_ctrl->curr_region_index].
 			step_bound[dir];
