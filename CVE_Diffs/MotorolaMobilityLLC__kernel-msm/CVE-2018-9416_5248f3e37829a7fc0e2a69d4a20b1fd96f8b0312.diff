MotorolaMobilityLLC__kernel-msm
commit 5248f3e37829a7fc0e2a69d4a20b1fd96f8b0312
Author:     Johannes Thumshirn <jthumshirn@suse.de>
AuthorDate: Mon Jun 11 10:54:34 2018 +0530
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Tue Dec 3 10:02:04 2019 +0800

    UPSTREAM: scsi: sg: don't return bogus Sg_requests
    
    If the list search in sg_get_rq_mark() fails to find a valid request, we
    return a bogus element. This then can later lead to a GPF in
    sg_remove_scat().
    
    So don't return bogus Sg_requests in sg_get_rq_mark() but NULL in case
    the list search doesn't find a valid request.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2018-9416
    Bug: 79090045
    
    Change-Id: If95d1a8eef3748c9937201e524184b89a5eaaf2e
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Doug Gilbert <dgilbert@interlog.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Acked-by: Doug Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Chenbo Feng <fengc@google.com>
    (cherry picked from commit 48ae8484e9fc324b4968d33c585e54bc98e44d61)
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1189759
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Shi-Yong Li <a22381@motorola.com>
    Reviewed-by: Ling Jin <lingjin@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/scsi/sg.c b/drivers/scsi/sg.c
index c28231635326..8f3cb9a76fcf 100644
--- a/drivers/scsi/sg.c
+++ b/drivers/scsi/sg.c
@@ -2054,11 +2054,12 @@ sg_get_rq_mark(Sg_fd * sfp, int pack_id)
 		if ((1 == resp->done) && (!resp->sg_io_owned) &&
 		    ((-1 == pack_id) || (resp->header.pack_id == pack_id))) {
 			resp->done = 2;	/* guard against other readers */
-			break;
+			write_unlock_irqrestore(&sfp->rq_list_lock, iflags);
+			return resp;
 		}
 	}
 	write_unlock_irqrestore(&sfp->rq_list_lock, iflags);
-	return resp;
+	return NULL;
 }
 
 /* always adds to end of list */
