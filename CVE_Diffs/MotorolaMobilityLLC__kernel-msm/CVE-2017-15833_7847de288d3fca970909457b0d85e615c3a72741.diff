MotorolaMobilityLLC__kernel-msm
commit 7847de288d3fca970909457b0d85e615c3a72741
Author:     Archana Sathyakumar <asathyak@codeaurora.org>
AuthorDate: Fri Feb 2 11:49:45 2018 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Mon Feb 26 01:12:43 2018 -0600

    msm-core: Ensure the userspace data is copied before access
    
    Userspace data is directly used without copying it to kernel memory.
    Ensure all the data reads within ioctl happen from the kernel memory.
    
    CVE-fixed: CVE-2017-15833
    Mot-CRs-fixed: (CR)
    CRs-Fixed: 2059835
    
    Change-Id: I17f6c0c4675e64e121c166b0a062e83a4c5c9757
    Signed-off-by: Archana Sathyakumar <asathyak@codeaurora.org>
    Reviewed-on: https://gerrit.mot.com/1128937
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit 6ee4bcf47b7d1806338b1dbb2021b47ebae6771f)

diff --git a/drivers/power/qcom/msm-core.c b/drivers/power/qcom/msm-core.c
index eda019629199..df26e69de12e 100644
--- a/drivers/power/qcom/msm-core.c
+++ b/drivers/power/qcom/msm-core.c
@@ -350,10 +350,14 @@ static int update_userspace_power(struct sched_params __user *argp)
 	int cpu;
 	struct cpu_activity_info *node;
 	struct cpu_static_info *sp, *clear_sp;
-	int mpidr = (argp->cluster << 8);
-	int cpumask = argp->cpumask;
+	int cpumask, cluster, mpidr;
 
-	pr_debug("cpumask %d, cluster: %d\n", argp->cpumask, argp->cluster);
+	get_user(cpumask, &argp->cpumask);
+	get_user(cluster, &argp->cluster);
+	mpidr = cluster << 8;
+
+	pr_debug("%s: cpumask %d, cluster: %d\n", __func__, cpumask,
+					cluster);
 	for (i = 0; i < MAX_CORES_PER_CLUSTER; i++, cpumask >>= 1) {
 		if (!(cpumask & 0x01))
 			continue;
@@ -399,11 +403,11 @@ static int update_userspace_power(struct sched_params __user *argp)
 	 * argp->cpumask within the cluster (argp->cluster)
 	 */
 	spin_lock(&update_lock);
-	cpumask = argp->cpumask;
+	get_user(cpumask, &argp->cpumask);
 	for (i = 0; i < MAX_CORES_PER_CLUSTER; i++, cpumask >>= 1) {
 		if (!(cpumask & 0x01))
 			continue;
-		mpidr = (argp->cluster << CLUSTER_OFFSET_FOR_MPIDR);
+		mpidr = (cluster << CLUSTER_OFFSET_FOR_MPIDR);
 		mpidr |= i;
 		for_each_possible_cpu(cpu) {
 			if (!(cpu_logical_map(cpu) == mpidr))
