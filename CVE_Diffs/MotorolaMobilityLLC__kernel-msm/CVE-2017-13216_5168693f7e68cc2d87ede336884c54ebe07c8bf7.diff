MotorolaMobilityLLC__kernel-msm
commit 5168693f7e68cc2d87ede336884c54ebe07c8bf7
Author:     Viktor Slavkovic <viktors@google.com>
AuthorDate: Thu Dec 7 12:53:40 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Sat Feb 3 02:35:54 2018 -0600

    staging: android: ashmem: fix a race condition in ASHMEM_SET_SIZE ioctl
    
    A lock-unlock is missing in ASHMEM_SET_SIZE ioctl which can result in a
    race condition when mmap is called. After the !asma->file check, before
    setting asma->size, asma->file can be set in mmap. That would result in
    having different asma->size than the mapped memory size. Combined with
    ASHMEM_UNPIN ioctl and shrinker invocation, this can result in memory
    corruption.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-13216
    Bug: 66954097
    
    Signed-off-by: Viktor Slavkovic <viktors@google.com>
    Change-Id: I268225133f96fde0fadd1ec621aafef27d392d65
    Signed-off-by: amarenr <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1101056
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/staging/android/ashmem.c b/drivers/staging/android/ashmem.c
index 411072fc8d2d..21b822e88ad5 100644
--- a/drivers/staging/android/ashmem.c
+++ b/drivers/staging/android/ashmem.c
@@ -789,10 +789,12 @@ static long ashmem_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 		break;
 	case ASHMEM_SET_SIZE:
 		ret = -EINVAL;
+		mutex_lock(&ashmem_mutex);
 		if (!asma->file) {
 			ret = 0;
 			asma->size = (size_t) arg;
 		}
+		mutex_unlock(&ashmem_mutex);
 		break;
 	case ASHMEM_GET_SIZE:
 		ret = asma->size;
