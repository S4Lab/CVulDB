MotorolaMobilityLLC__kernel-msm
commit ca96617df199ceec0abfd9863053bc36f8ada072
Author:     annamraj <annamraj@codeaurora.org>
AuthorDate: Wed Jul 19 16:52:55 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Thu Dec 14 23:30:40 2017 -0600

    msm: camera: Make use of mutex lock to avoid race condition
    
    Make use of mutex lock to access IOCTL so that two threads
    can avoid race condition.
    
    CRs-fixed: 2060377
    CVE-fixed: CVE-2017-11045
    Mot-Crs-fixed: (CR)
    
    Change-Id: I00db78a42c86eef8a157b5b3547e4ca0006b0853
    Signed-off-by: annamraj <annamraj@codeaurora.org>
    Signed-off-by: Srikanth A R <arsrikan@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1055905
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit e1fe83ef475576b4acdd1cb53a0bba55cc634d90)

diff --git a/drivers/media/platform/msm/camera_v2/fd/msm_fd_dev.c b/drivers/media/platform/msm/camera_v2/fd/msm_fd_dev.c
index 3d5dd3e49407..1377eb27eba8 100644
--- a/drivers/media/platform/msm/camera_v2/fd/msm_fd_dev.c
+++ b/drivers/media/platform/msm/camera_v2/fd/msm_fd_dev.c
@@ -1055,14 +1055,18 @@ static int msm_fd_s_ctrl(struct file *file, void *fh, struct v4l2_control *a)
 			a->value = ctx->format.size->work_size;
 		break;
 	case V4L2_CID_FD_WORK_MEMORY_FD:
+		mutex_lock(&ctx->fd_device->recovery_lock);
 		if (ctx->work_buf.fd != -1)
 			msm_fd_hw_unmap_buffer(&ctx->work_buf);
 		if (a->value >= 0) {
 			ret = msm_fd_hw_map_buffer(&ctx->mem_pool,
 				a->value, &ctx->work_buf);
-			if (ret < 0)
+			if (ret < 0) {
+				mutex_unlock(&ctx->fd_device->recovery_lock);
 				return ret;
+			}
 		}
+		mutex_unlock(&ctx->fd_device->recovery_lock);
 		break;
 	default:
 		return -EINVAL;
diff --git a/drivers/media/platform/msm/camera_v2_2016/fd/msm_fd_dev.c b/drivers/media/platform/msm/camera_v2_2016/fd/msm_fd_dev.c
index 3d5dd3e49407..1377eb27eba8 100644
--- a/drivers/media/platform/msm/camera_v2_2016/fd/msm_fd_dev.c
+++ b/drivers/media/platform/msm/camera_v2_2016/fd/msm_fd_dev.c
@@ -1055,14 +1055,18 @@ static int msm_fd_s_ctrl(struct file *file, void *fh, struct v4l2_control *a)
 			a->value = ctx->format.size->work_size;
 		break;
 	case V4L2_CID_FD_WORK_MEMORY_FD:
+		mutex_lock(&ctx->fd_device->recovery_lock);
 		if (ctx->work_buf.fd != -1)
 			msm_fd_hw_unmap_buffer(&ctx->work_buf);
 		if (a->value >= 0) {
 			ret = msm_fd_hw_map_buffer(&ctx->mem_pool,
 				a->value, &ctx->work_buf);
-			if (ret < 0)
+			if (ret < 0) {
+				mutex_unlock(&ctx->fd_device->recovery_lock);
 				return ret;
+			}
 		}
+		mutex_unlock(&ctx->fd_device->recovery_lock);
 		break;
 	default:
 		return -EINVAL;
