MotorolaMobilityLLC__kernel-msm
commit a6496fde5f706ac7744057cd62fca66d205d8dc8
Author:     Srikanth A R <arsrikan@motorola.com>
AuthorDate: Thu Oct 20 18:31:30 2016 +0530
Commit:     chenlh4 <chenlh4@lenovo.com>
CommitDate: Tue Nov 28 20:31:47 2017 +0800

    msm: camera: Prevent potential heap overflow vulnerability
    
    In the msm_cpp_cfg_frame function, the new_frame->num_strips variable
    is not properly validated leading to a potential heap overflow
    vulnerability.The fix is designed to add additional bounds checks to
    prevent the potential heap overflow vulnerability.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2016-6739
    
    Change-Id: I6bc8dca82a0c27e552b3d6f286831162155960ee
    Signed-off-by: Srikanth A R <arsrikan@motorola.com>
    Reviewed-on: https://gerrit.mot.com/910756
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c b/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c
index caf221d90881..736fd42e17a7 100644
--- a/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c
+++ b/drivers/media/platform/msm/camera_v2_2016/pproc/cpp/msm_cpp.c
@@ -2274,21 +2274,19 @@ static int msm_cpp_cfg_frame(struct cpp_device *cpp_dev,
 		return -EINVAL;
 	}
 
-	if (!new_frame->partial_frame_indicator) {
-		if (cpp_frame_msg[new_frame->msg_len - 1] !=
-			MSM_CPP_MSG_ID_TRAILER) {
-			pr_err("Invalid frame message\n");
-			return -EINVAL;
-		}
+	if (cpp_frame_msg[new_frame->msg_len - 1] !=
+		MSM_CPP_MSG_ID_TRAILER) {
+		pr_err("Invalid frame message\n");
+		return -EINVAL;
+	}
 
-		if ((stripe_base + new_frame->num_strips * stripe_size + 1) !=
-			new_frame->msg_len) {
-			pr_err("Invalid frame message,len=%d,expected=%d\n",
-				new_frame->msg_len,
-				(stripe_base +
-				new_frame->num_strips * stripe_size + 1));
-			return -EINVAL;
-		}
+	if ((stripe_base + new_frame->num_strips * stripe_size + 1) !=
+		new_frame->msg_len) {
+		pr_err("Invalid frame message,len=%d,expected=%d\n",
+			new_frame->msg_len,
+			(stripe_base +
+			new_frame->num_strips * stripe_size + 1));
+		return -EINVAL;
 	}
 
 	if (cpp_dev->iommu_state != CPP_IOMMU_STATE_ATTACHED) {
