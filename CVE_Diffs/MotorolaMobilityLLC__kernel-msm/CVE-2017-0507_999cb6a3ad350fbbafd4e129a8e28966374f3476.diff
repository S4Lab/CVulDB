MotorolaMobilityLLC__kernel-msm
commit 999cb6a3ad350fbbafd4e129a8e28966374f3476
Author:     Daniel Rosenberg <drosen@google.com>
AuthorDate: Tue Feb 14 14:18:40 2017 +0530
Commit:     Fan Hang <hangfan1@lenovo.com>
CommitDate: Tue Oct 17 09:27:04 2017 +0800

    ANDROID: ion: check for kref overflow
    
    Userspace can cause the kref to handles to increment
    arbitrarily high. Ensure it does not overflow.
    
    Signed-off-by: Daniel Rosenberg <drosen@google.com>
    
    Mot-CRs-fixed:(CR)
    CVE-Fixed:CVE-2017-0507
    Bug: 31992382
    Test: See bug for poc
    Change-Id: I6bff1df385742b1d836d43180dc87fadcea80782
    Signed-off-by: Amarendra Reddy <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/950731
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit b938f59dd8f24cc6184c7ef98b375d4517c11c99)
    Reviewed-on: https://gerrit.mot.com/971711
    Reviewed-by: jinyou liu <liujy7@motorola.com>
    SLTApproved: jinyou liu <liujy7@motorola.com>
    Submit-Approved: jinyou liu <liujy7@motorola.com>

diff --git a/drivers/staging/android/ion/ion.c b/drivers/staging/android/ion/ion.c
index bd8dcbfb3f20..d4a522a44e78 100755
--- a/drivers/staging/android/ion/ion.c
+++ b/drivers/staging/android/ion/ion.c
@@ -16,6 +16,7 @@
  *
  */
 
+#include <linux/atomic.h>
 #include <linux/err.h>
 #include <linux/file.h>
 #include <linux/freezer.h>
@@ -410,6 +411,15 @@ static void ion_handle_get(struct ion_handle *handle)
 	kref_get(&handle->ref);
 }
 
+/* Must hold the client lock */
+static struct ion_handle *ion_handle_get_check_overflow(struct ion_handle *handle)
+{
+	if (atomic_read(&handle->ref.refcount) + 1 == 0)
+		return ERR_PTR(-EOVERFLOW);
+	ion_handle_get(handle);
+	return handle;
+}
+
 static int ion_handle_put_nolock(struct ion_handle *handle)
 {
 	int ret;
@@ -456,9 +466,9 @@ static struct ion_handle *ion_handle_get_by_id_nolock(struct ion_client *client,
 
 	handle = idr_find(&client->idr, id);
 	if (handle)
-		ion_handle_get(handle);
+		return ion_handle_get_check_overflow(handle);
 
-	return handle ? handle : ERR_PTR(-EINVAL);
+	return ERR_PTR(-EINVAL);
 }
 
 struct ion_handle *ion_handle_get_by_id(struct ion_client *client,
@@ -1412,7 +1422,7 @@ struct ion_handle *ion_import_dma_buf(struct ion_client *client, int fd)
 	/* if a handle exists for this buffer just take a reference to it */
 	handle = ion_handle_lookup(client, buffer);
 	if (!IS_ERR(handle)) {
-		ion_handle_get(handle);
+		handle = ion_handle_get_check_overflow(handle);
 		mutex_unlock(&client->lock);
 		goto end;
 	}
