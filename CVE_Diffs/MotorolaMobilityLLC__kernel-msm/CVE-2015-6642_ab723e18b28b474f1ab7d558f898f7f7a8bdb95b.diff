MotorolaMobilityLLC__kernel-msm
commit ab723e18b28b474f1ab7d558f898f7f7a8bdb95b
Author:     Arun Kumar Neelakantam <aneela@codeaurora.org>
AuthorDate: Wed Jan 27 18:46:01 2016 +0530
Commit:     Wu, Meng-Hui <menghui_wu@asus.com>
CommitDate: Tue May 10 12:17:27 2016 +0800

    net: ipc_router: fix leak of kernel memory to userspace
    
    The service info structure is allocated with uninitialized memory for the
    max number of services and returns the complete structure to the usersapce
    resulting in the information leak if lookup operation finds less number of
    services than the requested number.
    
    Check the minimum of requested and available services and copy the minimum
    information to the user-space.
    CVE: CVE-2015-6642
    Bug: ANDROID-24157888
    
    CRs-Fixed: 965934
    Change-Id: Ic97f875855fdc6440c1db1d8d0338ee8b03a9d0a
    Signed-off-by: Arun Kumar Neelakantam <aneela@codeaurora.org>
    Reviewed-on: http://mcrd1-22-pc.corpnet.asus/code-review/master/229017
    Reviewed-by: allen1_huang <allen1_huang@asus.com>
    Tested-by: allen1_huang <allen1_huang@asus.com>
    Reviewed-on: http://mcrd1-22-pc.corpnet.asus/code-review/master/229730
    Reviewed-by: Jupiter Chen <jupiter_chen@asus.com>
    Tested-by: Jupiter Chen <jupiter_chen@asus.com>
    Reviewed-by: Wu, Meng-Hui <menghui_wu@asus.com>

diff --git a/net/ipc_router/ipc_router_socket.c b/net/ipc_router/ipc_router_socket.c
index 9dbbe618dc20..e287a88aa450 100644
--- a/net/ipc_router/ipc_router_socket.c
+++ b/net/ipc_router/ipc_router_socket.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2011-2014, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2011-2016, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -519,13 +519,18 @@ static int msm_ipc_router_ioctl(struct socket *sock,
 
 		ret = copy_to_user((void *)arg, &server_arg,
 				   sizeof(server_arg));
-		if (srv_info_sz) {
+
+		n = min(server_arg.num_entries_found,
+			server_arg.num_entries_in_array);
+
+		if (ret == 0 && n) {
 			ret = copy_to_user((void *)(arg + sizeof(server_arg)),
-					   srv_info, srv_info_sz);
-			if (ret)
-				ret = -EFAULT;
-			kfree(srv_info);
+					   srv_info, n * sizeof(*srv_info));
 		}
+
+		if (ret)
+			ret = -EFAULT;
+		kfree(srv_info);
 		break;
 
 	case IPC_ROUTER_IOCTL_BIND_CONTROL_PORT:
