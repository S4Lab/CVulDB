MotorolaMobilityLLC__kernel-msm
commit ad7567eb0d3aac7665ea525b04e673eb64299cfa
Author:     Neeraj Soni <neersoni@codeaurora.org>
AuthorDate: Mon Nov 28 18:23:33 2016 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Tue May 2 06:36:15 2017 -0500

    qcrypto: protect potential integer overflow.
    
    Adding user passed parameters without check might
    lead to Integer overflow and unpredictable system
    behaviour.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2016-8418
    CRs-Fixed: 1091408
    
    Change-Id: Iaf8259e3c4a157e1790f1447b1b62a646988b7c4
    Signed-off-by: Neeraj Soni <neersoni@codeaurora.org>
    Signed-off-by: amarenr <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/943832
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/drivers/crypto/msm/qce50.c b/drivers/crypto/msm/qce50.c
index c4334c9d05d9..686b62b8d583 100644
--- a/drivers/crypto/msm/qce50.c
+++ b/drivers/crypto/msm/qce50.c
@@ -4425,6 +4425,12 @@ int qce_aead_req(void *handle, struct qce_req *q_req)
 	else
 		q_req->cryptlen = areq->cryptlen - authsize;
 
+	if ((q_req->cryptlen > UINT_MAX - areq->assoclen) ||
+		(q_req->cryptlen + areq->assoclen > UINT_MAX - ivsize)) {
+			pr_err("Integer overflow on total aead req length.\n");
+			return -EINVAL;
+	}
+
 	totallen = q_req->cryptlen + areq->assoclen + ivsize;
 
 	if (pce_dev->support_cmd_dscr) {
