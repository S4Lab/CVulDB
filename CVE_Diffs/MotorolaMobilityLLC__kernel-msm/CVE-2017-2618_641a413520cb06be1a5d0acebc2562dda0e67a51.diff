MotorolaMobilityLLC__kernel-msm
commit 641a413520cb06be1a5d0acebc2562dda0e67a51
Author:     Stephen Smalley <sds@tycho.nsa.gov>
AuthorDate: Tue Jan 31 11:54:04 2017 -0500
Commit:     Blagovest Kolenichev <bkolenichev@codeaurora.org>
CommitDate: Wed Sep 20 05:13:11 2017 -0700

    BACKPORT: UPSTREAM: selinux: fix off-by-one in setprocattr
    
    SELinux tries to support setting/clearing of /proc/pid/attr attributes
    from the shell by ignoring terminating newlines and treating an
    attribute value that begins with a NUL or newline as an attempt to
    clear the attribute.  However, the test for clearing attributes has
    always been wrong; it has an off-by-one error, and this could further
    lead to reading past the end of the allocated buffer since commit
    bb646cdb12e75d82258c2f2e7746d5952d3e321a ("proc_pid_attr_write():
    switch to memdup_user()").  Fix the off-by-one error.
    
    Even with this fix, setting and clearing /proc/pid/attr attributes
    from the shell is not straightforward since the interface does not
    support multiple write() calls (so shells that write the value and
    newline separately will set and then immediately clear the attribute,
    requiring use of echo -n to set the attribute), whereas trying to use
    echo -n "" to clear the attribute causes the shell to skip the
    write() call altogether since POSIX says that a zero-length write
    causes no side effects. Thus, one must use echo -n to set and echo
    without -n to clear, as in the following example:
    $ echo -n unconfined_u:object_r:user_home_t:s0 > /proc/$$/attr/fscreate
    $ cat /proc/$$/attr/fscreate
    unconfined_u:object_r:user_home_t:s0
    $ echo "" > /proc/$$/attr/fscreate
    $ cat /proc/$$/attr/fscreate
    
    Note the use of /proc/$$ rather than /proc/self, as otherwise
    the cat command will read its own attribute value, not that of the shell.
    
    There are no users of this facility to my knowledge; possibly we
    should just get rid of it.
    
    UPDATE: Upon further investigation it appears that a local process
    with the process:setfscreate permission can cause a kernel panic as a
    result of this bug.  This patch fixes CVE-2017-2618.
    
    Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
    [PM: added the update about CVE-2017-2618 to the commit description]
    Cc: stable@vger.kernel.org # 3.5: d6ea83ec6864e
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Bug: 35136920
    Upstream commit: 0c461cb727d146c9ef2d3e86214f498b78b7d125
    
    Change-Id: I41ba111bd79f6f60306316eb6de0425b1b7d8d19
    Git-commit: e24d71029751374db24c2e912ea04e1f14fa084b
    Git-repo: https://android.googlesource.com/kernel/common.git
    Signed-off-by: Srinivasarao P <spathi@codeaurora.org>

diff --git a/security/selinux/hooks.c b/security/selinux/hooks.c
index 79f83959ea07..1e832e539503 100644
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@ -5571,7 +5571,7 @@ static int selinux_setprocattr(struct task_struct *p,
 		return error;
 
 	/* Obtain a SID for the context, if one was specified. */
-	if (size && str[1] && str[1] != '\n') {
+	if (size && str[0] && str[0] != '\n') {
 		if (str[size-1] == '\n') {
 			str[size-1] = 0;
 			size--;
