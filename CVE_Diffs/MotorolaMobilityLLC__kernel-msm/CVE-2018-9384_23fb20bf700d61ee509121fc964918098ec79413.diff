MotorolaMobilityLLC__kernel-msm
commit 23fb20bf700d61ee509121fc964918098ec79413
Author:     Mark Rutland <mark.rutland@arm.com>
AuthorDate: Thu Nov 3 20:23:03 2016 +0000
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Mon Jun 18 02:19:56 2018 -0500

    BACKPORT: arm64: thread_info remove stale items
    
    We have a comment claiming __switch_to() cares about where cpu_context
    is located relative to cpu_domain in thread_info. However arm64 has
    never had a thread_info::cpu_domain field, and neither __switch_to nor
    cpu_switch_to care where the cpu_context field is relative to others.
    
    Additionally, the init_thread_info alias is never used anywhere in the
    kernel, and will shortly become problematic when thread_info is moved
    into task_struct.
    
    This patch removes both.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2018-9384
    Bug: 74356909
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    
    This is a modification of Mark Rutland's original patch.
    arch/arm64/kernel/setup.c has been modified to use ttbr0 according to
    whether or not CONFIG_THREAD_INFO_IN_TASK is used. init_thread_info is
    removed only if CONFIG_THREAD_INFO_IN_TASK is not used.
    
    Bug: 66351489
    Change-Id: Iaac57d8e250a34d5bce157ce90ff958f593b6a1c
    (cherry picked from commit dcbe02855f048fdf1e13ebc697e83c8d297f9f5a)
    Signed-off-by: Zubin Mithra <zsm@google.com>
    Reviewed-on: https://gerrit.mot.com/1181652
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm64/include/asm/thread_info.h b/arch/arm64/include/asm/thread_info.h
index f199549ef755..8fee2231b596 100644
--- a/arch/arm64/include/asm/thread_info.h
+++ b/arch/arm64/include/asm/thread_info.h
@@ -41,7 +41,6 @@ typedef unsigned long mm_segment_t;
 
 /*
  * low level task data that entry.S needs immediate access to.
- * __switch_to() assumes cpu_context follows immediately after cpu_domain.
  */
 struct thread_info {
 	unsigned long		flags;		/* low level flags */
@@ -67,7 +66,10 @@ struct thread_info {
 	.addr_limit	= KERNEL_DS,					\
 }
 
+#ifndef CONFIG_THREAD_INFO_IN_TASK
 #define init_thread_info	(init_thread_union.thread_info)
+#endif
+
 #define init_stack		(init_thread_union.stack)
 
 /*
diff --git a/arch/arm64/kernel/setup.c b/arch/arm64/kernel/setup.c
index 0bfd0484edb6..906bc7a1d228 100644
--- a/arch/arm64/kernel/setup.c
+++ b/arch/arm64/kernel/setup.c
@@ -362,8 +362,12 @@ void __init setup_arch(char **cmdline_p)
 	 * faults in case uaccess_enable() is inadvertently called by the init
 	 * thread.
 	 */
+#ifdef CONFIG_THREAD_INFO_IN_TASK
+	init_task.thread_info.ttbr0 = virt_to_phys(empty_zero_page);
+#else
 	init_thread_info.ttbr0 = virt_to_phys(empty_zero_page);
 #endif
+#endif
 
 #ifdef CONFIG_VT
 #if defined(CONFIG_VGA_CONSOLE)
