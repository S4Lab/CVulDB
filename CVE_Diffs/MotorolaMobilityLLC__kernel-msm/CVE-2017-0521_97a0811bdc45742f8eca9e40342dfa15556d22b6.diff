MotorolaMobilityLLC__kernel-msm
commit 97a0811bdc45742f8eca9e40342dfa15556d22b6
Author:     Kumar Behera <mohanb@codeaurora.org>
AuthorDate: Fri Dec 9 09:55:00 2016 -0800
Commit:     Carlos Pinho <cpinho@motorola.com>
CommitDate: Thu Mar 16 14:52:57 2017 -0500

    msm: cpp: Fix for integer overflow in cpp
    
    Due to integer overflow ,the bound check in config frame function
    may pass and this may allow user to access invalid buffer. This
    fix takes care of proper bound and don't allow integer overflow.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-0521
    CRs-Fixed: 1097709
    
    Change-Id: I8c600279f5bda0924a45aee9095eb91ffcd646bb
    Signed-off-by: Kumar Behera <mohanb@codeaurora.org>
    Signed-off-by: Srikanth A R <arsrikan@motorola.com>
    Reviewed-on: https://gerrit.mot.com/950288
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Varun Shrivastava <varunshrivastava@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/drivers/media/platform/msm/camera_v2/pproc/cpp/msm_cpp.c b/drivers/media/platform/msm/camera_v2/pproc/cpp/msm_cpp.c
index c363b13ea4e0..6acaa8a2bdb6 100644
--- a/drivers/media/platform/msm/camera_v2/pproc/cpp/msm_cpp.c
+++ b/drivers/media/platform/msm/camera_v2/pproc/cpp/msm_cpp.c
@@ -1580,7 +1580,7 @@ static int msm_cpp_cfg_frame(struct cpp_device *cpp_dev,
 	unsigned long tnr_scratch_buffer0, tnr_scratch_buffer1;
 	uint16_t num_stripes = 0;
 	struct msm_buf_mngr_info buff_mgr_info, dup_buff_mgr_info;
-	int32_t stripe_base = 0;
+	uint32_t stripe_base = 0;
 	int32_t in_fd;
 	int32_t i = 0;
 
@@ -1602,6 +1602,13 @@ static int msm_cpp_cfg_frame(struct cpp_device *cpp_dev,
 		return -EINVAL;
 	}
 
+	if (stripe_base == UINT_MAX || new_frame->num_strips >
+		(UINT_MAX - 1 - stripe_base) / stripe_size) {
+		pr_err("Invalid frame message,num_strips %d is large\n",
+			new_frame->num_strips);
+		return -EINVAL;
+	}
+
 	in_phyaddr = msm_cpp_fetch_buffer_info(cpp_dev,
 		&new_frame->input_buffer_info,
 		((new_frame->input_buffer_info.identity >> 16) & 0xFFFF),
