MotorolaMobilityLLC__kernel-msm
commit 0ea25a79c7b661275b92e58189dfe6c4ee865d87
Author:     Biswajit Paul <biswajitpaul@codeaurora.org>
AuthorDate: Mon Nov 28 16:57:13 2016 +0530
Commit:     Srikanth A R <arsrikan@motorola.com>
CommitDate: Wed Feb 15 01:44:24 2017 -0600

    msm: vidc: WARN_ON() reveals fuction addresses
    
    There is a security vulnerability where function addresses are
    printed in kernel message if WARN_ON() is invoked implicitly.
    WARN_ON() call is made explicit to avoid this issue.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-0452
    Bug: 32873615
    CRs-Fixed: 1093693
    
    Change-Id: Id13d12a94e9ac60445d47324d54fce0105d0a4ec
    Signed-off-by: Sanjay Singh <sisanj@codeaurora.org>
    Signed-off-by: Biswajit Paul <biswajitpaul@codeaurora.org>
    Signed-off-by: Srikanth A R <arsrikan@motorola.com>
    Reviewed-on: https://gerrit.mot.com/950297
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/drivers/media/platform/msm/vidc/msm_vidc.c b/drivers/media/platform/msm/vidc/msm_vidc.c
index 92be8f4471c0..e78f9c379a8f 100644
--- a/drivers/media/platform/msm/vidc/msm_vidc.c
+++ b/drivers/media/platform/msm/vidc/msm_vidc.c
@@ -1424,7 +1424,8 @@ static void cleanup_instance(struct msm_vidc_inst *inst)
 		debugfs_remove_recursive(inst->debugfs_root);
 
 		mutex_lock(&inst->pending_getpropq.lock);
-		WARN_ON(!list_empty(&inst->pending_getpropq.list));
+		WARN_ON(!list_empty(&inst->pending_getpropq.list)
+			&& (msm_vidc_debug & VIDC_INFO));
 		mutex_unlock(&inst->pending_getpropq.lock);
 	}
 }
diff --git a/drivers/media/platform/msm/vidc/venus_hfi.c b/drivers/media/platform/msm/vidc/venus_hfi.c
index dc79b485907d..551dc69548d2 100644
--- a/drivers/media/platform/msm/vidc/venus_hfi.c
+++ b/drivers/media/platform/msm/vidc/venus_hfi.c
@@ -262,7 +262,7 @@ static int venus_hfi_acquire_regulator(struct regulator_info *rinfo)
 					rinfo->name);
 		}
 	}
-	WARN_ON(!regulator_is_enabled(rinfo->regulator));
+	WARN_ON(!regulator_is_enabled(rinfo->regulator) && (msm_vidc_debug & VIDC_INFO));
 	return rc;
 }
 
@@ -3954,7 +3954,7 @@ static int venus_hfi_disable_regulator(struct regulator_info *rinfo)
 disable_regulator_failed:
 
 	/* Bring attention to this issue */
-	WARN_ON(1);
+	WARN_ON(msm_vidc_debug & VIDC_INFO);
 	return rc;
 }
 
