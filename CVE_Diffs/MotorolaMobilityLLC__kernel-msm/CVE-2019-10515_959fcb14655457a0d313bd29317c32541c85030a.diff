MotorolaMobilityLLC__kernel-msm
commit 959fcb14655457a0d313bd29317c32541c85030a
Author:     Srinivasarao P <spathi@codeaurora.org>
AuthorDate: Tue Jan 8 13:52:13 2019 +0530
Commit:     chenyt9 <chenyt9@lenovo.com>
CommitDate: Mon Dec 9 16:57:15 2019 +0800

    iommu/iommu-debug: fix buffer overflows in debugfs read functions
    
    The kernel buffer 'ubuf' can overflow while copying data to user
    space in debugfs read functions. Fix it by limiting the length of
    data to be copied to userspace.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2019-10515
    CRs-Fixed: 2366038
    
    Change-Id: Ibb3d8c4fb637ddc0e63677ec2dff14a4cf8c0c73
    Signed-off-by: Srinivasarao P <spathi@codeaurora.org>
    Reviewed-on: https://gerrit.mot.com/1367132
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/iommu/iommu-debug.c b/drivers/iommu/iommu-debug.c
index 9a0aba0d8d59..8dc2867ee92a 100644
--- a/drivers/iommu/iommu-debug.c
+++ b/drivers/iommu/iommu-debug.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2015-2017, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2015-2017,2019, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -1288,19 +1288,21 @@ static ssize_t iommu_debug_attach_read(struct file *file, char __user *ubuf,
 {
 	struct iommu_debug_device *ddev = file->private_data;
 	char c[2];
+	size_t buflen = sizeof(c);
 
 	if (*offset)
 		return 0;
 
 	c[0] = ddev->domain ? '1' : '0';
 	c[1] = '\n';
-	if (copy_to_user(ubuf, &c, 2)) {
+	buflen = min(count, buflen);
+	if (copy_to_user(ubuf, &c, buflen)) {
 		pr_err("copy_to_user failed\n");
 		return -EFAULT;
 	}
 	*offset = 1;		/* non-zero means we're done */
 
-	return 2;
+	return buflen;
 }
 
 static const struct file_operations iommu_debug_attach_fops = {
@@ -1375,7 +1377,7 @@ static ssize_t iommu_debug_atos_read(struct file *file, char __user *ubuf,
 		snprintf(buf, 100, "%pa\n", &phys);
 	}
 
-	buflen = strlen(buf);
+	buflen = min(count, strlen(buf)+1);
 	if (copy_to_user(ubuf, buf, buflen)) {
 		pr_err("Couldn't copy_to_user\n");
 		retval = -EFAULT;
