MotorolaMobilityLLC__kernel-msm
commit 8e9b8042d21e1a68644b8a490785d155d208b1c6
Author:     Krishna Manikandan <mkrishn@codeaurora.org>
AuthorDate: Mon Sep 18 12:13:40 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Sat Feb 3 05:26:14 2018 -0600

    msm: mdss: Fix potential race condition in rotator
    
    There might be a possible race condition in rotator, where two
    threads can free same perf structures. Adding proper locking
    to avoid such race conditions.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-15826
    
    Change-Id: I4976da6f176df24da2ec86c4c1f176cc43aba05b
    Signed-off-by: Krishna Chaitanya Devarakonda <kdevarak@codeaurora.org>
    Signed-off-by: Krishna Manikandan <mkrishn@codeaurora.org>
    Signed-off-by: Ashwin Pathmudi <jfxr63@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1121837
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Bang Nguyen <bangnguyen@motorola.com>
    Reviewed-by: Shi-Yong Li <a22381@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/video/msm/mdss/mdss_rotator.c b/drivers/video/msm/mdss/mdss_rotator.c
index d5db31f86478..3501325226e2 100644
--- a/drivers/video/msm/mdss/mdss_rotator.c
+++ b/drivers/video/msm/mdss/mdss_rotator.c
@@ -1118,6 +1118,7 @@ static void mdss_rotator_release_from_work_distribution(
 		bool free_perf = false;
 		u32 wb_idx = entry->queue->hw->wb_id;
 
+		mutex_lock(&mgr->lock);
 		mutex_lock(&entry->perf->work_dis_lock);
 		if (entry->perf->work_distribution[wb_idx])
 			entry->perf->work_distribution[wb_idx]--;
@@ -1141,6 +1142,7 @@ static void mdss_rotator_release_from_work_distribution(
 			mdss_rotator_clk_ctrl(mgr, false);
 			entry->perf = NULL;
 		}
+		mutex_unlock(&mgr->lock);
 	}
 }
 
@@ -2037,7 +2039,6 @@ static int mdss_rotator_close_session(struct mdss_rot_mgr *mgr,
 	list_del_init(&perf->list);
 	mutex_unlock(&perf->work_dis_lock);
 	mutex_unlock(&private->perf_lock);
-	mutex_unlock(&mgr->lock);
 
 	if (offload_release_work)
 		goto done;
@@ -2050,6 +2051,7 @@ static int mdss_rotator_close_session(struct mdss_rot_mgr *mgr,
 done:
 	pr_debug("Closed session id:%u", id);
 	ATRACE_END(__func__);
+	mutex_unlock(&mgr->lock);
 	return 0;
 }
 
