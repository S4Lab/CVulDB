MotorolaMobilityLLC__kernel-msm
commit aa5fa122f32e278094490e84ef0fd7289fc1a054
Author:     Mark Rutland <mark.rutland@arm.com>
AuthorDate: Tue Jan 3 18:27:01 2017 +0000
Commit:     lulu2 <lulu2@lenovo.com>
CommitDate: Mon Jun 11 16:50:08 2018 +0800

    UPSTREAM: arm64: restore get_current() optimisation
    
    Commit c02433dd6de32f04 ("arm64: split thread_info from task stack")
    inverted the relationship between get_current() and
    current_thread_info(), with sp_el0 now holding the current task_struct
    rather than the current thead_info. The new implementation of
    get_current() prevents the compiler from being able to optimize repeated
    calls to either, resulting in a noticeable penalty in some
    microbenchmarks.
    
    This patch restores the previous optimisation by implementing
    get_current() in the same way as our old current_thread_info(), using a
    non-volatile asm statement.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2018-9384
    Bug: 74356909
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Reported-by: Davidlohr Bueso <dbueso@suse.de>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    
    Bug: 66351489
    Change-Id: I2eb1a931af685a457ae1176a6a1dab39366d02df
    (cherry picked from commit 9d84fb27fa135c99c9fe3de33628774a336a70a8)
    Signed-off-by: Zubin Mithra <zsm@google.com>
    Reviewed-on: https://gerrit.mot.com/1182525
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm64/include/asm/current.h b/arch/arm64/include/asm/current.h
index 2e61d21294ba..483a6c9d3e10 100644
--- a/arch/arm64/include/asm/current.h
+++ b/arch/arm64/include/asm/current.h
@@ -10,9 +10,17 @@
 #ifdef CONFIG_THREAD_INFO_IN_TASK
 struct task_struct;
 
+/*
+ * We don't use read_sysreg() as we want the compiler to cache the value where
+ * possible.
+ */
 static __always_inline struct task_struct *get_current(void)
 {
-	return (struct task_struct *)read_sysreg(sp_el0);
+	unsigned long sp_el0;
+
+	asm ("mrs %0, sp_el0" : "=r" (sp_el0));
+
+	return (struct task_struct *)sp_el0;
 }
 #define current get_current()
 #else
