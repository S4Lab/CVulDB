MotorolaMobilityLLC__kernel-msm
commit df5ba495abbff50ca4f338fce2e47be29a721c70
Author:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>
AuthorDate: Fri Mar 9 17:27:30 2018 +0530
Commit:     Jignesh Patel <jignesh@motorola.com>
CommitDate: Sun Mar 25 22:38:14 2018 -0500

    USB: core: harden cdc_parse_cdc_header
    
    Andrey Konovalov reported a possible out-of-bounds problem for the
    cdc_parse_cdc_header function.  He writes:
            It looks like cdc_parse_cdc_header() doesn't validate buflen
            before accessing buffer[1], buffer[2] and so on. The only check
            present is while (buflen > 0).
    
    So fix this issue up by properly validating the buffer length matches
    what the descriptor says it is.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-1653
    Bug: 69052594
    
    Change-Id: I5d2fb393c3e87df9c0c8d01dfde355f9b6554498
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1152991
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>

diff --git a/drivers/net/usb/usbnet.c b/drivers/net/usb/usbnet.c
index c2ea4e5666fb..9710cf71054a 100644
--- a/drivers/net/usb/usbnet.c
+++ b/drivers/net/usb/usbnet.c
@@ -1990,6 +1990,10 @@ int cdc_parse_cdc_header(struct usb_cdc_parsed_header *hdr,
 			elength = 1;
 			goto next_desc;
 		}
+		if ((buflen < elength) || (elength < 3)) {
+			dev_err(&intf->dev, "invalid descriptor buffer length\n");
+			break;
+		}
 		if (buffer[1] != USB_DT_CS_INTERFACE) {
 			dev_err(&intf->dev, "skipping garbage\n");
 			goto next_desc;
