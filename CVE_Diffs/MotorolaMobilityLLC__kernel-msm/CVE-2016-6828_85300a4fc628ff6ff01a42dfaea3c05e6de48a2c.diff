MotorolaMobilityLLC__kernel-msm
commit 85300a4fc628ff6ff01a42dfaea3c05e6de48a2c
Author:     Eric Dumazet <edumazet@google.com>
AuthorDate: Thu Oct 6 14:56:15 2016 +0530
Commit:     a7301c <a7301c@motorola.com>
CommitDate: Tue Oct 18 11:20:51 2016 -0500

    tcp: fix use after free in tcp_xmit_retransmit_queue()
    
    When tcp_sendmsg() allocates a fresh and empty skb, it puts it at the
    tail of the write queue using tcp_add_write_queue_tail()
    
    Then it attempts to copy user data into this fresh skb.
    
    If the copy fails, we undo the work and remove the fresh skb.
    
    Unfortunately, this undo lacks the change done to tp->highest_sack and
    we can leave a dangling pointer (to a freed skb)
    
    Later, tcp_xmit_retransmit_queue() can dereference this pointer and
    access freed memory. For regular kernels where memory is not unmapped,
    this might cause SACK bugs because tcp_highest_sack_seq() is buggy,
    returning garbage instead of tp->snd_nxt, but with various debug
    features like CONFIG_DEBUG_PAGEALLOC, this can crash the kernel.
    
    This bug was found by Marco Grassi thanks to syzkaller.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed:CVE-2016-6828
    
    Change-Id: I1072c4528f399d8b8c5cc704afa4f2129c066d19
    Fixes: 6859d49475d4 ("[TCP]: Abstract tp->highest_sack accessing &
    point to next skb")
    Reported-by: Marco Grassi <marco.gra@gmail.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Ilpo JÃ¤rvinen <ilpo.jarvinen@helsinki.fi>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Reviewed-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Reviewed-on: https://gerrit.mot.com/906553
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Vijayakumar Gn <vijaygn@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit 1f4c29ac3e4e185a7d0719fd52857cbd3c6a8407)
    Reviewed-on: https://gerrit.mot.com/908980

diff --git a/include/net/tcp.h b/include/net/tcp.h
index b35a773acf29..638d2fe5393d 100644
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -1448,6 +1448,8 @@ static inline void tcp_check_send_head(struct sock *sk, struct sk_buff *skb_unli
 {
 	if (sk->sk_send_head == skb_unlinked)
 		sk->sk_send_head = NULL;
+	if (tcp_sk(sk)->highest_sack == skb_unlinked)
+		tcp_sk(sk)->highest_sack = NULL;
 }
 
 static inline void tcp_init_send_head(struct sock *sk)
