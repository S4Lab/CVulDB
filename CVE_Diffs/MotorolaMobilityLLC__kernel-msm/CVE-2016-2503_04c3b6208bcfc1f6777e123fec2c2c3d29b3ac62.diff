MotorolaMobilityLLC__kernel-msm
commit 04c3b6208bcfc1f6777e123fec2c2c3d29b3ac62
Author:     shunmin_wang <shunmin_wang@asus.com>
AuthorDate: Wed Jun 8 15:29:05 2016 +0800
Commit:     Carol_Jiang <carol_jiang@asus.com>
CommitDate: Mon Jun 20 10:39:14 2016 +0800

    anthias: secutiry patch for ANDROID-28084795 (CVE-2016-2503)
    
    Change-Id: Ic58bcaf01ae999c173a3ccd0523f79aafcca7267
    Reviewed-on: http://mcrd1-22-pc.corpnet.asus/code-review/master/236400
    Reviewed-by: shunmin_wang <shunmin_wang@asus.com>
    Tested-by: shunmin_wang <shunmin_wang@asus.com>

diff --git a/drivers/gpu/msm/kgsl_sync.c b/drivers/gpu/msm/kgsl_sync.c
index b4097a7b986f..8d12701186f9 100644
--- a/drivers/gpu/msm/kgsl_sync.c
+++ b/drivers/gpu/msm/kgsl_sync.c
@@ -402,12 +402,13 @@ long kgsl_ioctl_syncsource_create(struct kgsl_device_private *dev_priv,
 		goto out;
 	}
 
+	kref_init(&syncsource->refcount);
+	syncsource->private = private;
+
 	mutex_lock(&private->process_private_mutex);
 	id = idr_alloc(&private->syncsource_idr, syncsource, 1, 0, GFP_KERNEL);
 	if (id > 0) {
-		kref_init(&syncsource->refcount);
 		syncsource->id = id;
-		syncsource->private = private;
 
 		param->id = id;
 		ret = 0;
@@ -415,6 +416,8 @@ long kgsl_ioctl_syncsource_create(struct kgsl_device_private *dev_priv,
 		ret = id;
 	}
 	mutex_unlock(&private->process_private_mutex);
+	idr_preload_end();
+
 out:
 	if (ret) {
 		if (syncsource && syncsource->oneshot)
@@ -472,25 +475,24 @@ long kgsl_ioctl_syncsource_destroy(struct kgsl_device_private *dev_priv,
 {
 	struct kgsl_syncsource_destroy *param = data;
 	struct kgsl_syncsource *syncsource = NULL;
-	struct kgsl_process_private *private;
 
-	syncsource = kgsl_syncsource_get(dev_priv->process_priv,
-				     param->id);
+	struct kgsl_process_private *private = dev_priv->process_priv;
 
-	if (syncsource == NULL)
-		return -EINVAL;
+	mutex_lock(&private->process_private_mutex);
+	syncsource = idr_find(&private->syncsource_idr, param->id);
 
-	private = syncsource->private;
+	if (syncsource) {
+		idr_remove(&private->syncsource_idr, param->id);
+		syncsource->id = 0;
+	}
 
-	mutex_lock(&private->process_private_mutex);
-	idr_remove(&private->syncsource_idr, param->id);
-	syncsource->id = 0;
 	mutex_unlock(&private->process_private_mutex);
 
+	if (syncsource == NULL)
+		return -EINVAL;
+
 	/* put reference from syncsource creation */
 	kgsl_syncsource_put(syncsource);
-	/* put reference from getting the syncsource above */
-	kgsl_syncsource_put(syncsource);
 	return 0;
 }
 
