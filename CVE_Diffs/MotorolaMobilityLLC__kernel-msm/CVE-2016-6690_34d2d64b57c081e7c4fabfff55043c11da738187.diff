MotorolaMobilityLLC__kernel-msm
commit 34d2d64b57c081e7c4fabfff55043c11da738187
Author:     Yuan Lin <yualin@google.com>
AuthorDate: Wed Aug 17 10:03:11 2016 -0700
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Tue Dec 20 13:03:28 2016 -0600

    ASoC: check for null function pointer for dummy device read/write
    
    Adding check for null function pointer for dummy sound driver
    read/write to prevent kernel panic.
    
    Bug: 28838221
    Change-Id: I32548a7e37869a17a5f88c646ddbfb8243cadcc0
    Signed-off-by: Yuan Lin <yualin@google.com>
    Mot-CRs-fixed: IKSECURITY-1816
    CVE-Fixed:CVE-2016-6690
    Reviewed-on: https://gerrit.mot.com/900448
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Kiran Kumar Krishna <kiran@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit 97196f5d13c2d2e35bc6c79745028c8329caca36)
    Reviewed-on: https://gerrit.mot.com/921138
    Reviewed-by: Vrushali Prakash Bhosale <wkvq37@motorola.com>

diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index 12c88bb581d6..2ae71d470c81 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -2119,9 +2119,13 @@ unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg)
 {
 	unsigned int ret;
 
-	ret = codec->read(codec, reg);
-	dev_dbg(codec->dev, "read %x => %x\n", reg, ret);
-	trace_snd_soc_reg_read(codec, reg, ret);
+	if (codec->read) {
+		ret = codec->read(codec, reg);
+		dev_dbg(codec->dev, "read %x => %x\n", reg, ret);
+		trace_snd_soc_reg_read(codec, reg, ret);
+	} else {
+		ret = -EPERM;
+	}
 
 	return ret;
 }
@@ -2130,9 +2134,13 @@ EXPORT_SYMBOL_GPL(snd_soc_read);
 unsigned int snd_soc_write(struct snd_soc_codec *codec,
 			   unsigned int reg, unsigned int val)
 {
-	dev_dbg(codec->dev, "write %x = %x\n", reg, val);
-	trace_snd_soc_reg_write(codec, reg, val);
-	return codec->write(codec, reg, val);
+	if (codec->write) {
+		dev_dbg(codec->dev, "write %x = %x\n", reg, val);
+		trace_snd_soc_reg_write(codec, reg, val);
+		return codec->write(codec, reg, val);
+	} else {
+		return -EPERM;
+	}
 }
 EXPORT_SYMBOL_GPL(snd_soc_write);
 
