MotorolaMobilityLLC__kernel-msm
commit aca303db1f20f2425e3d22eafe84b899c51d0c3e
Author:     Linus Torvalds <torvalds@linux-foundation.org>
AuthorDate: Tue Jul 3 17:10:19 2018 -0700
Commit:     a7301c <a7301c@motorola.com>
CommitDate: Tue Feb 19 15:22:20 2019 -0600

    Fix up non-directory creation in SGID directories
    
    sgid directories have special semantics, making newly created files in
    the directory belong to the group of the directory, and newly created
    subdirectories will also become sgid.  This is historically used for
    group-shared directories.
    
    But group directories writable by non-group members should not imply
    that such non-group members can magically join the group, so make sure
    to clear the sgid bit on non-directories for non-members (but remember
    that sgid without group execute means "mandatory locking", just to
    confuse things even more).
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2018-13405
    BUG: 113452403
    
    Change-Id: Ie053aed59026a5cfebe05adc8890a8629c003167
    Reported-by: Jann Horn <jannh@google.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reviewed-on: https://gerrit.mot.com/1286961
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/fs/inode.c b/fs/inode.c
index c0d6b5b638f9..fc985baa2a87 100644
--- a/fs/inode.c
+++ b/fs/inode.c
@@ -1974,8 +1974,14 @@ void inode_init_owner(struct inode *inode, const struct inode *dir,
 	inode->i_uid = current_fsuid();
 	if (dir && dir->i_mode & S_ISGID) {
 		inode->i_gid = dir->i_gid;
+
+		/* Directories are special, and always inherit S_ISGID */
 		if (S_ISDIR(mode))
 			mode |= S_ISGID;
+		else if ((mode & (S_ISGID | S_IXGRP)) == (S_ISGID | S_IXGRP) &&
+			 !in_group_p(inode->i_gid) &&
+			 !capable_wrt_inode_uidgid(dir, CAP_FSETID))
+			mode &= ~S_ISGID;
 	} else
 		inode->i_gid = current_fsgid();
 	inode->i_mode = mode;
