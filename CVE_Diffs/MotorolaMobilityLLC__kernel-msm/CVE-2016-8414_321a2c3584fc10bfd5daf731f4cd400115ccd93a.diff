MotorolaMobilityLLC__kernel-msm
commit 321a2c3584fc10bfd5daf731f4cd400115ccd93a
Author:     Swetha Chikkaboraiah <schikk@codeaurora.org>
AuthorDate: Wed Nov 2 16:49:41 2016 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Mon Feb 27 00:36:33 2017 -0600

    qcom: scm: remove printing input arguments
    
    scm_call2 is printing the input arguments if TZ ret value is  < 0
    leading to information leak. Remove printing input arguments.
    
    Mot-CRs-fixed:IKSIMP-1057
    CVE-Fixed:CVE-2016-8414
    
    Change-Id: I614ef8f94858a0f978054306bfd46ecebd822e1f
    CRs-Fixed: 1076407
    Signed-off-by: Swetha Chikkaboraiah <schikk@codeaurora.org>
    Signed-off-by: amarenr <amarenr@motorola.com>
    Reviewed-on: https://gerrit.mot.com/939295
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit a3f271cff6c280aceb1378dbcd25eeaa2ce5b14e)

diff --git a/drivers/soc/qcom/scm.c b/drivers/soc/qcom/scm.c
index 795f33da63aa..d057328ffde7 100644
--- a/drivers/soc/qcom/scm.c
+++ b/drivers/soc/qcom/scm.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2010-2015, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2010-2016, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -644,10 +644,6 @@ int scm_call2(u32 fn_id, struct scm_desc *desc)
 
 		desc->ret[0] = desc->ret[1] = desc->ret[2] = 0;
 
-		pr_debug("scm_call: func id %#llx, args: %#x, %#llx, %#llx, %#llx, %#llx\n",
-			x0, desc->arginfo, desc->args[0], desc->args[1],
-			desc->args[2], desc->x5);
-
 		if (scm_version == SCM_ARMV8_64)
 			ret = __scm_call_armv8_64(x0, desc->arginfo,
 						  desc->args[0], desc->args[1],
@@ -667,10 +663,8 @@ int scm_call2(u32 fn_id, struct scm_desc *desc)
 	}  while (ret == SCM_V2_EBUSY && (retry_count++ < SCM_EBUSY_MAX_RETRY));
 
 	if (ret < 0)
-		pr_err("scm_call failed: func id %#llx, arginfo: %#x, args: %#llx, %#llx, %#llx, %#llx, ret: %d, syscall returns: %#llx, %#llx, %#llx\n",
-			x0, desc->arginfo, desc->args[0], desc->args[1],
-			desc->args[2], desc->x5, ret, desc->ret[0],
-			desc->ret[1], desc->ret[2]);
+		pr_err("scm_call failed: func id %#llx, ret: %d, syscall returns: %#llx, %#llx, %#llx\n",
+			x0, ret, desc->ret[0], desc->ret[1], desc->ret[2]);
 
 	if (arglen > N_REGISTER_ARGS)
 		kfree(desc->extra_arg_buf);
