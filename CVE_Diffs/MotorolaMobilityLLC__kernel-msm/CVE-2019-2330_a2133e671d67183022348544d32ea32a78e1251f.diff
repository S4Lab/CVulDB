MotorolaMobilityLLC__kernel-msm
commit a2133e671d67183022348544d32ea32a78e1251f
Author:     Vinayak Menon <vinmenon@codeaurora.org>
AuthorDate: Thu Jan 31 20:47:07 2019 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Thu Jul 25 23:45:34 2019 -0500

    ion: fix system secure force alloc
    
    Even when ION_FLAG_POOL_FORCE_ALLOC is set for secure alloc,
    alloc_from_pool_preferred tries to get the pages from pool
    first. In case if it enters split_page_from_secure_pool,
    free_buffer_page can end up calling __free_pages on the page
    from pool which is hyp assigned, resulting in issues for e.g.
    a fault if page poisoning is enabled.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2019-2330
    CRs-Fixed: 2379952
    
    Change-Id: I68759dc17551a5705693506a5c137977d429fe36
    Signed-off-by: Vinayak Menon <vinmenon@codeaurora.org>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1336891
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Shi-Yong Li <a22381@motorola.com>
    Reviewed-by: Ling Jin <lingjin@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit 616dc45383ffe4d73cdfe439f68ea806ab771cd1)

diff --git a/drivers/staging/android/ion/ion_system_heap.c b/drivers/staging/android/ion/ion_system_heap.c
index f05471d3f4aa..b664f1686da3 100644
--- a/drivers/staging/android/ion/ion_system_heap.c
+++ b/drivers/staging/android/ion/ion_system_heap.c
@@ -2,7 +2,7 @@
  * drivers/staging/android/ion/ion_system_heap.c
  *
  * Copyright (C) 2011 Google, Inc.
- * Copyright (c) 2011-2018, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2011-2019, The Linux Foundation. All rights reserved.
  *
  * This software is licensed under the terms of the GNU General Public
  * License version 2, as published by the Free Software Foundation, and
@@ -275,6 +275,9 @@ static struct page_info *alloc_from_pool_preferred(
 	struct page_info *info;
 	int i;
 
+	if (buffer->flags & ION_FLAG_POOL_FORCE_ALLOC)
+		goto force_alloc;
+
 	info = kmalloc(sizeof(*info), GFP_KERNEL);
 	if (!info)
 		return NULL;
@@ -306,6 +309,7 @@ static struct page_info *alloc_from_pool_preferred(
 	}
 
 	kfree(info);
+force_alloc:
 	return alloc_largest_available(heap, buffer, size, max_order);
 }
 
