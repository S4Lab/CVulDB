MotorolaMobilityLLC__kernel-msm
commit 725bee12e8e88b24b7cc98ab74f62d08bd3cf2f4
Author:     Varun Shrivastava <varunshrivastava@motorola.com>
AuthorDate: Thu Nov 10 09:55:23 2016 +0530
Commit:     Carlos Pinho <cpinho@motorola.com>
CommitDate: Thu Mar 16 14:52:29 2017 -0500

    perf: Fix event->ctx locking
    
    There have been a few reported issues wrt. the lack of locking around
    changing event->ctx. This patch tries to address those.
    
    It avoids the whole rwsem thing; and while it appears to work, please
    give it some thought in review.
    
    What I did fail at is sensible runtime checks on the use of
    event->ctx, the RCU use makes it very hard.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2016-6786 CVE-2016-6787
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20150123125834.209535886@infradead.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    
    Change-Id: I7417591fdabb75a7779f57ed3b534aba53e3d19b
    Signed-off-by: Varun Shrivastava <varunshrivastava@motorola.com>
    Reviewed-on: https://gerrit.mot.com/919424
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Vijayakumar Gn <vijaygn@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>

diff --git a/kernel/events/core.c b/kernel/events/core.c
index 8adf241ce471..d1f756e8ec88 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -7166,7 +7166,6 @@ SYSCALL_DEFINE5(perf_event_open,
 		 */
 		mutex_lock_double(&gctx->mutex, &ctx->mutex);
 
-		mutex_lock(&gctx->mutex);
 		perf_remove_from_context(group_leader, false);
 
 		/*
@@ -7193,6 +7192,7 @@ SYSCALL_DEFINE5(perf_event_open,
 		 * the old lists, before installing it on new lists.
 		 */
 		synchronize_rcu();
+
 		perf_install_in_context(ctx, group_leader, event->cpu);
 		get_ctx(ctx);
 		list_for_each_entry(sibling, &group_leader->sibling_list,
