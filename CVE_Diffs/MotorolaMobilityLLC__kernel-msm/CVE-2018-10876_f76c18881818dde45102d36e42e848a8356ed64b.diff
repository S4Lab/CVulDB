MotorolaMobilityLLC__kernel-msm
commit f76c18881818dde45102d36e42e848a8356ed64b
Author:     Theodore Ts'o <tytso@mit.edu>
AuthorDate: Thu Jun 14 00:58:00 2018 -0400
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Thu Mar 21 02:16:48 2019 -0500

    ext4: only look at the bg_flags field if it is valid
    
    commit 8844618d8aa7a9973e7b527d038a2a589665002c upstream.
    
    The bg_flags field in the block group descripts is only valid if the
    uninit_bg or metadata_csum feature is enabled.  We were not
    consistently looking at this field; fix this.
    
    Also block group #0 must never have uninitialized allocation bitmaps,
    or need to be zeroed, since that's where the root inode, and other
    special inodes are set up.  Check for these conditions and mark the
    file system as corrupted if they are detected.
    
    This addresses CVE-2018-10876.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=199403
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index ed42a920a971..6edf5bbee6a9 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -2919,8 +2919,14 @@ static ext4_group_t ext4_has_uninit_itable(struct super_block *sb)
 		if (!gdp)
 			continue;
 
-		if (!(gdp->bg_flags & cpu_to_le16(EXT4_BG_INODE_ZEROED)))
+		if (gdp->bg_flags & cpu_to_le16(EXT4_BG_INODE_ZEROED))
+			continue;
+		if (group != 0)
 			break;
+		ext4_error(sb, "Inode table for bg 0 marked as "
+			   "needing zeroing");
+		if (sb->s_flags & MS_RDONLY)
+			return ngroups;
 	}
 
 	return group;
