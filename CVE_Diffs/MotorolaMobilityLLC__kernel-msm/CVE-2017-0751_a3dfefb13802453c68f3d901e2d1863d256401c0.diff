MotorolaMobilityLLC__kernel-msm
commit a3dfefb13802453c68f3d901e2d1863d256401c0
Author:     Varun Shrivastava <varunshrivastava@motorola.com>
AuthorDate: Tue Jul 11 11:45:11 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Sat Sep 9 04:53:47 2017 -0500

    qcdev: Check the digest length during the SHA operations
    
    Check the digest length to avoid buffer overflow while
    doing the SHA operations.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-0751
    
    Change-Id: I4d3fb20723f59e905a672edaf84ee5d0865905b1
    Signed-off-by: Brahmaji K <bkomma@codeaurora.org>
    
    (cherry picked from commit b2f7c0b2b1bf0a23d0585983d78a31a52c3f1da2)
    Signed-off-by: Varun Shrivastava <varunshrivastava@motorola.com>
    Change-Id: I37c2caf21d38cb662b3fb3d227e216def11e8b78
    Reviewed-on: https://gerrit.mot.com/1048507
    SME-Granted: SME Approvals Granted
    Submit-Approved: Jira Key
    Tested-by: Jira Key
    Reviewed-by: Anandappan Chakravarthy <pjwt34@motorola.com>
    SLTApproved: Sindhu C <a12924@motorola.com>
    (cherry picked from commit 35242dec7aec598902ac8408f312c921aca0542c)

diff --git a/drivers/crypto/msm/qcedev.c b/drivers/crypto/msm/qcedev.c
index ef4b5e15b4fa..f42d19a5cf59 100644
--- a/drivers/crypto/msm/qcedev.c
+++ b/drivers/crypto/msm/qcedev.c
@@ -1709,6 +1709,12 @@ long qcedev_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 		err = qcedev_hash_final(&qcedev_areq, handle);
 		if (err)
 			return err;
+
+		if (handle->sha_ctxt.diglen > QCEDEV_MAX_SHA_DIGEST) {
+			pr_err("Invalid sha_ctxt.diglen %d\n",
+					handle->sha_ctxt.diglen);
+			return -EINVAL;
+		}
 		qcedev_areq.sha_op_req.diglen = handle->sha_ctxt.diglen;
 		memcpy(&qcedev_areq.sha_op_req.digest[0],
 				&handle->sha_ctxt.digest[0],
@@ -1737,6 +1743,12 @@ long qcedev_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 		err = qcedev_hash_final(&qcedev_areq, handle);
 		if (err)
 			return err;
+
+		if (handle->sha_ctxt.diglen > QCEDEV_MAX_SHA_DIGEST) {
+			pr_err("Invalid sha_ctxt.diglen %d\n",
+					handle->sha_ctxt.diglen);
+			return -EINVAL;
+		}
 		qcedev_areq.sha_op_req.diglen =	handle->sha_ctxt.diglen;
 		memcpy(&qcedev_areq.sha_op_req.digest[0],
 				&handle->sha_ctxt.digest[0],
