MotorolaMobilityLLC__kernel-msm
commit 9d42b55ae3ba857dbab82072b9f326f3b0937e4e
Author:     Ashish Garg <ashigarg@codeaurora.org>
AuthorDate: Mon Jun 5 17:36:46 2017 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Fri Dec 22 00:16:54 2017 -0600

    msm: mdss: validate page id before reading from edid buffer
    
    Provide complete resolution details in a sysfs node "res_info"
    limited to PAGE_SIZE. Different modules can query for multiple
    resolution details based on the resolution ids received from
    EDID of the TV. In case resolution details exceed PAGE_SIZE,
    reuse res_info to get remaining timing details by provide page
    details. Check page id is within the max supported resolution
    ids to avoid reading extra memory than required.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2017-11030
    
    Change-Id: I7cdd071ba462080fe5bb302d0da824ed95b50f15
    Signed-off-by: Ashish Garg <ashigarg@codeaurora.org>
    Signed-off-by: Ashwin Pathmudi <jfxr63@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1093933
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Shi-Yong Li <a22381@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit c2f8fd6d6c48920850ddd3f164fc6818c0329262)
    (cherry picked from commit b4f2367887b08306db497d7ff37b8b06a63a47df)

diff --git a/drivers/video/msm/mdss/mdss_hdmi_edid.c b/drivers/video/msm/mdss/mdss_hdmi_edid.c
index d3516bc996ee..7ccf642efeb3 100644
--- a/drivers/video/msm/mdss/mdss_hdmi_edid.c
+++ b/drivers/video/msm/mdss/mdss_hdmi_edid.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2010-2016, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2010-2017, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -463,8 +463,10 @@ static ssize_t hdmi_edid_sysfs_wta_res_info(struct device *dev,
 	struct device_attribute *attr, const char *buf, size_t count)
 {
 	int rc, page_id;
+	u32 i = 0, j, page;
 	ssize_t ret = strnlen(buf, PAGE_SIZE);
 	struct hdmi_edid_ctrl *edid_ctrl = hdmi_edid_get_ctrl(dev);
+	struct msm_hdmi_mode_timing_info info = {0};
 
 	if (!edid_ctrl) {
 		DEV_ERR("%s: invalid input\n", __func__);
@@ -477,7 +479,22 @@ static ssize_t hdmi_edid_sysfs_wta_res_info(struct device *dev,
 		return rc;
 	}
 
-	edid_ctrl->page_id = page_id;
+	if (page_id > MSM_HDMI_INIT_RES_PAGE) {
+		page = MSM_HDMI_INIT_RES_PAGE;
+		while (page < page_id) {
+			j = 1;
+			while (sizeof(info) * j < PAGE_SIZE) {
+				i++;
+				j++;
+			}
+			page++;
+		}
+	}
+
+	if (i < HDMI_VFRMT_MAX)
+		edid_ctrl->page_id = page_id;
+	else
+		DEV_ERR("%s: invalid page id\n", __func__);
 
 	DEV_DBG("%s: %d\n", __func__, edid_ctrl->page_id);
 	return ret;
