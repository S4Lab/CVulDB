MotorolaMobilityLLC__kernel-msm
commit b3ba446dbda41334bc416b46cd7d2499ec99d8bb
Author:     Mark Rutland <mark.rutland@arm.com>
AuthorDate: Thu May 24 18:56:24 2018 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Fri Aug 10 09:51:54 2018 -0500

    UPSTREAM: arm64: traps: simplify die() and __die()
    
    In arm64's die and __die routines we pass around a thread_info, and
    subsequently use this to determine the relevant task_struct, and the end
    of the thread's stack. Subsequent patches will decouple thread_info from
    the stack, and this approach will no longer work.
    
    To figure out the end of the stack, we can use the new generic
    end_of_stack() helper. As we only call __die() from die(), and die()
    always deals with the current task, we can remove the parameter and have
    both acquire current directly, which also makes it clear that __die
    can't be called for arbitrary tasks.
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2018-9384
    Bug: 74356909
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    
    Bug: 66351489
    Change-Id: Iab5baa2a9b68b38b97e137175c37c078e23346ff
    (cherry picked from commit 876e7a38e8788773aac768091aaa3b42e470c03b)
    Signed-off-by: Zubin Mithra <zsm@google.com>
    Reviewed-on: https://gerrit.mot.com/1182394
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/arch/arm64/kernel/traps.c b/arch/arm64/kernel/traps.c
index cefda38c103f..893011f0faa5 100644
--- a/arch/arm64/kernel/traps.c
+++ b/arch/arm64/kernel/traps.c
@@ -240,10 +240,9 @@ void show_stack(struct task_struct *tsk, unsigned long *sp)
 #endif
 #define S_SMP " SMP"
 
-static int __die(const char *str, int err, struct thread_info *thread,
-		 struct pt_regs *regs)
+static int __die(const char *str, int err, struct pt_regs *regs)
 {
-	struct task_struct *tsk = thread->task;
+	struct task_struct *tsk = current;
 	static int die_counter;
 	int ret;
 
@@ -258,7 +257,8 @@ static int __die(const char *str, int err, struct thread_info *thread,
 	print_modules();
 	__show_regs(regs);
 	pr_emerg("Process %.*s (pid: %d, stack limit = 0x%p)\n",
-		 TASK_COMM_LEN, tsk->comm, task_pid_nr(tsk), thread + 1);
+		 TASK_COMM_LEN, tsk->comm, task_pid_nr(tsk),
+		 end_of_stack(tsk));
 
 	if (!user_mode(regs) || in_interrupt()) {
 		dump_backtrace(regs, tsk);
@@ -323,7 +323,6 @@ static void oops_end(unsigned long flags, struct pt_regs *regs, int notify)
  */
 void die(const char *str, struct pt_regs *regs, int err)
 {
-	struct thread_info *thread = current_thread_info();
 	enum bug_trap_type bug_type = BUG_TRAP_TYPE_NONE;
 	unsigned long flags = oops_begin();
 	int ret;
@@ -333,7 +332,7 @@ void die(const char *str, struct pt_regs *regs, int err)
 	if (bug_type != BUG_TRAP_TYPE_NONE)
 		str = "Oops - BUG";
 
-	ret = __die(str, err, thread, regs);
+	ret = __die(str, err, regs);
 
 	oops_end(flags, regs, ret);
 }
