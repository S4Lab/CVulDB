MotorolaMobilityLLC__kernel-msm
commit 75b80130e66770c20b9e22a31e5028758dd112b3
Author:     Mark Rutland <mark.rutland@arm.com>
AuthorDate: Tue May 29 10:31:46 2018 +0530
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Thu Jun 14 06:06:30 2018 -0500

    arm64: smp: prepare for smp_processor_id() rework
    
    Subsequent patches will make smp_processor_id() use a percpu variable.
    This will make smp_processor_id() dependent on the percpu offset, and
    thus we cannot use smp_processor_id() to figure out what to initialise
    the offset to.
    
    Prepare for this by initialising the percpu offset based on
    current::cpu, which will work regardless of how smp_processor_id() is
    implemented. Also, make this relationship obvious by placing this code
    together at the start of secondary_start_kernel().
    
    Mot-CRs-fixed: (CR)
    CVE-fixed: CVE-2018-9384
    Bug: 74356909
    
    Change-Id: Ib3f5e81c21d2e6dce4309e5e8426de5d7fd3e997
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Reviewed-on: https://gerrit.mot.com/1182365
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit 48f3997c21973bcd3dee349eb3b33b1fb6987c1a)

diff --git a/arch/arm64/kernel/smp.c b/arch/arm64/kernel/smp.c
index d031a85e0bc7..1d9b298200a1 100644
--- a/arch/arm64/kernel/smp.c
+++ b/arch/arm64/kernel/smp.c
@@ -138,7 +138,10 @@ static void smp_store_cpu_info(unsigned int cpuid)
 asmlinkage void secondary_start_kernel(void)
 {
 	struct mm_struct *mm = &init_mm;
-	unsigned int cpu = smp_processor_id();
+	unsigned int cpu;
+
+	cpu = task_cpu(current);
+	set_my_cpu_offset(per_cpu_offset(cpu));
 
 	/*
 	 * All kernel threads share the same mm context; grab a
@@ -147,10 +150,6 @@ asmlinkage void secondary_start_kernel(void)
 	atomic_inc(&mm->mm_count);
 	current->active_mm = mm;
 
-	set_my_cpu_offset(per_cpu_offset(smp_processor_id()));
-
-	pr_debug("CPU%u: Booted secondary processor\n", cpu);
-
 	/*
 	 * TTBR0 is only used for the identity mapping at this stage. Make it
 	 * point to zero page to avoid speculatively fetching new entries.
