MotorolaMobilityLLC__kernel-msm
commit ca64f93ad58525df6f412027dd169197491daa95
Author:     Zhen Kong <zkong@codeaurora.org>
AuthorDate: Thu Sep 1 10:20:50 2016 -0700
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Wed May 31 07:18:00 2017 -0500

    qseecom: allocate sglistinfo buffer for kernel clients
    
    To support whitelist feature, sglistinfo table should also
    be allocated from qseecom kernel APIs used by kernel client.
    Besides, initialize sg in __qseecom_update_cmd_buf_64 to
    address a static analysis warning.
    
    Mot-CRs-fixed:(CR)
    CVE-Fixed:CVE-2016-5349
    CRs-fixed:1021945
    Bug:29083830
    
    Change-Id: I9d0df71b5907b861dfb5d277e1fe1ec568462ca8
    Signed-off-by: Zhen Kong <zkong@codeaurora.org>
    Reviewed-on: https://gerrit.mot.com/980052
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    (cherry picked from commit d4316de972150380c434ce4dfd36ce8d73d097f9)

diff --git a/drivers/misc/qseecom.c b/drivers/misc/qseecom.c
index 21cbc44ba4e5..d73f4edf3eca 100644
--- a/drivers/misc/qseecom.c
+++ b/drivers/misc/qseecom.c
@@ -2925,6 +2925,14 @@ int qseecom_start_app(struct qseecom_handle **handle,
 	data->client.user_virt_sb_base = 0;
 	data->client.ihandle = NULL;
 
+	/* Allocate sglistinfo buffer for kernel client */
+	data->sglistinfo_ptr = kzalloc(SGLISTINFO_TABLE_SIZE, GFP_KERNEL);
+	if (!(data->sglistinfo_ptr)) {
+		kfree(data);
+		kfree(*handle);
+		*handle = NULL;
+		return -ENOMEM;
+	}
 	init_waitqueue_head(&data->abort_wq);
 	atomic_set(&data->ioctl_count, 0);
 
@@ -2932,6 +2940,7 @@ int qseecom_start_app(struct qseecom_handle **handle,
 				ION_HEAP(ION_QSECOM_HEAP_ID), 0);
 	if (IS_ERR_OR_NULL(data->client.ihandle)) {
 		pr_err("Ion client could not retrieve the handle\n");
+		kfree(data->sglistinfo_ptr);
 		kfree(data);
 		kfree(*handle);
 		*handle = NULL;
@@ -3036,6 +3045,7 @@ int qseecom_start_app(struct qseecom_handle **handle,
 	return 0;
 
 err:
+	kfree(data->sglistinfo_ptr);
 	kfree(data);
 	kfree(*handle);
 	*handle = NULL;
@@ -3097,6 +3107,7 @@ int qseecom_shutdown_app(struct qseecom_handle **handle)
 	atomic_dec(&data->ioctl_count);
 	mutex_unlock(&app_access_lock);
 	if (ret == 0) {
+		kzfree(data->sglistinfo_ptr);
 		kzfree(data);
 		kzfree(*handle);
 		kzfree(kclient);
