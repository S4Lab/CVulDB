MotorolaMobilityLLC__kernel-msm
commit 049b3ea061be084cb32ec70a0e3df45061cd897c
Author:     Todd Kjos <tkjos@android.com>
AuthorDate: Mon Jan 14 09:10:21 2019 -0800
Commit:     Carlos Pinho <cpinho@motorola.com>
CommitDate: Fri Oct 11 21:33:13 2019 -0300

    binder: create node flag to request sender's security context
    
    To allow servers to verify client identity, allow a node
    flag to be set that causes the sender's security context
    to be delivered with the transaction. The BR_TRANSACTION
    command is extended in BR_TRANSACTION_SEC_CTX to
    contain a pointer to the security context string.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2019-2023
    
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: varunshrivastava <varunshrivastava@motorola.com>
    Change-Id: I9dd7c8da3f6a422fe190c851799371be7cc607d5
    Reviewed-on: https://gerrit.mot.com/1310405
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Ling Jin <lingjin@motorola.com>
    Reviewed-by: Shi-Yong Li <a22381@motorola.com>
    Submit-Approved: Jira Key

diff --git a/drivers/android/binder.c b/drivers/android/binder.c
index 53ff855d5632..c37dee7d5a21 100644
--- a/drivers/android/binder.c
+++ b/drivers/android/binder.c
@@ -358,6 +358,8 @@ struct binder_error {
  * @inherit_rt:           inherit RT scheduling policy from caller
  * @txn_security_ctx:     require sender's security context
  *                        (invariant after initialized)
+ * @txn_security_ctx:     require sender's security context
+ *                        (invariant after initialized)
  * @async_todo:           list of async work items
  *                        (protected by @proc->inner_lock)
  *
@@ -3174,7 +3176,7 @@ static void binder_transaction(struct binder_proc *proc,
 				    ALIGN(secctx_sz, sizeof(u64));
 		char *kptr = t->buffer->data + buf_offset;
 
-		t->security_ctx = (uintptr_t)kptr +
+		t->security_ctx = (binder_uintptr_t)kptr +
 		    binder_alloc_get_user_buffer_offset(&target_proc->alloc);
 		memcpy(kptr, secctx, secctx_sz);
 		security_release_secctx(secctx, secctx_sz);
diff --git a/include/uapi/linux/android/binder.h b/include/uapi/linux/android/binder.h
index 0631c500702c..7b3a093e67cd 100644
--- a/include/uapi/linux/android/binder.h
+++ b/include/uapi/linux/android/binder.h
@@ -66,6 +66,7 @@ enum flat_binder_object_flags {
 	 * @FLAT_BINDER_FLAG_ACCEPTS_FDS: whether the node accepts fds.
 	 */
 	FLAT_BINDER_FLAG_ACCEPTS_FDS = 0x100,
+
 	/**
 	 * @FLAT_BINDER_FLAG_SCHED_POLICY_MASK: bit-mask for scheduling policy
 	 *
