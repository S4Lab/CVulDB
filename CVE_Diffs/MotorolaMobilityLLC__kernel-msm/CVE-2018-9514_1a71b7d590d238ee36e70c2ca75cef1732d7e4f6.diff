MotorolaMobilityLLC__kernel-msm
commit 1a71b7d590d238ee36e70c2ca75cef1732d7e4f6
Author:     Daniel Rosenberg <drosen@google.com>
AuthorDate: Thu Jul 19 18:08:35 2018 -0700
Commit:     zhangly19 <zhangly19@lenovo.com>
CommitDate: Mon Apr 15 10:48:41 2019 +0800

    ANDROID: sdcardfs: Don't use OVERRIDE_CRED macro
    
    The macro hides some control flow, making it easier
    to run into bugs.
    
    Mot-CRs-fixed:(CR)
    CVE-Fixed: CVE-2018-9514
    bug: 111642636
    
    Change-Id: I37ec207c277d97c4e7f1e8381bc9ae743ad78435
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Daniel Rosenberg <drosen@google.com>
    Reviewed-on: https://gerrit.mot.com/1280255
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Xiaojun Ji <jixj@motorola.com>
    Reviewed-by: Zhenxin Xi <xizx@motorola.com>
    Submit-Approved: Jira Key

diff --git a/fs/sdcardfs/main.c b/fs/sdcardfs/main.c
index cd6a0215173a..79b55370fac9 100644
--- a/fs/sdcardfs/main.c
+++ b/fs/sdcardfs/main.c
@@ -251,7 +251,9 @@ static int sdcardfs_set_xattr(const struct xattr_handler *handler,
 	const struct cred *saved_cred = NULL;
 
 	/* save current_cred and override it */
-	OVERRIDE_CRED(SDCARDFS_SB(dentry->d_sb), saved_cred, SDCARDFS_I(inode));
+        saved_cred = override_fsids(SDCARDFS_SB(dentry->d_sb),SDCARDFS_I(inode)->data);
+        if (!saved_cred)
+             return -ENOMEM;
 	sdcardfs_get_lower_path(dentry, &lower_path);
 
 	lower_dentry = lower_path.dentry;
@@ -259,7 +261,7 @@ static int sdcardfs_set_xattr(const struct xattr_handler *handler,
 	err = vfs_setxattr(lower_dentry, name, value, size, flags);
 
 	sdcardfs_put_lower_path(dentry, &lower_path);
-	REVERT_CRED(saved_cred);
+        revert_fsids(saved_cred);
 	return err;
 }
 
@@ -274,15 +276,18 @@ static int sdcardfs_get_xattr(const struct xattr_handler *handler,
 	const struct cred *saved_cred = NULL;
 
 	/* save current_cred and override it */
-	OVERRIDE_CRED(SDCARDFS_SB(dentry->d_sb), saved_cred, SDCARDFS_I(inode));
-	sdcardfs_get_lower_path(dentry, &lower_path);
+        saved_cred = override_fsids(SDCARDFS_SB(dentry->d_sb),
+                                               SDCARDFS_I(inode)->data);
+	if (!saved_cred)
+             return -ENOMEM;
+        sdcardfs_get_lower_path(dentry, &lower_path);
 
 	lower_dentry = lower_path.dentry;
 	lower_inode = sdcardfs_lower_inode(inode);
 	err = vfs_getxattr(lower_dentry, name, value, size);
 
 	sdcardfs_put_lower_path(dentry, &lower_path);
-	REVERT_CRED(saved_cred);
+        revert_fsids(saved_cred);
 	return err;
 }
 
