MotorolaMobilityLLC__kernel-msm
commit 19fae6dca0508912893bbac2a3dc9adcb8b83fdd
Author:     hyeonsu9.lee <hyeonsu9.lee@samsung.com>
AuthorDate: Mon Mar 14 15:32:07 2016 +0900
Commit:     hyeonsu9.lee <hyeonsu9.lee@samsung.com>
CommitDate: Mon Mar 14 15:32:07 2016 +0900

    security : Add security patch for CVE-2016-0821
    
    Poison pointer values should be small enough to find a room in
    non-mmap'able/hardly-mmap'able space.  E.g.  on x86 "poison pointer space"
    is located starting from 0x0.  Given unprivileged users cannot mmap
    anything below mmap_min_addr, it should be safe to use poison pointers
    lower than mmap_min_addr.
    
    The current poison pointer values of LIST_POISON{1,2} might be too big for
    mmap_min_addr values equal or less than 1 MB (common case, e.g.  Ubuntu
    uses only 0x10000).  There is little point to use such a big value given
    the "poison pointer space" below 1 MB is not yet exhausted.  Changing it
    to a smaller value solves the problem for small mmap_min_addr setups.
    
    The values are suggested by Solar Designer:
    http://www.openwall.com/lists/oss-security/2015/05/02/6
    
    Change-Id: Id5489e5063bce33cca16a019d088e15f26f2c03c
    Signed-off-by: hyeonsu9.lee <hyeonsu9.lee@samsung.com>

diff --git a/include/linux/poison.h b/include/linux/poison.h
index 2110a81c5e2a..e2ae1f951d62 100644
--- a/include/linux/poison.h
+++ b/include/linux/poison.h
@@ -19,8 +19,8 @@
  * under normal circumstances, used to verify that nobody uses
  * non-initialized list entries.
  */
-#define LIST_POISON1  ((void *) 0x00100100 + POISON_POINTER_DELTA)
-#define LIST_POISON2  ((void *) 0x00200200 + POISON_POINTER_DELTA)
+#define LIST_POISON1  ((void *) 0x100  + POISON_POINTER_DELTA)
+#define LIST_POISON2  ((void *) 0x100  + POISON_POINTER_DELTA)
 
 /********** include/linux/timer.h **********/
 /*
