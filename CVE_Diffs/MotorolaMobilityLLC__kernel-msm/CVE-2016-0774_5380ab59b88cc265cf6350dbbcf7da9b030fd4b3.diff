MotorolaMobilityLLC__kernel-msm
commit 5380ab59b88cc265cf6350dbbcf7da9b030fd4b3
Author:     Ben Hutchings <ben@decadent.org.uk>
AuthorDate: Sat Feb 13 02:34:52 2016 +0000
Commit:     PDO SCM Team <hudsoncm@motorola.com>
CommitDate: Mon May 23 00:32:36 2016 -0500

    pipe: Fix buffer offset after partially failed read
    
    Quoting the RHEL advisory:
    
    > It was found that the fix for CVE-2015-1805 incorrectly kept buffer
    > offset and buffer length in sync on a failed atomic read, potentially
    > resulting in a pipe buffer state corruption. A local, unprivileged user
    > could use this flaw to crash the system or leak kernel memory to user
    > space. (CVE-2016-0774, Moderate)
    
    The same flawed fix was applied to stable branches from 2.6.32.y to
    3.14.y inclusive, and I was able to reproduce the issue on 3.2.y.
    We need to give pipe_iov_copy_to_user() a separate offset variable
    and only update the buffer offset if it succeeds.
    
    Change-Id: I988802f38acf40c7671fa0978880928b02d29b56
    References: https://rhn.redhat.com/errata/RHSA-2016-0103.html
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    (cherry picked from commit feae3ca2e5e1a8f44aa6290255d3d9709985d0b2)
    (cherry picked from commit fe8b356ae8fbac75a466bf63c50a438a7c97db90)
    Mot-CRs-fixed: (CR)
    Reviewed-on: http://gerrit.mot.com/842347
    SME-Granted: SME Approvals Granted
    SLTApproved: Slta Waiver <sltawvr@motorola.com>
    Tested-by: Jira Key <jirakey@motorola.com>
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key <jirakey@motorola.com>
    Reviewed-on: http://gerrit.mot.com/845191
    Reviewed-by: Navya Vijayan <navya@motorola.com>
    SLTApproved: Sindhu C <a12924@motorola.com>
    (cherry picked from commit ffd88d57616aa20261200c54b950ad52252f58de)
    Reviewed-on: http://gerrit.mot.com/846163
    Reviewed-by: Chao-Wei Zhang <e12892@motorola.com>
    SLTApproved: Chao-Wei Zhang <e12892@motorola.com>
    (cherry picked from commit 0e8ceb21975ebdc7506529611816e5fe22a59e5d)

diff --git a/fs/pipe.c b/fs/pipe.c
index 3e7ab278bb0c..50267e6ba688 100644
--- a/fs/pipe.c
+++ b/fs/pipe.c
@@ -401,6 +401,7 @@ pipe_read(struct kiocb *iocb, const struct iovec *_iov,
 			void *addr;
 			size_t chars = buf->len, remaining;
 			int error, atomic;
+			int offset;
 
 			if (chars > total_len)
 				chars = total_len;
@@ -414,9 +415,10 @@ pipe_read(struct kiocb *iocb, const struct iovec *_iov,
 
 			atomic = !iov_fault_in_pages_write(iov, chars);
 			remaining = chars;
+			offset = buf->offset;
 redo:
 			addr = ops->map(pipe, buf, atomic);
-			error = pipe_iov_copy_to_user(iov, addr, &buf->offset,
+			error = pipe_iov_copy_to_user(iov, addr, &offset,
 						      &remaining, atomic);
 			ops->unmap(pipe, buf, addr);
 			if (unlikely(error)) {
@@ -432,6 +434,7 @@ redo:
 				break;
 			}
 			ret += chars;
+			buf->offset += chars;
 			buf->len -= chars;
 
 			/* Was it a packet buffer? Clean up and exit */
