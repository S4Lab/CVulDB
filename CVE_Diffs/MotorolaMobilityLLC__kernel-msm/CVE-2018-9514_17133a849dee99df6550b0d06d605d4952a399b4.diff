MotorolaMobilityLLC__kernel-msm
commit 17133a849dee99df6550b0d06d605d4952a399b4
Author:     Daniel Rosenberg <drosen@google.com>
AuthorDate: Mon Sep 24 18:46:20 2018 +0530
Commit:     a7301c <a7301c@motorola.com>
CommitDate: Mon Mar 18 13:24:55 2019 -0500

    ANDROID: sdcardfs: Don't use OVERRIDE_CRED macro
    
    The macro hides some control flow, making it easier
    to run into bugs.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2018-9514
    bug: 111642636
    
    Change-Id: I37ec207c277d97c4e7f1e8381bc9ae743ad78435
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Daniel Rosenberg <drosen@google.com>
    Signed-off-by: Jignesh Patel <jignesh@motorola.com>
    Reviewed-on: https://gerrit.mot.com/1247676
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key

diff --git a/fs/sdcardfs/inode.c b/fs/sdcardfs/inode.c
index 506851fae3f7..082997420d82 100644
--- a/fs/sdcardfs/inode.c
+++ b/fs/sdcardfs/inode.c
@@ -881,7 +881,11 @@ static int sdcardfs_setxattr(struct dentry *dentry, const char *name,
 	const struct cred *saved_cred = NULL;
 
 	/* save current_cred and override it */
-	OVERRIDE_CRED(SDCARDFS_SB(dentry->d_sb), saved_cred, SDCARDFS_I(inode));
+	saved_cred = override_fsids(SDCARDFS_SB(dentry->d_sb),
+						SDCARDFS_I(inode)->data);
+	if (!saved_cred)
+		return -ENOMEM;
+
 	sdcardfs_get_lower_path(dentry, &lower_path);
 
 	lower_dentry = lower_path.dentry;
@@ -889,7 +893,7 @@ static int sdcardfs_setxattr(struct dentry *dentry, const char *name,
 	err = vfs_setxattr(lower_dentry, name, value, size, flags);
 
 	sdcardfs_put_lower_path(dentry, &lower_path);
-	REVERT_CRED(saved_cred);
+	revert_fsids(saved_cred);
 	return err;
 }
 
@@ -904,7 +908,11 @@ static ssize_t sdcardfs_getxattr(struct dentry *dentry, const char *name,
 	const struct cred *saved_cred = NULL;
 
 	/* save current_cred and override it */
-	OVERRIDE_CRED(SDCARDFS_SB(dentry->d_sb), saved_cred, SDCARDFS_I(inode));
+	saved_cred = override_fsids(SDCARDFS_SB(dentry->d_sb),
+						SDCARDFS_I(inode)->data);
+	if (!saved_cred)
+		return -ENOMEM;
+
 	sdcardfs_get_lower_path(dentry, &lower_path);
 
 	lower_dentry = lower_path.dentry;
@@ -912,7 +920,7 @@ static ssize_t sdcardfs_getxattr(struct dentry *dentry, const char *name,
 	err = vfs_getxattr(lower_dentry, name, value, size);
 
 	sdcardfs_put_lower_path(dentry, &lower_path);
-	REVERT_CRED(saved_cred);
+	revert_fsids(saved_cred);
 	return err;
 }
 
