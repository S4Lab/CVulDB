MotorolaMobilityLLC__kernel-msm
commit ecab42936f4d0f436a0b6e959b493bacefd94568
Author:     Tony Truong <truong@codeaurora.org>
AuthorDate: Fri Jan 6 14:03:03 2017 -0800
Commit:     Charles Barros <charlesb@motorola.com>
CommitDate: Tue Jan 23 14:57:54 2018 -0200

    msm: pcie: add bounds check for debugfs register write
    
    Via debugfs nodes, users have the option to read and write to
    any PCIe register. To ensure clients do not access registers
    outside the PCIe range, add checks to validate the offset clients
    provide.
    
    Mot-CRs-fixed: (CR)
    CVE-Fixed: CVE-2017-10997
    CRs-Fixed: 1103077
    Bug: 33039685
    
    Change-Id: Ia35cd04c57f01c21a47962be596bca395b5ca247
    Signed-off-by: Tony Truong <truong@codeaurora.org>
    Reviewed-on: https://gerrit.mot.com/1043714
    SLTApproved: Slta Waiver
    SME-Granted: SME Approvals Granted
    Tested-by: Jira Key
    Reviewed-by: Igor Kovalenko <igork@motorola.com>
    Submit-Approved: Jira Key
    (cherry picked from commit c541c1325710d0e777be2eb13552b57fd0a3bf5b)

diff --git a/drivers/pci/host/pci-msm.c b/drivers/pci/host/pci-msm.c
index 9d049a75f933..9e0da1f6034a 100644
--- a/drivers/pci/host/pci-msm.c
+++ b/drivers/pci/host/pci-msm.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2014-2016, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2014-2017, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -2332,8 +2332,15 @@ static void msm_pcie_sel_debug_testcase(struct msm_pcie_dev_t *dev,
 			dev->res[base_sel - 1].base,
 			wr_offset, wr_mask, wr_value);
 
-		msm_pcie_write_reg_field(dev->res[base_sel - 1].base,
-			wr_offset, wr_mask, wr_value);
+		base_sel_size = resource_size(dev->res[base_sel - 1].resource);
+
+		if (wr_offset >  base_sel_size - 4 ||
+			msm_pcie_check_align(dev, wr_offset))
+			pr_alert("PCIe: RC%d: Invalid wr_offset: 0x%x. wr_offset should be no more than 0x%x\n",
+				dev->rc_idx, wr_offset, base_sel_size - 4);
+		else
+			msm_pcie_write_reg_field(dev->res[base_sel - 1].base,
+				wr_offset, wr_mask, wr_value);
 
 		break;
 	case 13: /* dump all registers of base_sel */
