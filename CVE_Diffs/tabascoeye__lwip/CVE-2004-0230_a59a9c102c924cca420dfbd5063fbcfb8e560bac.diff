tabascoeye__lwip
commit a59a9c102c924cca420dfbd5063fbcfb8e560bac
Author:     ¯\_(ツ)_/¯ <tabascoeye@gmail.com>
AuthorDate: Wed Nov 19 09:39:23 2014 +0100
Commit:     ¯\_(ツ)_/¯ <tabascoeye@gmail.com>
CommitDate: Wed Nov 19 09:39:23 2014 +0100

    final fix for CVE-2004-0230
    
    This (again) relates to #14
    Last two fixes, I used the wrong if statement (ackno == pcb->snd_nxt) which is only relevant for the SYN_SENT special case, not the normal ESTABLISHED state.
    In that case, the seqno has to match the expected one.
    If not, an ACK is sent (unmodified not like the last change)
    
    This creates the correct and expected behavior in my lab setup and still fixes the vulnerability that CVE-2004-0230 describes

diff --git a/src/core/tcp_in.c b/src/core/tcp_in.c
index b50b016b..bf7e7848 100644
--- a/src/core/tcp_in.c
+++ b/src/core/tcp_in.c
@@ -672,8 +672,8 @@ tcp_process(struct tcp_pcb *pcb)
 
   /* Process incoming RST segments. */
   if (flags & TCP_RST) {
-    /* First, determine if the reset is acceptable. (in case of RST only if the sequence number matches) */
-    if (ackno == pcb->snd_nxt) {
+    /* First, determine if the reset is acceptable. (in case of RST only if the sequence number matches, special case for SYN_SENT state) */
+    if (((pcb->state == SYN_SENT) && (ackno == pcb->snd_nxt)) || (seqno == pcb->rcv_nxt)) {
       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_process: Connection RESET\n"));
       LWIP_ASSERT("tcp_input: pcb->state != CLOSED", pcb->state != CLOSED);
       recv_flags |= TF_RESET;
@@ -685,7 +685,6 @@ tcp_process(struct tcp_pcb *pcb)
       This is protection against CVE-2004-0230 (RST spoofing attack) */
       if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt,
                           pcb->rcv_nxt+pcb->rcv_wnd)) {
-        pcb->snd_nxt = ackno;
         tcp_ack_now(pcb);
       }
       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_process: unacceptable reset seqno %"U32_F" rcv_nxt %"U32_F"\n",
