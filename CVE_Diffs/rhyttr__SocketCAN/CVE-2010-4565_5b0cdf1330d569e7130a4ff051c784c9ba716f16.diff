rhyttr__SocketCAN
commit 5b0cdf1330d569e7130a4ff051c784c9ba716f16
Author:     hartkopp <hartkopp@030b6a49-0b11-0410-94ab-b0dab22257f2>
AuthorDate: Sat Jan 1 17:14:20 2011 +0000
Commit:     hartkopp <hartkopp@030b6a49-0b11-0410-94ab-b0dab22257f2>
CommitDate: Sat Jan 1 17:14:20 2011 +0000

    can-bcm: Use inode instead of kernel address for /proc file
    
    Since the socket address is just being used as a unique identifier, its
    inode number is an alternative that does not leak potentially sensitive
    information.
    
    CC-ing stable because MITRE has assigned CVE-2010-4565 to the issue.
    
    Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Upstream commit:
    http://git.kernel.org/?p=linux/kernel/git/davem/net-2.6.git;a=commitdiff;h=9f260e0efa4766e56d0ac14f1aeea6ee5eb8fe83
    
    
    git-svn-id: svn://svn.berlios.de/socketcan/trunk@1227 030b6a49-0b11-0410-94ab-b0dab22257f2

diff --git a/kernel/2.6/net/can/bcm.c b/kernel/2.6/net/can/bcm.c
index 0764968..d12a8e5 100644
--- a/kernel/2.6/net/can/bcm.c
+++ b/kernel/2.6/net/can/bcm.c
@@ -140,7 +140,7 @@ struct bcm_sock {
 	struct list_head tx_ops;
 	unsigned long dropped_usr_msgs;
 	struct proc_dir_entry *bcm_proc_read;
-	char procname [20]; /* pointer printed in ASCII with \0 */
+	char procname [32]; /* inode number in decimal with \0 */
 };
 
 static inline struct bcm_sock *bcm_sk(const struct sock *sk)
@@ -1648,7 +1648,7 @@ static int bcm_connect(struct socket *sock, struct sockaddr *uaddr, int len,
 
 	if (proc_dir) {
 		/* unique socket address as filename */
-		sprintf(bo->procname, "%p", sock);
+		sprintf(bo->procname, "%lu", sock_i_ino(sk));
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,26)
 		bo->bcm_proc_read = proc_create_data(bo->procname, 0644,
 						     proc_dir,
