franciscofranco__bacon
commit 8fb84df48969d00e439277c6a87309dd7667a573
Author:     Jeff Mahoney <jeffm@suse.com>
AuthorDate: Tue Jul 5 17:32:30 2016 -0400
Commit:     Joey Rizzoli <joey@lineageos.it>
CommitDate: Sun Jan 29 11:36:10 2017 +0100

    ecryptfs: don't allow mmap when the lower fs doesn't support it
    
    There are legitimate reasons to disallow mmap on certain files, notably
    in sysfs or procfs.  We shouldn't emulate mmap support on file systems
    that don't offer support natively.
    
    CVE-2016-1583
    
    Change-Id: Iabffcd1839cc90effd0b179cf670eff6dd8fef15
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Cc: stable@vger.kernel.org
    [tyhicks: clean up f_op check by using ecryptfs_file_to_lower()]
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>

diff --git a/fs/ecryptfs/file.c b/fs/ecryptfs/file.c
index e33e0e49c18..805be43324a 100644
--- a/fs/ecryptfs/file.c
+++ b/fs/ecryptfs/file.c
@@ -182,6 +182,19 @@ out:
 	return rc;
 }
 
+static int ecryptfs_mmap(struct file *file, struct vm_area_struct *vma)
+{
+	struct file *lower_file = ecryptfs_file_to_lower(file);
+	/*
+	 * Don't allow mmap on top of file systems that don't support it
+	 * natively.  If FILESYSTEM_MAX_STACK_DEPTH > 2 or ecryptfs
+	 * allows recursive mounting, this will need to be extended.
+	 */
+	if (!lower_file->f_op->mmap)
+		return -ENODEV;
+	return generic_file_mmap(file, vma);
+}
+
 /**
  * ecryptfs_open
  * @inode: inode speciying file to open
@@ -379,7 +392,7 @@ const struct file_operations ecryptfs_main_fops = {
 #ifdef CONFIG_COMPAT
 	.compat_ioctl = ecryptfs_compat_ioctl,
 #endif
-	.mmap = generic_file_mmap,
+	.mmap = ecryptfs_mmap,
 	.open = ecryptfs_open,
 	.flush = ecryptfs_flush,
 	.release = ecryptfs_release,
