franciscofranco__bacon
commit 43e145a1b2505637e130e25734c4e199271f2885
Author:     Josh Boyer <jwboyer@fedoraproject.org>
AuthorDate: Mon Mar 14 09:33:40 2016 -0700
Commit:     Tom Marshall <tdm.code@gmail.com>
CommitDate: Mon Aug 7 23:19:08 2017 +0000

    Input: powermate - fix oops with malicious USB descriptors
    
    The powermate driver expects at least one valid USB endpoint in its
    probe function.  If given malicious descriptors that specify 0 for
    the number of endpoints, it will crash.  Validate the number of
    endpoints on the interface before using them.
    
    The full report for this issue can be found here:
    http://seclists.org/bugtraq/2016/Mar/85
    
    Reported-by: Ralf Spenneberg <ralf@spenneberg.net>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    CVE-2016-2186
    Signed-off-by: Kevin F. Haggerty <haggertk@lineageos.org>
    
    Change-Id: Ib534b6eb2e96c52eff7bd922eaa6d1a1f714ffcb

diff --git a/drivers/input/misc/powermate.c b/drivers/input/misc/powermate.c
index 538f7049ec6..3c3a8a09ec6 100644
--- a/drivers/input/misc/powermate.c
+++ b/drivers/input/misc/powermate.c
@@ -304,6 +304,9 @@ static int powermate_probe(struct usb_interface *intf, const struct usb_device_i
 	int error = -ENOMEM;
 
 	interface = intf->cur_altsetting;
+	if (interface->desc.bNumEndpoints < 1)
+		return -EINVAL;
+
 	endpoint = &interface->endpoint[0].desc;
 	if (!usb_endpoint_is_int_in(endpoint))
 		return -EIO;
