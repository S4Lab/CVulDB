ValveSoftware__steamos_kernel
commit dfe67217aea3eb4ecbab736903f6ecee3458b8a8
Author:     Marcel Holtmann <marcel@holtmann.org>
AuthorDate: Sun Mar 11 07:39:14 2007 +0100
Commit:     Adrian Bunk <bunk@stusta.de>
CommitDate: Sun Mar 11 07:39:14 2007 +0100

    Fix buffer overflow in Omnikey CardMan 4040 driver (CVE-2007-0005)
    
    Based on a patch from Don Howard <dhoward@redhat.com>
    
    When calling write() with a buffer larger than 512 bytes, the
    driver's write buffer overflows, allowing to overwrite the EIP and
    execute arbitrary code with kernel privileges.
    
    In read(), there exists a similar problem, but coming from the device.
    A malicous or buggy device sending more than 512 bytes can overflow
    of the driver's read buffer, with the same effects as above.
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Adrian Bunk <bunk@stusta.de>

diff --git a/drivers/char/pcmcia/cm4040_cs.c b/drivers/char/pcmcia/cm4040_cs.c
index 744b57d9a589..bab4129171b4 100644
--- a/drivers/char/pcmcia/cm4040_cs.c
+++ b/drivers/char/pcmcia/cm4040_cs.c
@@ -273,6 +273,7 @@ static ssize_t cm4040_read(struct file *filp, char __user *buf,
 	DEBUGP(6, dev, "BytesToRead=%lu\n", bytes_to_read);
 
 	min_bytes_to_read = min(count, bytes_to_read + 5);
+	min_bytes_to_read = min_t(size_t, min_bytes_to_read, READ_WRITE_BUFFER_SIZE);
 
 	DEBUGP(6, dev, "Min=%lu\n", min_bytes_to_read);
 
@@ -340,7 +341,7 @@ static ssize_t cm4040_write(struct file *filp, const char __user *buf,
 		return 0;
 	}
 
-	if (count < 5) {
+	if ((count < 5) || (count > READ_WRITE_BUFFER_SIZE)) {
 		DEBUGP(2, dev, "<- cm4040_write buffersize=%Zd < 5\n", count);
 		return -EIO;
 	}
