ValveSoftware__steamos_kernel
commit cbdd4c098ba34731ceec62c47c36ec8e3d0d252e
Author:     Dave Airlie <airlied@redhat.com>
AuthorDate: Tue Aug 17 14:46:00 2010 +1000
Commit:     Greg Kroah-Hartman <gregkh@suse.de>
CommitDate: Thu Aug 26 16:46:22 2010 -0700

    drm: stop information leak of old kernel stack.
    
    commit b9f0aee83335db1f3915f4e42a5e21b351740afd upstream.
    
    non-critical issue, CVE-2010-2803
    
    Userspace controls the amount of memory to be allocate, so it can
    get the ioctl to allocate more memory than the kernel uses, and get
    access to kernel stack. This can only be done for processes authenticated
    to the X server for DRI access, and if the user has DRI access.
    
    Fix is to just memset the data to 0 if the user doesn't copy into
    it in the first place.
    
    Reported-by: Kees Cook <kees@ubuntu.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/gpu/drm/drm_drv.c b/drivers/gpu/drm/drm_drv.c
index 4a66201edaec..c9736ed5d5bf 100644
--- a/drivers/gpu/drm/drm_drv.c
+++ b/drivers/gpu/drm/drm_drv.c
@@ -502,7 +502,9 @@ long drm_ioctl(struct file *filp,
 				retcode = -EFAULT;
 				goto err_i1;
 			}
-		}
+		} else
+			memset(kdata, 0, _IOC_SIZE(cmd));
+
 		if (ioctl->flags & DRM_UNLOCKED)
 			retcode = func(dev, kdata, file_priv);
 		else {
