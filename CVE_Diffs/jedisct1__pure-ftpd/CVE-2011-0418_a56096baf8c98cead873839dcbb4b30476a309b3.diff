jedisct1__pure-ftpd
commit a56096baf8c98cead873839dcbb4b30476a309b3
Author:     jedisct1 <github@pureftpd.org>
AuthorDate: Sun May 1 18:17:43 2011 -0700
Commit:     jedisct1 <github@pureftpd.org>
CommitDate: Sun May 1 18:17:43 2011 -0700

    Check the number of braces in glob()
    See CVE-2011-0418

diff --git a/src/bsd-glob.c b/src/bsd-glob.c
index 704a4d8..8d410f0 100644
--- a/src/bsd-glob.c
+++ b/src/bsd-glob.c
@@ -121,7 +121,7 @@ static int glob2(Char *, Char *, Char *, Char *, Char *, Char *,
                  glob_t *, size_t *, int);
 static int glob3(Char *, Char *, Char *, Char *, Char *,
                  Char *, Char *, glob_t *, size_t *, int);
-static int globextend(const Char *, glob_t *, size_t *);
+static int globextend(const Char *, glob_t *, size_t *, int);
 #ifdef USELESS_FOR_PUREFTPD
 static const Char *globtilde(const Char *, Char *, size_t, glob_t *);
 #endif
@@ -149,6 +149,7 @@ static int glob_(const char *pattern,
     pglob->gl_errfunc = errfunc;
     pglob->gl_matchc = 0;
     pglob->gl_pathc = 0;
+    pglob->gl_bracesc = 0;    
     pglob->gl_pathv = NULL;
 
     if (pglob->gl_offs < 0 || pglob->gl_pathc < 0 ||
@@ -210,9 +211,12 @@ static int globexp1(const Char * pattern, glob_t * pglob, int recursion)
 {
     const Char *ptr = pattern;
 
-    if (pglob->gl_maxdepth > 0 && recursion > pglob->gl_maxdepth) {
-        errno = 0;
-        return 0;
+    if (pglob->gl_maxdepth > 0) {
+        if (recursion > pglob->gl_maxdepth ||
+            ++pglob->gl_bracesc > pglob->gl_maxdepth) {
+            errno = 0;
+            return 0;
+        }
     }
     /* Protect a single {}, for find(1), like csh */
     if (pattern[0] == LBRACE && pattern[1] == RBRACE && pattern[2] == EOS)
@@ -539,7 +543,7 @@ glob2(Char * pathbuf,
                 return 0;
 
             ++pglob->gl_matchc;
-            return (globextend(pathbuf, pglob, limitp));
+            return (globextend(pathbuf, pglob, limitp, recursion + 1));
         }
 
         /* Find end of next segment, copy tentatively to pathend. */
@@ -659,7 +663,8 @@ glob3(Char * pathbuf, Char * pathbuf_last, Char * pathend,
  *    Either gl_pathc is zero and gl_pathv is NULL; or gl_pathc > 0 and
  *    gl_pathv points to (gl_offs + gl_pathc + 1) items.
  */
-static int globextend(const Char * path, glob_t * pglob, size_t * limitp)
+static int globextend(const Char * path, glob_t * pglob, size_t * limitp,
+                      int recursion)
 {
     char **pathv;
     unsigned int newsize;
@@ -667,6 +672,9 @@ static int globextend(const Char * path, glob_t * pglob, size_t * limitp)
     char *copy;
     const Char *p;
 
+    if (pglob->gl_maxdepth > 0 && recursion > pglob->gl_maxdepth) {
+        return 0;
+    }
     if (pglob->gl_maxfiles != (unsigned long) -1) {
         if (pglob->gl_maxfiles == 0) {
             return 0;
diff --git a/src/bsd-glob.h b/src/bsd-glob.h
index 6deb355..65cbdaa 100644
--- a/src/bsd-glob.h
+++ b/src/bsd-glob.h
@@ -39,6 +39,7 @@ typedef struct {
     int gl_maxdepth;            /* Maximum depth */
     int gl_pathc;               /* Count of total paths so far. */
     int gl_matchc;              /* Count of paths matching pattern. */
+    int gl_bracesc;             /* Count of the number of braces. */
     int gl_offs;                /* Reserved at beginning of gl_pathv. */
     int gl_flags;               /* Copy of flags parameter to glob. */
     char **gl_pathv;            /* List of paths matching pattern. */
