DragonFlyBSD__DragonFlyBSD
commit b96fff2ab5ed2a4f48ae6c59e5ec09640645c091
Author:     Victor Balada Diaz <victor@dragonflybsd.org>
AuthorDate: Sun Oct 1 21:22:29 2006 +0000
Commit:     Victor Balada Diaz <victor@dragonflybsd.org>
CommitDate: Sun Oct 1 21:22:29 2006 +0000

    Fix security issues CVE-2006-4924 and CVE-2006-5051.
    
    Imported-From: FreeBSD

diff --git a/secure/usr.sbin/sshd/Makefile b/secure/usr.sbin/sshd/Makefile
index 421580ac5d..75a95a284f 100644
--- a/secure/usr.sbin/sshd/Makefile
+++ b/secure/usr.sbin/sshd/Makefile
@@ -1,5 +1,5 @@
 # $FreeBSD: src/secure/usr.sbin/sshd/Makefile,v 1.5.2.9 2003/02/03 17:31:12 des Exp $
-# $DragonFly: src/secure/usr.sbin/sshd/Makefile,v 1.12 2005/09/06 18:55:35 dillon Exp $
+# $DragonFly: src/secure/usr.sbin/sshd/Makefile,v 1.12.4.1 2006/10/01 21:22:28 victor Exp $
 #
 
 PROG=	sshd
@@ -25,11 +25,16 @@ CFLAGS+=-DUSE_PAM -DHAVE_SECURITY_PAM_APPL_H \
 	-DHAVE_PAM_GETENVLIST -DHAVE_PAM_PUTENV
 
 SRCS+=	auth-skey.c.patch auth.h.patch auth2.c.patch \
-	loginrec.c.patch monitor.c.patch \
-	myproposal.h.patch servconf.c.patch session.c.patch sshd.c.patch 
+	deattack.c.patch deattack.h.patch defines.h.patch \
+	log.c.patch log.h.patch loginrec.c.patch monitor.c.patch \
+	myproposal.h.patch packet.c.patch servconf.c.patch \
+	session.c.patch sshd.c.patch 
 
 SRCS+=	sshd.8.no_obj.patch sshd_config.5.no_obj.patch
 
+# Fix problems with patch infraestructure
+CFLAGS+= -I${.OBJDIR} -I${.CURDIR} -I${CONTRIBDIR} -I${CONTRIBDIR}/openbsd-compat/ -I-
+
 .if defined(WANT_KERBEROS)
 DISTRIBUTION=krb5
 CFLAGS+= -DKRB5 -DHEIMDAL
diff --git a/secure/usr.sbin/sshd/auth.h.patch b/secure/usr.sbin/sshd/auth.h.patch
index ef4e80cb94..894fbbb65e 100644
--- a/secure/usr.sbin/sshd/auth.h.patch
+++ b/secure/usr.sbin/sshd/auth.h.patch
@@ -1,4 +1,4 @@
-$DragonFly: src/secure/usr.sbin/sshd/Attic/auth.h.patch,v 1.1 2004/07/31 20:05:00 geekgod Exp $
+$DragonFly: src/secure/usr.sbin/sshd/Attic/auth.h.patch,v 1.1.6.1 2006/10/01 21:22:28 victor Exp $
 --- auth.h.orig	2004-07-23 14:26:51.000000000 +0200
 +++ auth.h	2004-07-23 14:20:00.000000000 +0200
 @@ -185,5 +185,12 @@
@@ -14,3 +14,18 @@ $DragonFly: src/secure/usr.sbin/sshd/Attic/auth.h.patch,v 1.1 2004/07/31 20:05:0
 +#endif
 +
 +#endif
+Index: auth.h
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/auth.h,v
+retrieving revision 1.1.1.2
+diff -u -r1.1.1.2 auth.h
+--- auth.h	13 Feb 2006 14:25:25 -0000	1.1.1.2
++++ auth.h	1 Oct 2006 15:14:37 -0000
+@@ -49,6 +49,7 @@
+ 
+ struct Authctxt {
+ 	int		 success;
++	int		 authenticated; /* authenticated and alarms cancelled */
+ 	int		 postponed;	/* authentication needs another step */
+ 	int		 valid;		/* user exists and is allowed to login */
+ 	int		 attempt;
diff --git a/secure/usr.sbin/sshd/deattack.c.patch b/secure/usr.sbin/sshd/deattack.c.patch
new file mode 100644
index 0000000000..0e35ffdc36
--- /dev/null
+++ b/secure/usr.sbin/sshd/deattack.c.patch
@@ -0,0 +1,60 @@
+$DragonFly: src/secure/usr.sbin/sshd/Attic/deattack.c.patch,v 1.1.2.1 2006/10/01 21:22:28 victor Exp $
+Index: deattack.c
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/deattack.c,v
+retrieving revision 1.1.1.1
+diff -u -r1.1.1.1 deattack.c
+--- deattack.c	11 Jul 2005 22:44:21 -0000	1.1.1.1
++++ deattack.c	1 Oct 2006 15:21:21 -0000
+@@ -27,6 +27,24 @@
+ #include "xmalloc.h"
+ #include "deattack.h"
+ 
++/*
++ * CRC attack detection has a worst-case behaviour that is O(N^3) over
++ * the number of identical blocks in a packet. This behaviour can be
++ * exploited to create a limited denial of service attack.
++ *
++ * However, because we are dealing with encrypted data, identical
++ * blocks should only occur every 2^35 maximally-sized packets or so.
++ * Consequently, we can detect this DoS by looking for identical blocks
++ * in a packet.
++ *
++ * The parameter below determines how many identical blocks we will
++ * accept in a single packet, trading off between attack detection and
++ * likelihood of terminating a legitimate connection. A value of 32
++ * corresponds to an average of 2^40 messages before an attack is
++ * misdetected
++ */
++#define MAX_IDENTICAL  32
++
+ /* SSH Constants */
+ #define SSH_MAXBLOCKS	(32 * 1024)
+ #define SSH_BLOCKSIZE	(8)
+@@ -87,7 +105,7 @@
+ 	static u_int16_t *h = (u_int16_t *) NULL;
+ 	static u_int32_t n = HASH_MINSIZE / HASH_ENTRYSIZE;
+ 	u_int32_t i, j;
+-	u_int32_t l;
++	u_int32_t l, same;
+ 	u_char *c;
+ 	u_char *d;
+ 
+@@ -133,7 +151,7 @@
+ 	if (IV)
+ 		h[HASH(IV) & (n - 1)] = HASH_IV;
+ 
+-	for (c = buf, j = 0; c < (buf + len); c += SSH_BLOCKSIZE, j++) {
++	for (c = buf, same = j = 0; c < (buf + len); c += SSH_BLOCKSIZE, j++) {
+ 		for (i = HASH(c) & (n - 1); h[i] != HASH_UNUSED;
+ 		    i = (i + 1) & (n - 1)) {
+ 			if (h[i] == HASH_IV) {
+@@ -144,6 +162,8 @@
+ 						break;
+ 				}
+ 			} else if (!CMP(c, buf + h[i] * SSH_BLOCKSIZE)) {
++				if (++same > MAX_IDENTICAL)
++					return (DEATTACK_DOS_DETECTED);
+ 				if (check_crc(c, buf, len, IV))
+ 					return (DEATTACK_DETECTED);
+ 				else
diff --git a/secure/usr.sbin/sshd/deattack.h.patch b/secure/usr.sbin/sshd/deattack.h.patch
new file mode 100644
index 0000000000..f6744f0928
--- /dev/null
+++ b/secure/usr.sbin/sshd/deattack.h.patch
@@ -0,0 +1,16 @@
+$DragonFly: src/secure/usr.sbin/sshd/Attic/deattack.h.patch,v 1.1.2.1 2006/10/01 21:22:28 victor Exp $
+Index: deattack.h
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/deattack.h,v
+retrieving revision 1.1.1.1
+diff -u -r1.1.1.1 deattack.h
+--- deattack.h	11 Jul 2005 22:44:21 -0000	1.1.1.1
++++ deattack.h	1 Oct 2006 15:21:45 -0000
+@@ -25,6 +25,7 @@
+ /* Return codes */
+ #define DEATTACK_OK		0
+ #define DEATTACK_DETECTED	1
++#define DEATTACK_DOS_DETECTED	2
+ 
+ int	 detect_attack(u_char *, u_int32_t, u_char[8]);
+ #endif
diff --git a/secure/usr.sbin/sshd/defines.h.patch b/secure/usr.sbin/sshd/defines.h.patch
new file mode 100644
index 0000000000..b872f6808d
--- /dev/null
+++ b/secure/usr.sbin/sshd/defines.h.patch
@@ -0,0 +1,20 @@
+$DragonFly: src/secure/usr.sbin/sshd/Attic/defines.h.patch,v 1.1.2.1 2006/10/01 21:22:29 victor Exp $
+Index: defines.h
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/defines.h,v
+retrieving revision 1.1.1.2
+diff -u -r1.1.1.2 defines.h
+--- defines.h	13 Feb 2006 14:25:28 -0000	1.1.1.2
++++ defines.h	1 Oct 2006 15:23:10 -0000
+@@ -544,6 +544,11 @@
+ # undef HAVE_UPDWTMPX
+ #endif
+ 
++#if defined(HAVE_OPENLOG_R) && defined(SYSLOG_DATA_INIT) && \
++    defined(SYSLOG_R_SAFE_IN_SIGHAND)
++# define DO_LOG_SAFE_IN_SIGHAND
++#endif
++
+ #if !defined(HAVE_MEMMOVE) && defined(HAVE_BCOPY)
+ # define memmove(s1, s2, n) bcopy((s2), (s1), (n))
+ #endif /* !defined(HAVE_MEMMOVE) && defined(HAVE_BCOPY) */
diff --git a/secure/usr.sbin/sshd/log.c.patch b/secure/usr.sbin/sshd/log.c.patch
new file mode 100644
index 0000000000..cc3999e373
--- /dev/null
+++ b/secure/usr.sbin/sshd/log.c.patch
@@ -0,0 +1,29 @@
+$DragonFly: src/secure/usr.sbin/sshd/Attic/log.c.patch,v 1.1.2.1 2006/10/01 21:22:29 victor Exp $
+Index: log.c
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/log.c,v
+retrieving revision 1.1.1.1
+diff -u -r1.1.1.1 log.c
+--- log.c	11 Jul 2005 22:44:22 -0000	1.1.1.1
++++ log.c	1 Oct 2006 15:35:05 -0000
+@@ -130,6 +130,20 @@
+ 	va_end(args);
+ }
+ 
++void
++sigdie(const char *fmt, ...)
++{
++	va_list args;
++
++#ifdef DO_LOG_SAFE_IN_SIGHAND
++	va_start(args, fmt);
++	do_log(SYSLOG_LEVEL_FATAL, fmt, args);
++	va_end(args);
++#endif
++	_exit(1);
++}
++
++
+ /* Log this message (information that usually should go to the log). */
+ 
+ void
diff --git a/secure/usr.sbin/sshd/log.h.patch b/secure/usr.sbin/sshd/log.h.patch
index 82a0d0aac0..05423fa140 100644
--- a/secure/usr.sbin/sshd/log.h.patch
+++ b/secure/usr.sbin/sshd/log.h.patch
@@ -1,4 +1,4 @@
-# $DragonFly: src/secure/usr.sbin/sshd/Attic/log.h.patch,v 1.1 2004/08/30 21:59:58 geekgod Exp $
+# $DragonFly: src/secure/usr.sbin/sshd/Attic/log.h.patch,v 1.1.6.1 2006/10/01 21:22:29 victor Exp $
 --- log.h_orig	2004-08-22 16:25:25.000000000 +0000
 +++ log.h	2004-08-22 16:25:38.000000000 +0000
 @@ -15,6 +15,8 @@
@@ -10,3 +10,18 @@
  #include <syslog.h> /* Needed for LOG_AUTHPRIV (if present) */
  
  /* Supported syslog facilities and levels. */
+Index: log.h
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/log.h,v
+retrieving revision 1.1.1.1
+diff -u -r1.1.1.1 log.h
+--- log.h	11 Jul 2005 22:44:22 -0000	1.1.1.1
++++ log.h	1 Oct 2006 15:36:21 -0000
+@@ -55,6 +55,7 @@
+ 
+ void     fatal(const char *, ...) __dead __attribute__((format(printf, 1, 2)));
+ void     error(const char *, ...) __attribute__((format(printf, 1, 2)));
++void     sigdie(const char *, ...) __attribute__((format(printf, 1, 2)));
+ void     logit(const char *, ...) __attribute__((format(printf, 1, 2)));
+ void     verbose(const char *, ...) __attribute__((format(printf, 1, 2)));
+ void     debug(const char *, ...) __attribute__((format(printf, 1, 2)));
diff --git a/secure/usr.sbin/sshd/packet.c.patch b/secure/usr.sbin/sshd/packet.c.patch
new file mode 100644
index 0000000000..7bfb9646be
--- /dev/null
+++ b/secure/usr.sbin/sshd/packet.c.patch
@@ -0,0 +1,28 @@
+$DragonFly: src/secure/usr.sbin/sshd/Attic/packet.c.patch,v 1.1.2.1 2006/10/01 21:22:29 victor Exp $
+Index: packet.c
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/packet.c,v
+retrieving revision 1.1.1.2
+diff -u -r1.1.1.2 packet.c
+--- packet.c	13 Feb 2006 14:25:31 -0000	1.1.1.2
++++ packet.c	1 Oct 2006 15:40:00 -0000
+@@ -978,9 +978,16 @@
+ 	 * (C)1998 CORE-SDI, Buenos Aires Argentina
+ 	 * Ariel Futoransky(futo@core-sdi.com)
+ 	 */
+-	if (!receive_context.plaintext &&
+-	    detect_attack(buffer_ptr(&input), padded_len, NULL) == DEATTACK_DETECTED)
+-		packet_disconnect("crc32 compensation attack: network attack detected");
++	if (!receive_context.plaintext) {
++		switch (detect_attack(buffer_ptr(&input), padded_len, NULL)) {
++		case DEATTACK_DETECTED:
++			packet_disconnect("crc32 compensation attack: "
++			    "network attack detected");
++		case DEATTACK_DOS_DETECTED:
++			packet_disconnect("deattack denial of "
++			    "service detected");
++		}
++	}
+ 
+ 	/* Decrypt data to incoming_packet. */
+ 	buffer_clear(&incoming_packet);
diff --git a/secure/usr.sbin/sshd/session.c.patch b/secure/usr.sbin/sshd/session.c.patch
index 9ec0a899b6..7bae0d27f8 100644
--- a/secure/usr.sbin/sshd/session.c.patch
+++ b/secure/usr.sbin/sshd/session.c.patch
@@ -1,4 +1,4 @@
-$DragonFly: src/secure/usr.sbin/sshd/Attic/session.c.patch,v 1.1 2004/07/31 20:05:00 geekgod Exp $
+$DragonFly: src/secure/usr.sbin/sshd/Attic/session.c.patch,v 1.1.6.1 2006/10/01 21:22:29 victor Exp $
 --- session.c.orig	2004-07-23 14:26:51.000000000 +0200
 +++ session.c	2004-07-23 14:20:00.000000000 +0200
 @@ -748,6 +748,24 @@
@@ -129,3 +129,19 @@ $DragonFly: src/secure/usr.sbin/sshd/Attic/session.c.patch,v 1.1 2004/07/31 20:0
  			exit(1);
  #endif
  	}
+Index: session.c
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/session.c,v
+retrieving revision 1.1.1.2
+diff -u -r1.1.1.2 session.c
+--- session.c	13 Feb 2006 14:25:33 -0000	1.1.1.2
++++ session.c	1 Oct 2006 15:40:38 -0000
+@@ -2436,7 +2436,7 @@
+ 		return;
+ 	called = 1;
+ 
+-	if (authctxt == NULL)
++	if (authctxt == NULL || !authctxt->authenticated)
+ 		return;
+ #ifdef KRB5
+ 	if (options.kerberos_ticket_cleanup &&
diff --git a/secure/usr.sbin/sshd/sshd.c.patch b/secure/usr.sbin/sshd/sshd.c.patch
index dbd9d36ac1..0412aa9008 100644
--- a/secure/usr.sbin/sshd/sshd.c.patch
+++ b/secure/usr.sbin/sshd/sshd.c.patch
@@ -1,4 +1,4 @@
-# $DragonFly: src/secure/usr.sbin/sshd/Attic/sshd.c.patch,v 1.2 2004/08/30 21:59:58 geekgod Exp $
+# $DragonFly: src/secure/usr.sbin/sshd/Attic/sshd.c.patch,v 1.2.6.1 2006/10/01 21:22:29 victor Exp $
 --- ./sshd.c	2004-08-12 13:08:15.000000000 +0000
 +++ /home/sullrich/openssh-3.9p1/sshd.c	2004-08-19 17:37:10.000000000 +0000
 @@ -53,6 +53,10 @@
@@ -30,3 +30,27 @@
  	/*
  	 * Register our connection.  This turns encryption off because we do
  	 * not have a key.
+Index: sshd.c
+===================================================================
+RCS file: /home/dcvs/src/crypto/openssh-4/sshd.c,v
+retrieving revision 1.1.1.2
+diff -u -r1.1.1.2 sshd.c
+--- sshd.c	13 Feb 2006 14:25:41 -0000	1.1.1.2
++++ sshd.c	1 Oct 2006 15:42:19 -0000
+@@ -312,7 +312,7 @@
+ 		kill(pmonitor->m_pid, SIGALRM);
+ 
+ 	/* Log error and exit. */
+-	fatal("Timeout before authentication for %s", get_remote_ipaddr());
++	sigdie("Timeout before authentication for %s", get_remote_ipaddr());
+ }
+ 
+ /*
+@@ -1731,6 +1731,7 @@
+ 	 */
+ 	alarm(0);
+ 	signal(SIGALRM, SIG_DFL);
++	authctxt->authenticated = 1;
+ 	if (startup_pipe != -1) {
+ 		close(startup_pipe);
+ 		startup_pipe = -1;
