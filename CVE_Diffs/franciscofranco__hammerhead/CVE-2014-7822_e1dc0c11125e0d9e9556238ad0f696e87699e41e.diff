franciscofranco__hammerhead
commit e1dc0c11125e0d9e9556238ad0f696e87699e41e
Author:     Ben Hutchings <ben@decadent.org.uk>
AuthorDate: Tue Feb 17 01:46:53 2015 +0000
Commit:     Francisco Franco <franciscofranco.1990@gmail.com>
CommitDate: Wed Jul 5 17:18:18 2017 +0000

    splice: Apply generic position and size checks to each write
    
    3.2.67-rc1 review patch.  If anyone has any objections, please let me know.
    
    ------------------
    
    From: Ben Hutchings <ben@decadent.org.uk>
    
    We need to check the position and size of file writes against various
    limits, using generic_write_check().  This was not being done for
    the splice write path.  It was fixed upstream by commit 8d0207652cbe
    ("->splice_write() via ->write_iter()") but we can't apply that.
    
    CVE-2014-7822
    
    Change-Id: I1fdbcb1d8547adcac662139d8acf571862a420bf
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Zefan Li <lizefan@huawei.com>
    Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>

diff --git a/fs/ocfs2/file.c b/fs/ocfs2/file.c
index 061591a3ab0..e87b7b45fde 100644
--- a/fs/ocfs2/file.c
+++ b/fs/ocfs2/file.c
@@ -2466,9 +2466,7 @@ static ssize_t ocfs2_file_splice_write(struct pipe_inode_info *pipe,
 	struct address_space *mapping = out->f_mapping;
 	struct inode *inode = mapping->host;
 	struct splice_desc sd = {
-		.total_len = len,
 		.flags = flags,
-		.pos = *ppos,
 		.u.file = out,
 	};
 
@@ -2478,6 +2476,12 @@ static ssize_t ocfs2_file_splice_write(struct pipe_inode_info *pipe,
 			out->f_path.dentry->d_name.len,
 			out->f_path.dentry->d_name.name, len);
 
+	ret = generic_write_checks(out, ppos, &len, 0);
+	if (ret)
+		return ret;
+	sd.total_len = len;
+	sd.pos = *ppos;
+
 	if (pipe->inode)
 		mutex_lock_nested(&pipe->inode->i_mutex, I_MUTEX_PARENT);
 
diff --git a/fs/splice.c b/fs/splice.c
index 47c4c1ad0c0..ea85353273c 100644
--- a/fs/splice.c
+++ b/fs/splice.c
@@ -985,13 +985,17 @@ generic_file_splice_write(struct pipe_inode_info *pipe, struct file *out,
 	struct address_space *mapping = out->f_mapping;
 	struct inode *inode = mapping->host;
 	struct splice_desc sd = {
-		.total_len = len,
 		.flags = flags,
-		.pos = *ppos,
 		.u.file = out,
 	};
 	ssize_t ret;
 
+	ret = generic_write_checks(out, ppos, &len, S_ISBLK(inode->i_mode));
+	if (ret)
+		return ret;
+	sd.total_len = len;
+	sd.pos = *ppos;
+
 	pipe_lock(pipe);
 
 	splice_from_pipe_begin(&sd);
