franciscofranco__hammerhead
commit 46b5a17e64063de4e3ea5f68d2c0085a0b20a64f
Author:     Willy Tarreau <w@1wt.eu>
AuthorDate: Mon Jan 18 16:36:09 2016 +0100
Commit:     Francisco Franco <franciscofranco.1990@gmail.com>
CommitDate: Fri Aug 11 14:40:37 2017 +0000

    pipe: limit the per-user amount of pages allocated in pipes
    
    commit 759c01142a5d0f364a462346168a56de28a80f52 upstream.
    
    On no-so-small systems, it is possible for a single process to cause an
    OOM condition by filling large pipes with data that are never read. A
    typical process filling 4000 pipes with 1 MB of data will use 4 GB of
    memory. On small systems it may be tricky to set the pipe max size to
    prevent this from happening.
    
    This patch makes it possible to enforce a per-user soft limit above
    which new pipes will be limited to a single page, effectively limiting
    them to 4 kB each, as well as a hard limit above which no new pipes may
    be created for this user. This has the effect of protecting the system
    against memory abuse without hurting other users, and still allowing
    pipes to work correctly though with less data at once.
    
    The limit are controlled by two new sysctls : pipe-user-pages-soft, and
    pipe-user-pages-hard. Both may be disabled by setting them to zero. The
    default soft limit allows the default number of FDs per process (1024)
    to create pipes of the default size (64kB), thus reaching a limit of 64MB
    before starting to create only smaller pipes. With 256 processes limited
    to 1024 FDs each, this results in 1024*64kB + (256*1024 - 1024) * 4kB =
    1084 MB of memory allocated for a user. The hard limit is disabled by
    default to avoid breaking existing applications that make intensive use
    of pipes (eg: for splicing).
    
    Change-Id: Ic44eff337b0d5e2e8d7dc8456b5b2e1d6edfef2b
    Reported-by: socketpair@gmail.com
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Mitigates: CVE-2013-4312 (Linux 2.0+)
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>

diff --git a/include/linux/sched.h b/include/linux/sched.h
index 6bee9b71ee6..fb532ade3f8 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -730,6 +730,7 @@ struct user_struct {
 	unsigned long locked_shm; /* How many pages of mlocked shm ? */
 	atomic_long_t pipe_bufs;  /* how many pages are allocated in pipe buffers */
 	unsigned long unix_inflight;	/* How many files in flight in unix sockets */
+	atomic_long_t pipe_bufs;  /* how many pages are allocated in pipe buffers */
 
 #ifdef CONFIG_KEYS
 	struct key *uid_keyring;	/* UID specific keyring */
