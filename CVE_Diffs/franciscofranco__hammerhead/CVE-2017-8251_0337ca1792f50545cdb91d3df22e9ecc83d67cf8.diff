franciscofranco__hammerhead
commit 0337ca1792f50545cdb91d3df22e9ecc83d67cf8
Author:     Maggie White <maggiewhite@google.com>
AuthorDate: Wed Jul 5 13:00:40 2017 -0700
Commit:     Francisco Franco <franciscofranco.1990@gmail.com>
CommitDate: Sat Sep 16 11:57:30 2017 +0000

    msm: camera: isp: fix for out of bound access array
    
    There is no bound check in stream_cfg_cmd->num_streams and it's used in
    several places as a maximum index into the stream_cfg_cmd->stream_handle
    array which has a size of 15. Current code didn't check the maximum
    index to make sure it didn't exceed the array size.
    
    Bug: 62379525
    Change-Id: Idcf639486d235551882dafc34d9e798d78c70bf0
    Signed-off-by: Maggie White <maggiewhite@google.com>
    CVE-2017-8251
    Signed-off-by: Kevin F. Haggerty <haggertk@lineageos.org>
    Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>

diff --git a/drivers/media/platform/msm/camera_v2/isp/msm_isp_stats_util.c b/drivers/media/platform/msm/camera_v2/isp/msm_isp_stats_util.c
index 56b0da1290d..826b4c673ef 100644
--- a/drivers/media/platform/msm/camera_v2/isp/msm_isp_stats_util.c
+++ b/drivers/media/platform/msm/camera_v2/isp/msm_isp_stats_util.c
@@ -384,6 +384,13 @@ static int msm_isp_start_stats_stream(struct vfe_device *vfe_dev,
 	uint32_t stats_mask = 0, comp_stats_mask = 0, idx;
 	struct msm_vfe_stats_stream *stream_info;
 	struct msm_vfe_stats_shared_data *stats_data = &vfe_dev->stats_data;
+
+	if (stream_cfg_cmd->num_streams > MSM_ISP_STATS_MAX) {
+		pr_err("%s invalid num_streams %d\n", __func__,
+			stream_cfg_cmd->num_streams);
+		return -EINVAL;
+	}
+
 	for (i = 0; i < stream_cfg_cmd->num_streams; i++) {
 		idx = STATS_IDX(stream_cfg_cmd->stream_handle[i]);
 
@@ -434,6 +441,13 @@ static int msm_isp_stop_stats_stream(struct vfe_device *vfe_dev,
 	uint32_t stats_mask = 0, comp_stats_mask = 0, idx;
 	struct msm_vfe_stats_stream *stream_info;
 	struct msm_vfe_stats_shared_data *stats_data = &vfe_dev->stats_data;
+
+	if (stream_cfg_cmd->num_streams > MSM_ISP_STATS_MAX) {
+		pr_err("%s invalid num_streams %d\n", __func__,
+			stream_cfg_cmd->num_streams);
+		return -EINVAL;
+	}
+
 	for (i = 0; i < stream_cfg_cmd->num_streams; i++) {
 		idx = STATS_IDX(stream_cfg_cmd->stream_handle[i]);
 
