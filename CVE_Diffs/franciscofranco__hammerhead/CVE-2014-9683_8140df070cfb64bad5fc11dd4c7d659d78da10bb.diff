franciscofranco__hammerhead
commit 8140df070cfb64bad5fc11dd4c7d659d78da10bb
Author:     Michael Halcrow <mhalcrow@google.com>
AuthorDate: Wed Nov 26 09:09:16 2014 -0800
Commit:     franciscofranco <franciscofranco.1990@gmail.com>
CommitDate: Wed Dec 2 19:39:05 2015 +0000

    eCryptfs: Remove buggy and unnecessary write in file name decode routine
    
    Dmitry Chernenkov used KASAN to discover that eCryptfs writes past the
    end of the allocated buffer during encrypted filename decoding. This
    fix corrects the issue by getting rid of the unnecessary 0 write when
    the current bit offset is 2.
    
    Signed-off-by: Michael Halcrow <mhalcrow@google.com>
    Reported-by: Dmitry Chernenkov <dmitryc@google.com>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Cc: stable@vger.kernel.org # v2.6.29+: 51ca58d eCryptfs: Filename Encryption: Encoding and encryption functions
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
    
    set topic to  CVE-2014-9683
    Change-Id: Idbed01a48c2f0fa49a140f89d2f1caca65cb7b8a
    
    Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>

diff --git a/fs/ecryptfs/crypto.c b/fs/ecryptfs/crypto.c
index ea993128155..3d0633891f2 100644
--- a/fs/ecryptfs/crypto.c
+++ b/fs/ecryptfs/crypto.c
@@ -2044,7 +2044,6 @@ ecryptfs_decode_from_filename(unsigned char *dst, size_t *dst_size,
 			break;
 		case 2:
 			dst[dst_byte_offset++] |= (src_byte);
-			dst[dst_byte_offset] = 0;
 			current_bit_offset = 0;
 			break;
 		}
