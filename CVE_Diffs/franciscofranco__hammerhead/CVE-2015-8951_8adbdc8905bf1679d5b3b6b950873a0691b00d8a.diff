franciscofranco__hammerhead
commit 8adbdc8905bf1679d5b3b6b950873a0691b00d8a
Author:     Vidyakumar Athota <vathota@codeaurora.org>
AuthorDate: Wed Dec 16 15:42:39 2015 -0800
Commit:     Francisco Franco <franciscofranco.1990@gmail.com>
CommitDate: Fri Aug 11 14:42:19 2017 +0000

    ASoC: msm-lsm-client: free lsm client data in msm_lsm_close
    
    Currently lsm client data is deallocated when q6lsm_open() fails
    which can cause memory corruption if lsm client data is accessed
    after freed. Fix this issue by deallocating the client data only
    in msm_lsm_close().
    
    Change-Id: If048c26a0ffd8a346a28622183cbf2ba1e7e5ff3
    Signed-off-by: Vidyakumar Athota <vathota@codeaurora.org>
    mh0rst: Backport, fixes CVE-2015-8951
    Signed-off-by: Francisco Franco <franciscofranco.1990@gmail.com>

diff --git a/include/sound/q6lsm.h b/include/sound/q6lsm.h
index 34eba81f285..295d2c986dd 100644
--- a/include/sound/q6lsm.h
+++ b/include/sound/q6lsm.h
@@ -46,6 +46,7 @@ struct lsm_client {
 	uint16_t	connect_to_port;
 	uint16_t	user_sensitivity;
 	uint16_t	kw_sensitivity;
+	bool		opened;
 	bool		started;
 };
 
diff --git a/sound/soc/msm/qdsp6v2/msm-lsm-client.c b/sound/soc/msm/qdsp6v2/msm-lsm-client.c
index 93b9f318b04..6c9dff03c2e 100644
--- a/sound/soc/msm/qdsp6v2/msm-lsm-client.c
+++ b/sound/soc/msm/qdsp6v2/msm-lsm-client.c
@@ -263,13 +263,13 @@ static int msm_lsm_open(struct snd_pcm_substream *substream)
 		kfree(prtd);
 		return -ENOMEM;
 	}
+	prtd->lsm_client->opened = false;
 	ret = q6lsm_open(prtd->lsm_client);
 	if (ret < 0) {
 		pr_err("%s: lsm open failed, %d\n", __func__, ret);
-		q6lsm_client_free(prtd->lsm_client);
-		kfree(prtd);
 		return ret;
 	}
+	prtd->lsm_client->opened = true;
 
 	pr_debug("%s: Session ID %d\n", __func__, prtd->lsm_client->session);
 	prtd->lsm_client->started = false;
@@ -288,7 +288,10 @@ static int msm_lsm_close(struct snd_pcm_substream *substream)
 
 	pr_debug("%s\n", __func__);
 
-	q6lsm_close(prtd->lsm_client);
+	if (prtd->lsm_client->opened) {
+		q6lsm_close(prtd->lsm_client);
+		prtd->lsm_client->opened = false;
+	}
 	q6lsm_client_free(prtd->lsm_client);
 
 	spin_lock_irqsave(&prtd->event_lock, flags);
