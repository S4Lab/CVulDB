libgd__libgd
commit a11f47475e6443b7f32d21f2271f28f417e2ac04
Author:     Christoph M. Becker <cmbecker69@gmx.de>
AuthorDate: Wed Nov 29 19:37:38 2017 +0100
Commit:     Christoph M. Becker <cmbecker69@gmx.de>
CommitDate: Mon Jan 29 15:17:12 2018 +0100

    Fix #420: Potential infinite loop in gdImageCreateFromGifCtx
    
    Due to a signedness confusion in `GetCode_` a corrupt GIF file can
    trigger an infinite loop.  Furthermore we make sure that a GIF without
    any palette entries is treated as invalid *after* open palette entries
    have been removed.
    
    CVE-2018-5711
    
    See also https://bugs.php.net/bug.php?id=75571.

diff --git a/src/gd_gif_in.c b/src/gd_gif_in.c
index daf26e7..0a8bd71 100644
--- a/src/gd_gif_in.c
+++ b/src/gd_gif_in.c
@@ -335,11 +335,6 @@ terminated:
 		return 0;
 	}
 
-	if(!im->colorsTotal) {
-		gdImageDestroy(im);
-		return 0;
-	}
-
 	/* Check for open colors at the end, so
 	 * we can reduce colorsTotal and ultimately
 	 * BitsPerPixel */
@@ -351,6 +346,11 @@ terminated:
 		}
 	}
 
+	if(!im->colorsTotal) {
+		gdImageDestroy(im);
+		return 0;
+	}
+
 	return im;
 }
 
@@ -447,7 +447,7 @@ static int
 GetCode_(gdIOCtx *fd, CODE_STATIC_DATA *scd, int code_size, int flag, int *ZeroDataBlockP)
 {
 	int i, j, ret;
-	unsigned char count;
+	int count;
 
 	if(flag) {
 		scd->curbit = 0;
diff --git a/tests/gif/.gitignore b/tests/gif/.gitignore
index 4e80a4b..6eb643c 100644
--- a/tests/gif/.gitignore
+++ b/tests/gif/.gitignore
@@ -8,4 +8,5 @@
 /gif_im2im
 /gif_null
 /ossfuzz5700
+/php_bug_75571
 /uninitialized_memory_read
diff --git a/tests/gif/CMakeLists.txt b/tests/gif/CMakeLists.txt
index 2b73749..e58e6b0 100644
--- a/tests/gif/CMakeLists.txt
+++ b/tests/gif/CMakeLists.txt
@@ -4,6 +4,7 @@ LIST(APPEND TESTS_FILES
 	bug00227
 	gif_null
 	ossfuzz5700
+	php_bug_75571
 	uninitialized_memory_read
 )
 
diff --git a/tests/gif/Makemodule.am b/tests/gif/Makemodule.am
index 3199438..5dbeac5 100644
--- a/tests/gif/Makemodule.am
+++ b/tests/gif/Makemodule.am
@@ -4,6 +4,7 @@ libgd_test_programs += \
 	gif/bug00227 \
 	gif/gif_null \
 	gif/ossfuzz5700 \
+	gif/php_bug_75571 \
 	gif/uninitialized_memory_read
 
 if HAVE_LIBPNG
@@ -26,4 +27,5 @@ EXTRA_DIST += \
 	gif/bug00066.gif \
 	gif/bug00066_exp.png \
 	gif/ossfuzz5700.gif \
+	gif/php_bug_75571.gif \
 	gif/unitialized_memory_read.gif
diff --git a/tests/gif/php_bug_75571.c b/tests/gif/php_bug_75571.c
new file mode 100644
index 0000000..d4fae3a
--- /dev/null
+++ b/tests/gif/php_bug_75571.c
@@ -0,0 +1,28 @@
+/**
+ * Test that GIF reading does not loop infinitely
+ * 
+ * We are reading a crafted GIF image which has been truncated.  This would
+ * trigger an infinite loop formerly, but know bails out early, returning
+ * NULL from gdImageCreateFromGif().
+ *
+ * See also https://bugs.php.net/bug.php?id=75571.
+ */
+
+
+#include "gd.h"
+#include "gdtest.h"
+
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+
+    fp = gdTestFileOpen2("gif", "php_bug_75571.gif");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGif(fp);
+    gdTestAssert(im == NULL);
+    fclose(fp);
+
+    return gdNumFailures();
+}
diff --git a/tests/gif/php_bug_75571.gif b/tests/gif/php_bug_75571.gif
new file mode 100644
index 0000000..3c30b40
Binary files /dev/null and b/tests/gif/php_bug_75571.gif differ
