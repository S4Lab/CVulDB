libgd__libgd
commit 1de613c14bcc46c9f023a3826e0330fca905f4e5
Author:     pajoye <none@none>
AuthorDate: Sun May 6 19:01:04 2007 +0000
Commit:     pajoye <none@none>
CommitDate: Sun May 6 19:01:04 2007 +0000

    - MFB:
     - prevent double lock/unlock for the tween colors cache
     - use gdFree not free
     - #40, possible Buffer overflow in the gdImageStringFTEx function
       in gdft.c (CVE-2007-0455) (Kees Cook)

diff --git a/src/gdft.c b/src/gdft.c
index fd3ee6c..c44ccab 100644
--- a/src/gdft.c
+++ b/src/gdft.c
@@ -783,10 +783,8 @@ gdft_draw_bitmap (gdCache_head_t * tc_cache, gdImage * im, int fg,
 	      /* find antialised color */
 
 	      tc_key.bgcolor = *pixel;
-				gdMutexLock(gdFontCacheMutex);
 	      tc_elem = (tweencolor_t *) gdCacheGet (tc_cache, &tc_key);
 	      *pixel = tc_elem->tweencolor;
-				gdMutexUnlock(gdFontCacheMutex);
 	    }
 	}
     }
@@ -1196,7 +1194,7 @@ fprintf(stderr,"dpi=%d,%d metric_res=%d ptsize=%g\n",hdpi,vdpi,METRIC_RES,ptsize
 		{
 		  ch = c & 0xFF;	/* don't extend sign */
 		}
-	      next++;
+	      if (*next) next++;
 	    }
 	    break;
 	  case gdFTEX_Big5:
@@ -1590,9 +1588,14 @@ static char * font_path(char **fontpath, char *name_list)
       fullname = gdRealloc (fullname,
                           strlen (fontsearchpath) + strlen (name) + 8);
       /* if name is an absolute or relative pathname then test directly */
+#ifdef NETWARE
+      /* netware uses the format "volume:/path" or the standard "/path" */
+      if (name[0] != 0 && (strstr(name, ":/") || name[0] == '/'))
+#else
       if (strchr (name, '/')
 	  || (name[0] != 0 && name[1] == ':'
 	      && (name[2] == '/' || name[2] == '\\')))
+#endif
 	{
 	  sprintf (fullname, "%s", name);
 	  if (access (fullname, R_OK) == 0)
@@ -1651,7 +1654,7 @@ static char * font_path(char **fontpath, char *name_list)
   gdFree (fontlist);
   if (!font_found)
     {
-      free (fullname);
+      gdFree (fullname);
       return "Could not find/open font";
     }
 
