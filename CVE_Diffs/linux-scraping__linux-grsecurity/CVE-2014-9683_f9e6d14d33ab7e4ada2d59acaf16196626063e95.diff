linux-scraping__linux-grsecurity
commit f9e6d14d33ab7e4ada2d59acaf16196626063e95
Author:     Michael Halcrow <mhalcrow@google.com>
AuthorDate: Wed Nov 26 09:09:16 2014 -0800
Commit:     Willy Tarreau <w@1wt.eu>
CommitDate: Fri Sep 18 13:51:53 2015 +0200

    eCryptfs: Remove buggy and unnecessary write in file name decode routine
    
    commit 942080643bce061c3dd9d5718d3b745dcb39a8bc upstream.
    
    Dmitry Chernenkov used KASAN to discover that eCryptfs writes past the
    end of the allocated buffer during encrypted filename decoding. This
    fix corrects the issue by getting rid of the unnecessary 0 write when
    the current bit offset is 2.
    
    Signed-off-by: Michael Halcrow <mhalcrow@google.com>
    Reported-by: Dmitry Chernenkov <dmitryc@google.com>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    
    CVE-2014-9683
    
    Signed-off-by: Willy Tarreau <w@1wt.eu>

diff --git a/fs/ecryptfs/crypto.c b/fs/ecryptfs/crypto.c
index 7e164bbbbbf2..cc5790473188 100644
--- a/fs/ecryptfs/crypto.c
+++ b/fs/ecryptfs/crypto.c
@@ -2088,7 +2088,6 @@ ecryptfs_decode_from_filename(unsigned char *dst, size_t *dst_size,
 			break;
 		case 2:
 			dst[dst_byte_offset++] |= (src_byte);
-			dst[dst_byte_offset] = 0;
 			current_bit_offset = 0;
 			break;
 		}
