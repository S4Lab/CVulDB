linux-scraping__linux-grsecurity
commit 0b4462a8b7f59595ad10a9af04066d27dfe32686
Author:     Brad Spengler <spender@grsecurity.net>
AuthorDate: Thu Jan 30 16:58:35 2014 -0500
Commit:     Mickaël Salaün <mic@digikod.net>
CommitDate: Thu Jan 30 16:58:35 2014 -0500

    grsec: Apply grsecurity-3.0-3.13.1-201401301657.patch
    
    commit 5e1f8e0b67af1f2876f1906eab828914a1c2670b
    Author: Brad Spengler <spender@grsecurity.net>
    Date:   Thu Jan 30 16:47:31 2014 -0500
    
        Fix an extremely serious vulnerability (it's nearly an arbitrary write) introduced
        in 3.4 with the addition of X32 support.  Hopefully most users haven't enabled this
        option, but as it's enabled now in some distros (e.g. Ubuntu, which is affected)
        the chance is more likely for those importing base configs from such a distro.
    
        I would recommend you disable X32 support, especially if you're not using it.  As
        this bug could have been discovered with even a completely dumb syscall fuzzer, it
        should be clear what level of testing went into X32 support.
    
        Normally we would have fixed this immediately, announced it, and moved on, but
        this was not my bug and not my choice.  So I got to wait for the likes of linux-distros
        and security@kernel.org to decide when it could be fixed, while I had to continue
        releasing grsecurity patches without the fix for a serious vulnerability I was aware
        of for two days.  I'm not happy at all about this, and this is exactly why I refuse
        to work in any kind of situation where I would become aware of something that I
        couldn't fix immediately.  Hopefully this is the last time this will happen.
    
        Credits to the PaX Team for finding the bug and writing the fix.  This is CVE-2014-0038.
    
     net/compat.c |    9 ++-------
     1 files changed, 2 insertions(+), 7 deletions(-)
    
    Signature-tree: b631417f5a0836f8935260136578323531eaf676

diff --git a/net/compat.c b/net/compat.c
index 0529c9c648a6..94fa415f7488 100644
--- a/net/compat.c
+++ b/net/compat.c
@@ -780,21 +780,16 @@ asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg,
 	if (flags & MSG_CMSG_COMPAT)
 		return -EINVAL;
 
-	if (COMPAT_USE_64BIT_TIME)
-		return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,
-				      flags | MSG_CMSG_COMPAT,
-				      (struct timespec __force_kernel *) timeout);
-
 	if (timeout == NULL)
 		return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,
 				      flags | MSG_CMSG_COMPAT, NULL);
 
-	if (get_compat_timespec(&ktspec, timeout))
+	if (compat_get_timespec(&ktspec, timeout))
 		return -EFAULT;
 
 	datagrams = __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,
 				   flags | MSG_CMSG_COMPAT, &ktspec);
-	if (datagrams > 0 && put_compat_timespec(&ktspec, timeout))
+	if (datagrams > 0 && compat_put_timespec(&ktspec, timeout))
 		datagrams = -EFAULT;
 
 	return datagrams;
