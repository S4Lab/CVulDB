linux-scraping__linux-grsecurity
commit 24866e75aa5f9ae2b8917e9bec420f7b966d0836
Author:     Xufeng Zhang <xufeng.zhang@windriver.com>
AuthorDate: Thu Jun 12 10:53:36 2014 +0800
Commit:     Willy Tarreau <w@1wt.eu>
CommitDate: Sun Nov 23 10:55:35 2014 +0100

    sctp: Fix sk_ack_backlog wrap-around problem
    
    Consider the scenario:
    For a TCP-style socket, while processing the COOKIE_ECHO chunk in
    sctp_sf_do_5_1D_ce(), after it has passed a series of sanity check,
    a new association would be created in sctp_unpack_cookie(), but afterwards,
    some processing maybe failed, and sctp_association_free() will be called to
    free the previously allocated association, in sctp_association_free(),
    sk_ack_backlog value is decremented for this socket, since the initial
    value for sk_ack_backlog is 0, after the decrement, it will be 65535,
    a wrap-around problem happens, and if we want to establish new associations
    afterward in the same socket, ABORT would be triggered since sctp deem the
    accept queue as full.
    Fix this issue by only decrementing sk_ack_backlog for associations in
    the endpoint's list.
    
    Fix-suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
    Acked-by: Daniel Borkmann <dborkman@redhat.com>
    Acked-by: Vlad Yasevich <vyasevich@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (cherry picked from commit d3217b15a19a4779c39b212358a5c71d725822ee)
    [wt: fixes CVE-2014-4667]
    Signed-off-by: Willy Tarreau <w@1wt.eu>

diff --git a/net/sctp/associola.c b/net/sctp/associola.c
index 7eed77a39d0d..55b015b9beec 100644
--- a/net/sctp/associola.c
+++ b/net/sctp/associola.c
@@ -380,7 +380,7 @@ void sctp_association_free(struct sctp_association *asoc)
 	/* Only real associations count against the endpoint, so
 	 * don't bother for if this is a temporary association.
 	 */
-	if (!asoc->temp) {
+	if (!list_empty(&asoc->asocs)) {
 		list_del(&asoc->asocs);
 
 		/* Decrement the backlog value for a TCP-style listening
