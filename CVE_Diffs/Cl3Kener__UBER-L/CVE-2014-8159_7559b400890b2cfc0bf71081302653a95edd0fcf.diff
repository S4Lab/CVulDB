Cl3Kener__UBER-L
commit 7559b400890b2cfc0bf71081302653a95edd0fcf
Author:     Shachar Raindel <raindel@mellanox.com>
AuthorDate: Wed Mar 18 17:39:08 2015 +0000
Commit:     Chet Kener <Cl3Kener@gmail.com>
CommitDate: Wed Jun 24 01:56:04 2015 -0400

    IB/uverbs: Prevent integer overflow in ib_umem_get address arithmetic
    
    commit 8494057ab5e40df590ef6ef7d66324d3ae33356b upstream.
    
    Properly verify that the resulting page aligned end address is larger
    than both the start address and the length of the memory area requested.
    
    Both the start and length arguments for ib_umem_get are controlled by
    the user. A misbehaving user can provide values which will cause an
    integer overflow when calculating the page aligned end address.
    
    This overflow can cause also miscalculation of the number of pages
    mapped, and additional logic issues.
    
    Addresses: CVE-2014-8159
    Signed-off-by: Shachar Raindel <raindel@mellanox.com>
    Signed-off-by: Jack Morgenstein <jackm@mellanox.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Zefan Li <lizefan@huawei.com>
    Signed-off-by: Chet Kener <Cl3Kener@gmail.com>

diff --git a/drivers/infiniband/core/umem.c b/drivers/infiniband/core/umem.c
index a8411232207..055ebebc07d 100644
--- a/drivers/infiniband/core/umem.c
+++ b/drivers/infiniband/core/umem.c
@@ -94,6 +94,14 @@ struct ib_umem *ib_umem_get(struct ib_ucontext *context, unsigned long addr,
 	if (dmasync)
 		dma_set_attr(DMA_ATTR_WRITE_BARRIER, &attrs);
 
+	/*
+	 * If the combination of the addr and size requested for this memory
+	 * region causes an integer overflow, return error.
+	 */
+	if ((PAGE_ALIGN(addr + size) <= size) ||
+	    (PAGE_ALIGN(addr + size) <= addr))
+		return ERR_PTR(-EINVAL);
+
 	if (!can_do_mlock())
 		return ERR_PTR(-EPERM);
 
