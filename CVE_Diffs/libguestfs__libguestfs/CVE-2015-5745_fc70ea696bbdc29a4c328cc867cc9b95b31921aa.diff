libguestfs__libguestfs
commit fc70ea696bbdc29a4c328cc867cc9b95b31921aa
Author:     Richard W.M. Jones <rjones@redhat.com>
AuthorDate: Thu Aug 6 16:41:09 2015 +0100
Commit:     Richard W.M. Jones <rjones@redhat.com>
CommitDate: Thu Aug 6 16:41:09 2015 +0100

    docs: Document CVE-2015-5745 qemu vulnerability.

diff --git a/src/guestfs.pod b/src/guestfs.pod
index 0f8b0fb23..75afa9da4 100644
--- a/src/guestfs.pod
+++ b/src/guestfs.pod
@@ -2219,6 +2219,31 @@ arbitrary code execution (confined to the libguestfs appliance).
 In libguestfs E<ge> 1.29.5 and E<ge> 1.28.3, libguestfs uses the
 C<strings> I<-a> option to avoid BFD parsing on the file.
 
+=head2 CVE-2015-5745
+
+L<https://bugzilla.redhat.com/show_bug.cgi?id=1251157>
+
+This is not a vulnerability in libguestfs, but because we always give
+a virtio-serial port to each guest (since that is how guest-host
+communication happens), an escalation from the appliance to the host
+qemu process is possible.  This could affect you if:
+
+=over 4
+
+=item *
+
+your libguestfs program runs untrusted programs out of the guest
+(using L</guestfs_sh> etc), or
+
+=item *
+
+another exploit was found in (for example) kernel filesystem code that
+allowed a malformed filesystem to take over the appliance.
+
+=back
+
+If you use sVirt to confine qemu, that would thwart some attacks.
+
 =head1 CONNECTION MANAGEMENT
 
 =head2 guestfs_h *
