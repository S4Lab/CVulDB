aosp-mirror__platform_external_expat
commit d4f735b88d9932bd5039df2335eefdd0723dbe20
Author:     Sebastian Pipping <sebastian@pipping.org>
AuthorDate: Wed Apr 12 23:55:45 2017 +0200
Commit:     Sebastian Pipping <sebastian@pipping.org>
CommitDate: Wed May 3 00:38:57 2017 +0200

    Detect integer overflow (CVE-2016-9063)
    
    Needs XML_CONTEXT_BYTES to be _undefined_ to trigger,
    default is defined and set to 1024.
    
    Previously patched downstream, e.g.
    https://sources.debian.net/src/expat/2.2.0-2/debian/patches/CVE-2016-9063.patch/
    https://bug1274777.bmoattachments.org/attachment.cgi?id=8755538
    
    This version avoids undefined behavior from _signed_ integer overflow.
    
    Signed-off-by: Pascal Cuoq <cuoq@trust-in-soft.com>

diff --git a/expat/lib/xmlparse.c b/expat/lib/xmlparse.c
index b62d789..a8377a8 100644
--- a/expat/lib/xmlparse.c
+++ b/expat/lib/xmlparse.c
@@ -1633,11 +1633,14 @@ XML_Parse(XML_Parser parser, const char *s, int len, int isFinal)
     nLeftOver = s + len - end;
     if (nLeftOver) {
       if (buffer == NULL || nLeftOver > bufferLim - buffer) {
-        /* FIXME avoid integer overflow */
-        char *temp;
-        temp = (buffer == NULL
-                ? (char *)MALLOC(len * 2)
-                : (char *)REALLOC(buffer, len * 2));
+        /* avoid _signed_ integer overflow */
+        char *temp = NULL;
+        const int bytesToAllocate = (int)((unsigned)len * 2U);
+        if (bytesToAllocate > 0) {
+          temp = (buffer == NULL
+                ? (char *)MALLOC(bytesToAllocate)
+                : (char *)REALLOC(buffer, bytesToAllocate));
+        }
         if (temp == NULL) {
           errorCode = XML_ERROR_NO_MEMORY;
           eventPtr = eventEndPtr = NULL;
@@ -1645,7 +1648,7 @@ XML_Parse(XML_Parser parser, const char *s, int len, int isFinal)
           return XML_STATUS_ERROR;
         }
         buffer = temp;
-        bufferLim = buffer + len * 2;
+        bufferLim = buffer + bytesToAllocate;
       }
       memcpy(buffer, end, nLeftOver);
     }
