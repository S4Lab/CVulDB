OpenVZ__vzkernel
commit eb9603b3f43225caa100c498e4f2eb7f1200330b
Author:     Willem de Bruijn <willemb@google.com>
AuthorDate: Mon Oct 30 12:53:19 2017 +0300
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Wed Dec 13 12:42:57 2017 +0300

    ms/packet: in packet_do_bind, test fanout with bind_lock held
    
    Once a socket has po->fanout set, it remains a member of the group
    until it is destroyed. The prot_hook must be constant and identical
    across sockets in the group.
    
    If fanout_add races with packet_do_bind between the test of po->fanout
    and taking the lock, the bind call may make type or dev inconsistent
    with that of the fanout group.
    
    Hold po->bind_lock when testing po->fanout to avoid this race.
    
    I had to introduce artificial delay (local_bh_enable) to actually
    observe the race.
    
    Fixes: dc99f600698d ("packet: Add fanout support.")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    =======================================================
    CVE-2017-15649 kernel: Use-after-free in the af_packet.c
    https://jira.sw.ru/browse/PSBM-75808
    
    vz-specific changes:
    The patch was re-diffed for vzkernel vz7.33.22, no functional changes.
    
    Commit 4971613c1639d8e5f102c4e797c3bf8f83a5a69e in the mainline kernel.
    
    Signed-off-by: Evgenii Shatokhin <eshatokhin@virtuozzo.com>

diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index 2e9401d793ac..3d53722af4a3 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -2664,13 +2664,15 @@ static int packet_do_bind(struct sock *sk, const char *name, int ifindex,
 	int ret = 0;
 	bool unlisted = false;
 
-	if (po->fanout)
-		return -EINVAL;
-
 	lock_sock(sk);
 	spin_lock(&po->bind_lock);
 	rcu_read_lock();
 
+	if (po->fanout) {
+		ret = -EINVAL;
+		goto out_unlock;
+	}
+
 	if (name) {
 		dev = dev_get_by_name_rcu(sock_net(sk), name);
 		if (!dev) {
