OpenVZ__vzkernel
commit d52a8b6053d85563410ac9225e06f050f6a67937
Author:     Cyrill Gorcunov <gorcunov@virtuozzo.com>
AuthorDate: Thu Jan 14 15:57:30 2016 +0400
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Sun Feb 21 20:14:07 2016 +0400

    ms/ovl: fix permission checking for setattr
    
    This fixes CVE-2015-8660.
    https://access.redhat.com/security/cve/cve-2015-8660
    
    ms commit: acff81ec2c79492b180fade3c2894425cd35a545
    
    From: Miklos Szeredi <miklos@szeredi.hu>
    
    [Al Viro] The bug is in being too enthusiastic about optimizing ->setattr()
    away - instead of "copy verbatim with metadata" + "chmod/chown/utimes"
    (with the former being always safe and the latter failing in case of
    insufficient permissions) it tries to combine these two.  Note that copyup
    itself will have to do ->setattr() anyway; _that_ is where the elevated
    capabilities are right.  Having these two ->setattr() (one to set verbatim
    copy of metadata, another to do what overlayfs ->setattr() had been asked
    to do in the first place) combined is where it breaks.
    
    Signed-off-by: Miklos Szeredi <miklos@szeredi.hu>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org>

diff --git a/fs/overlayfs/inode.c b/fs/overlayfs/inode.c
index ed923427f11a..1d2c32fea71c 100644
--- a/fs/overlayfs/inode.c
+++ b/fs/overlayfs/inode.c
@@ -49,13 +49,13 @@ int ovl_setattr(struct dentry *dentry, struct iattr *attr)
 	if (err)
 		goto out;
 
-	upperdentry = ovl_dentry_upper(dentry);
-	if (upperdentry) {
+	err = ovl_copy_up(dentry);
+	if (!err) {
+		upperdentry = ovl_dentry_upper(dentry);
+
 		mutex_lock(&upperdentry->d_inode->i_mutex);
 		err = notify_change(upperdentry, attr, NULL);
 		mutex_unlock(&upperdentry->d_inode->i_mutex);
-	} else {
-		err = ovl_copy_up_last(dentry, attr, false);
 	}
 	ovl_drop_write(dentry);
 out:
