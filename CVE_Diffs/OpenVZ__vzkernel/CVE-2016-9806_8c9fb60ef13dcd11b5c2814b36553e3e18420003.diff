OpenVZ__vzkernel
commit 8c9fb60ef13dcd11b5c2814b36553e3e18420003
Author:     Herbert Xu <herbert@gondor.apana.org.au>
AuthorDate: Mon May 16 17:28:16 2016 +0800
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Thu Mar 9 14:39:13 2017 +0400

    ms/netlink: Fix dump skb leak/double free
    
    When we free cb->skb after a dump, we do it after releasing the
    lock.  This means that a new dump could have started in the time
    being and we'll end up freeing their skb instead of ours.
    
    This patch saves the skb and module before we unlock so we free
    the right memory.
    
    Fixes: 16b304f3404f ("netlink: Eliminate kmalloc in netlink dump operation.")
    Reported-by: Baozeng Ding <sploving1@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    https://jira.sw.ru/browse/PSBM-60394
    
    https://bugzilla.redhat.com/show_bug.cgi?id=1401502
    CVE-2016-9806 kernel: netlink: double-free in netlink_dump
    
    (cherry picked from commit 92964c79b357efd980812c4de5c1fd2ec8bb5520)
    Signed-off-by: Konstantin Khorenko <khorenko@virtuozzo.com>

diff --git a/net/netlink/af_netlink.c b/net/netlink/af_netlink.c
index 6b1cce8eb56a..68795fb7e470 100644
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@ -2727,6 +2727,7 @@ static int netlink_dump(struct sock *sk)
 	struct netlink_callback *cb;
 	struct sk_buff *skb = NULL;
 	struct nlmsghdr *nlh;
+	struct module *module;
 	int len, err = -ENOBUFS;
 	int alloc_size;
 
@@ -2796,9 +2797,11 @@ static int netlink_dump(struct sock *sk)
 		cb->done(cb);
 
 	nlk->cb_running = false;
+	module = cb->module;
+	skb = cb->skb;
 	mutex_unlock(nlk->cb_mutex);
-	module_put(cb->module);
-	consume_skb(cb->skb);
+	module_put(module);
+	consume_skb(skb);
 	return 0;
 
 errout_skb:
