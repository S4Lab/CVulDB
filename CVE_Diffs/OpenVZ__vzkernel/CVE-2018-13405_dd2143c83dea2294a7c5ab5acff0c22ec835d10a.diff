OpenVZ__vzkernel
commit dd2143c83dea2294a7c5ab5acff0c22ec835d10a
Author:     Linus Torvalds <torvalds@linux-foundation.org>
AuthorDate: Fri Jul 20 18:35:53 2018 +0300
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Fri Jul 20 18:35:53 2018 +0300

    ms/fs: Fix up non-directory creation in SGID directories
    
    ms commit: 0fa3ecd87848 ("Fix up non-directory creation in SGID directories")
    
    sgid directories have special semantics, making newly created files in
    the directory belong to the group of the directory, and newly created
    subdirectories will also become sgid.  This is historically used for
    group-shared directories.
    
    But group directories writable by non-group members should not imply
    that such non-group members can magically join the group, so make sure
    to clear the sgid bit on non-directories for non-members (but remember
    that sgid without group execute means "mandatory locking", just to
    confuse things even more).
    
    Reported-by: Jann Horn <jannh@google.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    CVE-2018-13405
    https://jira.sw.ru/browse/PSBM-86796
    
    Signed-off-by: Evgenii Shatokhin <eshatokhin@virtuozzo.com>

diff --git a/fs/inode.c b/fs/inode.c
index 19c061d9fd54..036dcc14835c 100644
--- a/fs/inode.c
+++ b/fs/inode.c
@@ -1960,8 +1960,14 @@ void inode_init_owner(struct inode *inode, const struct inode *dir,
 	inode->i_uid = current_fsuid();
 	if (dir && dir->i_mode & S_ISGID) {
 		inode->i_gid = dir->i_gid;
+
+		/* Directories are special, and always inherit S_ISGID */
 		if (S_ISDIR(mode))
 			mode |= S_ISGID;
+		else if ((mode & (S_ISGID | S_IXGRP)) == (S_ISGID | S_IXGRP) &&
+			 !in_group_p(inode->i_gid) &&
+			 !capable_wrt_inode_uidgid(dir, CAP_FSETID))
+			mode &= ~S_ISGID;
 	} else
 		inode->i_gid = current_fsgid();
 	inode->i_mode = mode;
