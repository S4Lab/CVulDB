OpenVZ__vzkernel
commit 5a944bc75a7063e968206e9e433a39bee476f865
Author:     Arend van Spriel <arend.vanspriel@broadcom.com>
AuthorDate: Fri Jul 7 21:09:06 2017 +0100
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Tue Aug 8 13:14:03 2017 +0400

    ms/brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()
    
    The lower level nl80211 code in cfg80211 ensures that "len" is between
    25 and NL80211_ATTR_FRAME (2304).  We subtract DOT11_MGMT_HDR_LEN (24) from
    "len" so thats's max of 2280.  However, the action_frame->data[] buffer is
    only BRCMF_FIL_ACTION_FRAME_SIZE (1800) bytes long so this memcpy() can
    overflow.
    
            memcpy(action_frame->data, &buf[DOT11_MGMT_HDR_LEN],
                   le16_to_cpu(action_frame->len));
    
    Cc: stable@vger.kernel.org # 3.9.x
    Fixes: 18e2f61db3b70 ("brcmfmac: P2P action frame tx.")
    Reported-by: "freenerguo(郭大兴)" <freenerguo@tencent.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    (cherry picked from commit 8f44c9a41386729fea410e688959ddaa9d51be7c)
    
    CVE-2017-7541 kernel: Possible heap buffer overflow in brcmf_cfg80211_mgmt_tx()
    
    Possible heap buffer overflow vulnerability in brcmf_cfg80211_mgmt_tx() was
    found that can be triggered by sending crafted NL80211_CM_FRAME packet via
    netlink.
    
    https://bugzilla.redhat.com/show_bug.cgi?id=1473198
    https://jira.sw.ru/browse/PSBM-68818
    
    Signed-off-by: Konstantin Khorenko <khorenko@virtuozzo.com>

diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
index 62f475e31077..b20ecb91b3b5 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
@@ -4839,6 +4839,11 @@ brcmf_cfg80211_mgmt_tx(struct wiphy *wiphy, struct wireless_dev *wdev,
 		cfg80211_mgmt_tx_status(wdev, *cookie, buf, len, true,
 					GFP_KERNEL);
 	} else if (ieee80211_is_action(mgmt->frame_control)) {
+		if (len > BRCMF_FIL_ACTION_FRAME_SIZE + DOT11_MGMT_HDR_LEN) {
+			brcmf_err("invalid action frame length\n");
+			err = -EINVAL;
+			goto exit;
+		}
 		af_params = kzalloc(sizeof(*af_params), GFP_KERNEL);
 		if (af_params == NULL) {
 			brcmf_err("unable to allocate frame\n");
