OpenVZ__vzkernel
commit 7eb98fd635158f5dba7fc9d5a66c22004b426531
Author:     Jason Yan <yanaijie@huawei.com>
AuthorDate: Tue Jun 5 14:33:43 2018 +0300
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Tue Jun 5 14:33:43 2018 +0300

    ms/scsi: libsas: fix memory leak in sas_smp_get_phy_events()
    
    ML commit: 4a491b1ab11ca0556d2fda1ff1301e862a2d44c4
    
    We've got a memory leak with the following producer:
    
    while true;
    do cat /sys/class/sas_phy/phy-1:0:12/invalid_dword_count >/dev/null;
    done
    
    The buffer req is allocated and not freed after we return. Fix it.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    
    CVE-2018-7757
    https://jira.sw.ru/browse/PSBM-85057
    
    Signed-off-by: Evgenii Shatokhin <eshatokhin@virtuozzo.com>
    
    =====================
    Patchset description:
    
    scsi: libsas: two fixes for sas_smp_get_phy_events()
    
    https://jira.sw.ru/browse/PSBM-85057
    
    Here are 2 fixes for libsas from mainline:
    
    * scsi: libsas: fix memory leak in sas_smp_get_phy_events()
    This one fixes CVE-2018-7757.
    
    * scsi: libsas: fix error when getting phy events
    This patch is unrelated to CVE-2018-7757 but the problem it fixes shows
    up in the same conditions as for the first patch: when the user reads
    /sys/class/sas_phy/*/invalid_dword_count. The bug is in the same
    function, sas_smp_get_phy_events().

diff --git a/drivers/scsi/libsas/sas_expander.c b/drivers/scsi/libsas/sas_expander.c
index 527ebeb06a2f..e51942e709d8 100644
--- a/drivers/scsi/libsas/sas_expander.c
+++ b/drivers/scsi/libsas/sas_expander.c
@@ -684,6 +684,7 @@ int sas_smp_get_phy_events(struct sas_phy *phy)
 	phy->phy_reset_problem_count = scsi_to_u32(&resp[24]);
 
  out:
+	kfree(req);
 	kfree(resp);
 	return res;
 
