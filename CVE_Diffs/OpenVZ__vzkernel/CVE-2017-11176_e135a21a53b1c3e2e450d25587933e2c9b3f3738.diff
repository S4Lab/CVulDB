OpenVZ__vzkernel
commit e135a21a53b1c3e2e450d25587933e2c9b3f3738
Author:     Cong Wang <xiyou.wangcong@gmail.com>
AuthorDate: Mon Jul 17 19:04:54 2017 +0400
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Mon Jul 17 19:04:54 2017 +0400

    ms/mqueue: fix a use-after-free in sys_mq_notify()
    
    The retry logic for netlink_attachskb() inside sys_mq_notify()
    is nasty and vulnerable:
    
    1) The sock refcnt is already released when retry is needed
    2) The fd is controllable by user-space because we already
       release the file refcnt
    
    so we when retry but the fd has been just closed by user-space
    during this small window, we end up calling netlink_detachskb()
    on the error path which releases the sock again, later when
    the user-space closes this socket a use-after-free could be
    triggered.
    
    Setting 'sock' to NULL here should be sufficient to fix it.
    
    Reported-by: GeneBlue <geneblue.mail@gmail.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    ms commit: f991af3 ("mqueue: fix a use-after-free in sys_mq_notify()")
    
    CVE-2017-11176
    https://jira.sw.ru/browse/PSBM-68450
    
    Signed-off-by: Evgenii Shatokhin <eshatokhin@virtuozzo.com>

diff --git a/ipc/mqueue.c b/ipc/mqueue.c
index 9c1842200552..477fba9c459c 100644
--- a/ipc/mqueue.c
+++ b/ipc/mqueue.c
@@ -1244,8 +1244,10 @@ retry:
 
 			timeo = MAX_SCHEDULE_TIMEOUT;
 			ret = netlink_attachskb(sock, nc, &timeo, NULL);
-			if (ret == 1)
+			if (ret == 1) {
+				sock = NULL;
 				goto retry;
+			}
 			if (ret) {
 				sock = NULL;
 				nc = NULL;
