OpenVZ__vzkernel
commit ca29a283483adfa1864e9022c7d8e124359852a3
Author:     Eric W. Biederman <ebiederm@xmission.com>
AuthorDate: Tue Nov 27 18:47:38 2018 +0300
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Tue Dec 18 14:25:40 2018 +0300

    ms/net: Add variants of capable for use on on sockets
    
    ML commit: a3b299da869d6e78cf42ae0b1b41797bcb8c5e4b
    
    sk_net_capable - The common case, operations that are safe in a network namespace.
    sk_capable - Operations that are not known to be safe in a network namespace
    sk_ns_capable - The general case for special cases.
    
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    https://jira.sw.ru/browse/PSBM-90076
    This is a prerequisite for the fix for CVE-2018-14646.
    
    Re-diffed for vz7.73.x (context change).
    
    Signed-off-by: Evgenii Shatokhin <eshatokhin@virtuozzo.com>

diff --git a/include/net/sock.h b/include/net/sock.h
index 1b86b37fe884..0f9eb8a89cf0 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -2228,6 +2228,11 @@ static inline struct page_frag *sk_page_frag(struct sock *sk)
 
 extern bool sk_page_frag_refill(struct sock *sk, struct page_frag *pfrag);
 
+bool sk_ns_capable(const struct sock *sk,
+		   struct user_namespace *user_ns, int cap);
+bool sk_capable(const struct sock *sk, int cap);
+bool sk_net_capable(const struct sock *sk, int cap);
+
 /*
  *	Default write policy as shown to user space via poll/select/SIGIO
  */
