OpenVZ__vzkernel
commit d1412bc0f0df9f98b1b6835477d564bd5c5dcedf
Author:     Evgenii Shatokhin <eshatokhin@virtuozzo.com>
AuthorDate: Thu Jul 27 18:53:09 2017 +0400
Commit:     Konstantin Khorenko <khorenko@virtuozzo.com>
CommitDate: Thu Feb 1 16:45:27 2018 +0300

    ms/net/xfrm: validate 'dir' value in xfrm_migrate()
    
    Description from Bo Zhang <zhangbo5891001 () gmail com>
    (http://seclists.org/bugtraq/2017/Jul/30):
    
      xfrm migrate is a mechanism of kernel ipsec xfrm framework.
    
      When dealing with XFRM_MSG_MIGRATE message, xfrm_migrate func does not
      check dir value of xfrm_userpolicy_id. This will cause out of bound
      access to net->xfrm.policy_bydst in policy_hash_direct func and others
      when dir value exceeds XFRM_POLICY_MAX.
    
      The whole value of struct xfrm_userpolicy_id can be controlled by
      sending netlink message, and the out of bound addr can be expected; this
      may lead to potential security issue.
    
      Affected version: linux kernel 4.12 and lower
    
      PoC: send a crafted xfrm netlink message with type XFRM_MSG_MIGRATE
    
    CVE-2017-11600
    https://jira.sw.ru/browse/PSBM-69273
    
    Signed-off-by: Evgenii Shatokhin <eshatokhin@virtuozzo.com>
    Reviewed-by: Andrey Ryabinin <aryabinin@virtuozzo.com>

diff --git a/net/xfrm/xfrm_policy.c b/net/xfrm/xfrm_policy.c
index 4f5104bca031..4beed34440fb 100644
--- a/net/xfrm/xfrm_policy.c
+++ b/net/xfrm/xfrm_policy.c
@@ -3327,6 +3327,11 @@ int xfrm_migrate(const struct xfrm_selector *sel, u8 dir, u8 type,
 	if ((err = xfrm_migrate_check(m, num_migrate)) < 0)
 		goto out;
 
+	if (dir >= XFRM_POLICY_MAX) {
+		err = -EINVAL;
+		goto out;
+	}
+
 	/* Stage 1 - find policy */
 	if ((pol = xfrm_migrate_policy_find(sel, dir, type, net)) == NULL) {
 		err = -ENOENT;
