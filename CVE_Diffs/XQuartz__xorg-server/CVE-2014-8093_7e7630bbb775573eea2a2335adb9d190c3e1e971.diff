XQuartz__xorg-server
commit 7e7630bbb775573eea2a2335adb9d190c3e1e971
Author:     Robert Morell <rmorell@nvidia.com>
AuthorDate: Wed Nov 12 18:51:43 2014 -0800
Commit:     Alan Coopersmith <alan.coopersmith@oracle.com>
CommitDate: Mon Dec 8 18:09:50 2014 -0800

    glx: Fix mask truncation in __glXGetAnswerBuffer [CVE-2014-8093 6/6]
    
    On a system where sizeof(unsigned) != sizeof(intptr_t), the unary
    bitwise not operation will result in a mask that clears all high bits
    from temp_buf in the expression:
            temp_buf = (temp_buf + mask) & ~mask;
    
    Signed-off-by: Robert Morell <rmorell@nvidia.com>
    Reviewed-by: Alan Coopersmith <alan.coopersmith@oracle.com>
    Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>

diff --git a/glx/indirect_util.c b/glx/indirect_util.c
index de8149127..9ba28157c 100644
--- a/glx/indirect_util.c
+++ b/glx/indirect_util.c
@@ -73,7 +73,7 @@ __glXGetAnswerBuffer(__GLXclientState * cl, size_t required_size,
                      void *local_buffer, size_t local_size, unsigned alignment)
 {
     void *buffer = local_buffer;
-    const unsigned mask = alignment - 1;
+    const intptr_t mask = alignment - 1;
 
     if (local_size < required_size) {
         size_t worst_case_size;
