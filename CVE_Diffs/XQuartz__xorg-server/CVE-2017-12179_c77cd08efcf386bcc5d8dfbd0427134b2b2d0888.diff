XQuartz__xorg-server
commit c77cd08efcf386bcc5d8dfbd0427134b2b2d0888
Author:     Nathan Kidd <nkidd@opentext.com>
AuthorDate: Fri Jan 9 10:04:41 2015 -0500
Commit:     Adam Jackson <ajax@redhat.com>
CommitDate: Thu Oct 12 12:25:24 2017 -0400

    Xi: integer overflow and unvalidated length in (S)ProcXIBarrierReleasePointer
    
    [jcristau: originally this patch fixed the same issue as commit
     211e05ac85 "Xi: Test exact size of XIBarrierReleasePointer", with the
     addition of these checks]
    
    This addresses CVE-2017-12179
    
    Reviewed-by: Alan Coopersmith <alan.coopersmith@oracle.com>
    Reviewed-by: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
    Reviewed-by: Julien Cristau <jcristau@debian.org>
    Signed-off-by: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
    Signed-off-by: Nathan Kidd <nkidd@opentext.com>
    Signed-off-by: Julien Cristau <jcristau@debian.org>
    (cherry picked from commit d088e3c1286b548a58e62afdc70bb40981cdb9e8)

diff --git a/Xi/xibarriers.c b/Xi/xibarriers.c
index 0bc5761f3..b0a4a92a1 100644
--- a/Xi/xibarriers.c
+++ b/Xi/xibarriers.c
@@ -834,6 +834,8 @@ SProcXIBarrierReleasePointer(ClientPtr client)
     REQUEST_AT_LEAST_SIZE(xXIBarrierReleasePointerReq);
 
     swapl(&stuff->num_barriers);
+    if (stuff->num_barriers > UINT32_MAX / sizeof(xXIBarrierReleasePointerInfo))
+        return BadLength;
     REQUEST_FIXED_SIZE(xXIBarrierReleasePointerReq, stuff->num_barriers * sizeof(xXIBarrierReleasePointerInfo));
 
     info = (xXIBarrierReleasePointerInfo*) &stuff[1];
@@ -856,6 +858,9 @@ ProcXIBarrierReleasePointer(ClientPtr client)
     xXIBarrierReleasePointerInfo *info;
 
     REQUEST(xXIBarrierReleasePointerReq);
+    REQUEST_AT_LEAST_SIZE(xXIBarrierReleasePointerReq);
+    if (stuff->num_barriers > UINT32_MAX / sizeof(xXIBarrierReleasePointerInfo))
+        return BadLength;
     REQUEST_FIXED_SIZE(xXIBarrierReleasePointerReq, stuff->num_barriers * sizeof(xXIBarrierReleasePointerInfo));
 
     info = (xXIBarrierReleasePointerInfo*) &stuff[1];
